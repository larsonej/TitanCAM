%!PS-Adobe-2.0
%%DocumentFonts: Courier Times-Bold
%%Title: growevapl.f (mpage)
%%Creator: mpage 2.5.1pre2 March 1998
%%CreationDate: Sat Jan 11 20:03:54 2003
%%Orientation: Landscape
%%DocumentMedia: Letter 612 792
%%BoundingBox: 18 18 594 774
%%Pages: (atend)
%%EndComments

%%BeginProlog

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (growevapl.f) def end
/reencsmalldict 12 dict def /ReEncodeSmall { reencsmalldict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq { exch dup length array copy newfont 3 1 roll put } { exch newfont 3 1 roll put }
ifelse }
  { pop pop }
  ifelse } forall
newfont /FontName newfontname put
newcodesandnames aload pop newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/charvec [
026 /Scaron
027 /Ydieresis
028 /Zcaron
029 /scaron
030 /trademark
031 /zcaron
032 /space
033 /exclam
034 /quotedbl
035 /numbersign
036 /dollar
037 /percent
038 /ampersand
039 /quoteright
040 /parenleft
041 /parenright
042 /asterisk
043 /plus
044 /comma
045 /minus
046 /period
047 /slash
048 /zero
049 /one
050 /two
051 /three
052 /four
053 /five
054 /six
055 /seven
056 /eight
057 /nine
058 /colon
059 /semicolon
060 /less
061 /equal
062 /greater
063 /question
064 /at
065 /A
066 /B
067 /C
068 /D
069 /E
070 /F
071 /G
072 /H
073 /I
074 /J
075 /K
076 /L
077 /M
078 /N
079 /O
080 /P
081 /Q
082 /R
083 /S
084 /T
085 /U
086 /V
087 /W
088 /X
089 /Y
090 /Z
091 /bracketleft
092 /backslash
093 /bracketright
094 /asciicircum
095 /underscore
096 /quoteleft
097 /a
098 /b
099 /c
100 /d
101 /e
102 /f
103 /g
104 /h
105 /i
106 /j
107 /k
108 /l
109 /m
110 /n
111 /o
112 /p
113 /q
114 /r
115 /s
116 /t
117 /u
118 /v
119 /w
120 /x
121 /y
122 /z
123 /braceleft
124 /bar
125 /braceright
126 /asciitilde
127 /.notdef
128 /fraction
129 /florin
130 /quotesingle
131 /quotedblleft
132 /guilsinglleft
133 /guilsinglright
134 /fi
135 /fl
136 /endash
137 /dagger
138 /daggerdbl
139 /bullet
140 /quotesinglbase
141 /quotedblbase
142 /quotedblright
143 /ellipsis
144 /dotlessi
145 /grave
146 /acute
147 /circumflex
148 /tilde
149 /oe
150 /breve
151 /dotaccent
152 /perthousand
153 /emdash
154 /ring
155 /Lslash
156 /OE
157 /hungarumlaut
158 /ogonek
159 /caron
160 /lslash
161 /exclamdown
162 /cent
163 /sterling
164 /currency
165 /yen
166 /brokenbar
167 /section
168 /dieresis
169 /copyright
170 /ordfeminine
171 /guillemotleft
172 /logicalnot
173 /hyphen
174 /registered
175 /macron
176 /degree
177 /plusminus
178 /twosuperior
179 /threesuperior
180 /acute
181 /mu
182 /paragraph
183 /periodcentered
184 /cedilla
185 /onesuperior
186 /ordmasculine
187 /guillemotright
188 /onequarter
189 /onehalf
190 /threequarters
191 /questiondown
192 /Agrave
193 /Aacute
194 /Acircumflex
195 /Atilde
196 /Adieresis
197 /Aring
198 /AE
199 /Ccedilla
200 /Egrave
201 /Eacute
202 /Ecircumflex
203 /Edieresis
204 /Igrave
205 /Iacute
206 /Icircumflex
207 /Idieresis
208 /Eth
209 /Ntilde
210 /Ograve
211 /Oacute
212 /Ocircumflex
213 /Otilde
214 /Odieresis
215 /multiply
216 /Oslash
217 /Ugrave
218 /Uacute
219 /Ucircumflex
220 /Udieresis
221 /Yacute
222 /Thorn
223 /germandbls
224 /agrave
225 /aacute
226 /acircumflex
227 /atilde
228 /adieresis
229 /aring
230 /ae
231 /ccedilla
232 /egrave
233 /eacute
234 /ecircumflex
235 /edieresis
236 /igrave
237 /iacute
238 /icircumflex
239 /idieresis
240 /eth
241 /ntilde
242 /ograve
243 /oacute
244 /ocircumflex
245 /otilde
246 /odieresis
247 /divide
248 /oslash
249 /ugrave
250 /uacute
251 /ucircumflex
252 /udieresis
253 /yacute
254 /thorn
255 /ydieresis
] def
/Courier /OurCharSet charvec ReEncodeSmall
/textfont /OurCharSet findfont 11 scalefont def
/fnamefont /Times-Bold findfont 14 scalefont def
/headerfont /Times-Bold findfont 12 scalefont def
textfont setfont
(a) stringwidth pop /mp_a_x exch def
/kanj /Ryumin-Light-H findfont 11 scalefont def
/han /Ryumin-Light.Hankaku findfont 11 scalefont def
%%EndProlog
%%Page: 1 1
save
0 setlinewidth
18 18 moveto 0 756 rlineto
576 0 rlineto 0 -756 rlineto closepath stroke
18 396 moveto 576 0 rlineto stroke
gsave
18 774 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
6 mp_a_x mul 780 moveto (subroutine growevapl) show
0 768 moveto (c) show
0 756 moveto (c) show
0 744 moveto (c  @\(#\) growevapl_multi.f  Barth  Jan-2003) show
0 732 moveto (c  from growevapl.f  Ackerman  Dec-1995) show
0 720 moveto (c  This routine evaluate particle loss rates due to condensational) show
0 708 moveto (c  growth and evaporation for all condensing gases.  Handles growth) show
0 696 moveto (c  of multiple gases onto a particle) show
0 684 moveto (c) show
0 672 moveto (c  The loss rates for each group are <growlg> and <evaplg>.) show
0 660 moveto (c) show
0 648 moveto (c  Units are [s^-1].) show
0 636 moveto (c) show
0 624 moveto (c  Modified  Sep-1997  \(McKie\)) show
0 612 moveto (c  To calculate at one spatial point per call.) show
0 600 moveto (c  Globals <ix>, <iy>, <iz>, <ixy>, <ixyz> specify current spatial pt's indices.) show
0 588 moveto (c) show
0 576 moveto (c) show
0 564 moveto (c  Argument list input:) show
0 552 moveto (c) show
0 540 moveto (c  Argument list output:) show
0 528 moveto (c) show
0 516 moveto (c) show
0 504 moveto (c  Include global constants and variables) show
0 492 moveto (c) show
6 mp_a_x mul 480 moveto (include 'globaer.h') show
0 468 moveto (c) show
0 456 moveto (c) show
0 444 moveto (c  Local declarations) show
0 432 moveto (c ) show
6 mp_a_x mul 420 moveto (dimension otherm\(NELEM\), ieother\(NELEM\),) show
5 mp_a_x mul 408 moveto ($  dela\(NBIN\), delma\(NBIN\), aju\(NBIN\),) show
5 mp_a_x mul 396 moveto ($  ar\(NBIN\), al\(NBIN\), a6\(NBIN\),dHv\(NGAS\),) show
5 mp_a_x mul 384 moveto ($  dmdt\(NBIN\),alpha\(NBIN,NGAS\),beta\(NBIN,NGAS\),) show
5 mp_a_x mul 372 moveto ($  gamma\(NBIN,NGAS\),gromat\(NGAS,NGAS+1\),xx\(NGAS+1\)) show
0 360 moveto (c) show
0 348 moveto (c) show
0 336 moveto (c  Define formats) show
0 324 moveto (c) show
4 mp_a_x mul 312 moveto (1 format\(2i5,3x,f7.3,3x,f6.4,3x,1pe13.6\)) show
0 300 moveto (c) show
0 288 moveto (c) show
0 276 moveto (c  Announce entry to this routine) show
0 264 moveto (c) show
6 mp_a_x mul 252 moveto (if\( DEBUG \) write\(LUNOPRT,'\(/,a\)'\) 'Enter growevapl') show
0 240 moveto (c) show
0 228 moveto (c) show
0 216 moveto (c  Calculate particle fluxes due to growth and evaporation for all) show
0 204 moveto (c  particle groups.) show
0 192 moveto (c) show
6 mp_a_x mul 180 moveto (do igroup = 1,NGROUP) show
7 mp_a_x mul 156 moveto (do ielemg = 1,nelemg\(igroup\) !for growth from multiple gases in one) show
36 mp_a_x mul 144 moveto (!group) show
7 mp_a_x mul 120 moveto (iepart = ienconc\(igroup\) -1 + ielemg  ) show
7 mp_a_x mul 108 moveto (igas = igrowgas\(iepart\)      ! condensing gas) show
7 mp_a_x mul 84 moveto (if\( igas .ne. 0 \)then) show
0 72 moveto (c) show
0 60 moveto (c) show
0 48 moveto (c  Treat condensation of gas <igas> to/from particle group <igroup>.) show
0 36 moveto (c) show
0 24 moveto (c) show
0 12 moveto (c) show
0 0 moveto (c  Update maximum particle concentration for each spatial grid box) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
0 780 moveto (c  \(in units of cm^-3\)) show
0 768 moveto (c) show
8 mp_a_x mul 756 moveto (pconmax\(ixyz,igroup\) = SMALL_PC) show
8 mp_a_x mul 744 moveto (do ibin = 1,NBIN) show
10 mp_a_x mul 732 moveto (pconmax\(ixyz,igroup\) = max\( pconmax\(ixyz,igroup\),) show
5 mp_a_x mul 720 moveto ($                                pc3\(ixyz,ibin,iepart\) \)) show
8 mp_a_x mul 708 moveto (enddo) show
8 mp_a_x mul 696 moveto (pconmax\(ixyz,igroup\) = pconmax\(ixyz,igroup\) /) show
5 mp_a_x mul 684 moveto ($        \( xmet3\(ixyz\)*ymet3\(ixyz\)*zmet3\(ixyz\) \)) show
0 672 moveto (c) show
0 660 moveto (c  Bypass calculation if few particles are present ) show
0 648 moveto (c) show
8 mp_a_x mul 636 moveto (if\( pconmax\(ixyz,igroup\) .gt. FEW_PC \)then) show
9 mp_a_x mul 612 moveto (do ibin = 1,NBIN-1) show
0 600 moveto (c) show
0 588 moveto (c) show
0 576 moveto (c  Consider growth of average particle at radius <rup\(ibin\)>.) show
0 564 moveto (c ) show
0 552 moveto (c  Treat solute effect first: <asol> is solute factor.) show
0 540 moveto (c) show
0 528 moveto (c  Only need to treat solute effect if <nelemg\(igroup\)> > 1) show
0 516 moveto (c) show
10 mp_a_x mul 504 moveto (if\( nelemg\(igroup\) .le. 1 \)then) show
11 mp_a_x mul 480 moveto (argsol = 0.) show
10 mp_a_x mul 456 moveto (else) show
0 444 moveto (c) show
0 432 moveto (c  <condm> is mass concentration of condensed gas <igas> in particle.) show
0 420 moveto (c  <nother> is number of other elements in group having mass.) show
0 408 moveto (c  <otherm> are mass concentrations of other elements in particle group.) show
0 396 moveto (c  <othermtot> is total mass concentrations of other elements in particle.) show
0 384 moveto (c) show
11 mp_a_x mul 372 moveto (nother = 0) show
11 mp_a_x mul 360 moveto (othermtot = 0.) show
0 348 moveto (c) show
0 336 moveto (c) show
0 324 moveto (c  <ieoth_rel> is relative element number of other element in group.) show
0 312 moveto (c) show
11 mp_a_x mul 300 moveto (do ieoth_rel  = 2,nelemg\(igroup\)       ) show
0 288 moveto (c) show
0 276 moveto (c) show
0 264 moveto (c  <ieoth_abs> is absolute element number of other element.) show
0 252 moveto (c) show
13 mp_a_x mul 240 moveto (ieoth_abs = iepart + ieoth_rel - 1    ) show
13 mp_a_x mul 216 moveto (if\( itype\(ieoth_abs\) .eq. I_COREMASS \)then) show
14 mp_a_x mul 204 moveto (nother = nother + 1) show
14 mp_a_x mul 192 moveto (ieother\(nother\) = ieoth_abs) show
14 mp_a_x mul 180 moveto (otherm\(nother\) = pc3\(ixyz,ibin,ieoth_abs\)) show
14 mp_a_x mul 168 moveto (othermtot = othermtot + otherm\(nother\)) show
13 mp_a_x mul 156 moveto (endif) show
11 mp_a_x mul 132 moveto (enddo) show
11 mp_a_x mul 108 moveto (condm = rmass\(ibin,igroup\)*pc3\(ixyz,ibin,iepart\) - othermtot) show
11 mp_a_x mul 84 moveto (if\( condm .le. 0. \)then) show
0 72 moveto (c) show
0 60 moveto (c) show
0 48 moveto (c  Zero mass for the condensate -- <asol> is a small value << 1) show
0 36 moveto (c) show
13 mp_a_x mul 24 moveto (argsol = 1.e10     ) show
11 mp_a_x mul 0 moveto (else) show
grestore
restore
showpage
%%Page: 2 2
save
0 setlinewidth
18 18 moveto 0 756 rlineto
576 0 rlineto 0 -756 rlineto closepath stroke
18 396 moveto 576 0 rlineto stroke
gsave
18 774 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
0 780 moveto (c) show
0 768 moveto (c) show
0 756 moveto (c  Sum over masses of other elements in group for argument of solute factor.) show
0 744 moveto (c) show
13 mp_a_x mul 732 moveto (argsol = 0.) show
13 mp_a_x mul 720 moveto (do jother = 1,nother) show
15 mp_a_x mul 708 moveto (isol = isolelem\(ieother\(jother\)\)) show
15 mp_a_x mul 696 moveto (argsol = argsol ) show
5 mp_a_x mul 684 moveto ($                + sol_ions\(isol\)*otherm\(jother\)/solwtmol\(isol\)) show
13 mp_a_x mul 672 moveto (enddo ) show
13 mp_a_x mul 660 moveto (argsol = argsol*gwtmol\(igas\)/condm) show
11 mp_a_x mul 636 moveto (endif ) show
10 mp_a_x mul 612 moveto (endif    ! nelemg\(igroup\) > 1) show
0 600 moveto (c) show
0 588 moveto (c) show
0 576 moveto (c  <akas> is combined kelvin \(curvature\) and solute factors.) show
0 564 moveto (c) show
0 552 moveto (c  Ignore solute factor for ice particles.) show
0 540 moveto (c) show
10 mp_a_x mul 528 moveto (if\( is_grp_ice\(igroup\) \) then) show
12 mp_a_x mul 516 moveto (expon = akelvini\(iz,igas\) / rup\(ibin,igroup\)) show
10 mp_a_x mul 504 moveto (else) show
12 mp_a_x mul 492 moveto (expon = akelvin\(iz,igas\)  / rup\(ibin,igroup\) - argsol ) show
10 mp_a_x mul 480 moveto (endif) show
10 mp_a_x mul 468 moveto (expon = max\(-POWMAX, expon\)) show
10 mp_a_x mul 456 moveto (akas = exp\( expon \)) show
0 444 moveto (c ) show
0 432 moveto (c ) show
0 420 moveto (c  Trick for removing haze droplets from droplet bins:) show
0 408 moveto (c  allows haze droplets to exist under supersaturated conditions;) show
0 396 moveto (c  when below supersaturation, haze droplets will evaporate.) show
0 384 moveto (c) show
10 mp_a_x mul 372 moveto (if\( \(.not. is_grp_ice\(igroup\)\) .and. \(akas .lt. 1.\) .and.) show
5 mp_a_x mul 360 moveto ($        \(supsatl3\(ixyz,igas\) .lt. 0.\) \) akas = 1.) show
0 348 moveto (c) show
0 336 moveto (c) show
0 324 moveto (c  <dmdt> is growth rate in mass space [g/s].) show
0 312 moveto (c) show
10 mp_a_x mul 300 moveto (g0 =  gro\(iz,ibin+1,ielem\)) show
10 mp_a_x mul 288 moveto (g1 = gro1\(iz,ibin+1,ielem\)) show
10 mp_a_x mul 276 moveto (g2 = gro2\(iz,ielem\)) show
10 mp_a_x mul 264 moveto (g3 = gro3\(iz,ielem\)) show
10 mp_a_x mul 240 moveto (if\( is_grp_ice\(igroup\) \)then) show
12 mp_a_x mul 228 moveto (ss = supsati3\(ixyz,igas\)) show
12 mp_a_x mul 216 moveto (pvap = pvapi3\(ixyz,igas\)) show
10 mp_a_x mul 204 moveto (else) show
12 mp_a_x mul 192 moveto (ss = supsatl3\(ixyz,igas\)) show
12 mp_a_x mul 180 moveto (pvap = pvapl3\(ixyz,igas\)) show
10 mp_a_x mul 168 moveto (endif) show
10 mp_a_x mul 144 moveto (alpha\(ibin,igas\) = g0 * pvap / \(1. + g0*g1*pvap\)) show
10 mp_a_x mul 132 moveto (beta\(ibin,igas\) = ss - akas) show
10 mp_a_x mul 120 moveto (gamma\(ibin,igas\) = g1 * g3 * akas) show
10 mp_a_x mul 96 moveto (dHv\(igas\) = 1.d0/g2   !Latent heat) show
9 mp_a_x mul 72 moveto (enddo !ibin=1,NBIN-1) show
8 mp_a_x mul 60 moveto (endif !FEW_PC) show
7 mp_a_x mul 48 moveto (endif ! igas ne 0) show
6 mp_a_x mul 24 moveto (enddo !ielemg=1,nelemg\(igroup\)) show
7 mp_a_x mul 0 moveto (iepart = ienconc\(igroup\)) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
7 mp_a_x mul 780 moveto (igas = igrowgas\(iepart\)      ! condensing gas) show
6 mp_a_x mul 756 moveto (if\(igas .ne. 0\) then) show
7 mp_a_x mul 744 moveto (if\( pconmax\(ixyz,igroup\) .gt. FEW_PC \) then) show
8 mp_a_x mul 732 moveto (do ibin = 1,NBIN-1) show
0 708 moveto (c  Set up matrix of growth terms) show
10 mp_a_x mul 684 moveto (do nr = 1,NGAS  !loop over gases) show
12 mp_a_x mul 660 moveto (do nc = 1,NGAS+1) show
14 mp_a_x mul 636 moveto (if\(nr .eq. nc\) then) show
16 mp_a_x mul 612 moveto (gromat\(nr,nc\) = 1.) show
14 mp_a_x mul 588 moveto (else if\(nc .eq. NGAS+1\) then) show
16 mp_a_x mul 564 moveto (gromat\(nr,nc\) = alpha\(ibin,nr\)*beta\(ibin,nr\)) show
14 mp_a_x mul 540 moveto (else) show
16 mp_a_x mul 516 moveto (gromat\(nr,nc\) = alpha\(ibin,nr\) * ) show
5 mp_a_x mul 504 moveto ($                          gamma\(ibin,nr\) * dHv\(nc\)) show
14 mp_a_x mul 480 moveto (endif) show
12 mp_a_x mul 456 moveto (enddo) show
10 mp_a_x mul 444 moveto (enddo) show
0 420 moveto (c  Gaussian elimination) show
0 396 moveto (c  1. Reduce matrix to row-echelon form) show
0 384 moveto (c      \(Top row initially begins with leading 1\)) show
0 372 moveto (c      -Add multiples of top row to lower rows so all) show
0 360 moveto (c        entries below leading 1 become zeros) show
0 348 moveto (c      -Get leading 1 in top row of submatrix) show
10 mp_a_x mul 324 moveto (do i=1,NGAS-1) show
12 mp_a_x mul 312 moveto (do j=i+1,NGAS) show
14 mp_a_x mul 300 moveto (do nc=1,NGAS) show
16 mp_a_x mul 276 moveto (gromat\(j,nc\) = gromat\(j,nc\) - gromat\(j,nc\)*gromat\(j,i\)) show
14 mp_a_x mul 252 moveto (enddo) show
12 mp_a_x mul 240 moveto (enddo) show
12 mp_a_x mul 216 moveto (do nc=1,NGAS) show
14 mp_a_x mul 192 moveto (gromat\(i+1,nc\) = gromat\(i+1,nc\) / ) show
5 mp_a_x mul 180 moveto ($                          \(gromat\(i+1,nc\) * gromat\(i,i\)\)) show
12 mp_a_x mul 156 moveto (enddo) show
10 mp_a_x mul 144 moveto (enddo) show
0 120 moveto (c  2. Now work upward through matrix to solve for dm/dt's) show
10 mp_a_x mul 96 moveto (xx\(NGAS+1\) = -1.  ) show
10 mp_a_x mul 72 moveto (do i=NGAS,1,-1) show
12 mp_a_x mul 60 moveto (xx\(i\) = 0.) show
12 mp_a_x mul 48 moveto (do j=NGAS+1,i+1,-1) show
14 mp_a_x mul 24 moveto (xx\(i\) = xx\(i\) - gromat\(i,j\)*xx\(j\)) show
12 mp_a_x mul 0 moveto (enddo) show
grestore
restore
showpage
%%Page: 3 3
save
0 setlinewidth
18 18 moveto 0 756 rlineto
576 0 rlineto 0 -756 rlineto closepath stroke
18 396 moveto 576 0 rlineto stroke
gsave
18 774 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
10 mp_a_x mul 780 moveto (enddo) show
0 756 moveto (c  Growth rate for particle in <ibin> is sum of growth rates for each gas) show
10 mp_a_x mul 732 moveto (dmdt\(ibin\) = 0.) show
10 mp_a_x mul 720 moveto (do i=1,NGAS) show
12 mp_a_x mul 708 moveto (dmdt\(ibin\) = dmdt\(ibin\) + xx\(i\)) show
10 mp_a_x mul 696 moveto (enddo) show
10 mp_a_x mul 660 moveto (write\(LUNOTEMP,1\) ixyz,ibin,time/60.**2/365.25,) show
5 mp_a_x mul 648 moveto ($                      akas,dmdt\(ibin\)) show
9 mp_a_x mul 612 moveto (enddo     ! ibin = 1,NBIN-1) show
9 mp_a_x mul 588 moveto (iepart = ienconc\(igroup\)     ! element of particle number concentration   ) show
0 576 moveto (c) show
0 564 moveto (c) show
0 552 moveto (c  Now calculate condensation/evaporation production and loss rates.) show
0 540 moveto (c  Use Piecewise Polynomial Method [Colela and Woodard, J. Comp. Phys.,) show
0 528 moveto (c  54, 174-201, 1984]) show
0 516 moveto (c) show
0 504 moveto (c  First, use cubic fits to estimate concentration values at bin) show
0 492 moveto (c  boundaries) show
0 480 moveto (c) show
9 mp_a_x mul 468 moveto (do ibin = 2,NBIN-1) show
10 mp_a_x mul 444 moveto (dpc = pc3\(ixyz,ibin,iepart\) / dm\(ibin,igroup\)) show
10 mp_a_x mul 432 moveto (dpc1 = pc3\(ixyz,ibin+1,iepart\) / dm\(ibin+1,igroup\)) show
10 mp_a_x mul 420 moveto (dpcm1 = pc3\(ixyz,ibin-1,iepart\) / dm\(ibin-1,igroup\)) show
10 mp_a_x mul 408 moveto (ratt1 = dm\(ibin,igroup\) / ) show
5 mp_a_x mul 396 moveto ($      \( dm\(ibin-1,igroup\) + dm\(ibin,igroup\) + dm\(ibin+1,igroup\) \)) show
10 mp_a_x mul 384 moveto (ratt2 = \( 2.*dm\(ibin-1,igroup\) + dm\(ibin,igroup\) \) /) show
5 mp_a_x mul 372 moveto ($            \( dm\(ibin+1,igroup\) + dm\(ibin,igroup\) \)) show
10 mp_a_x mul 360 moveto (ratt3 = \( 2.*dm\(ibin+1,igroup\) + dm\(ibin,igroup\) \) /) show
5 mp_a_x mul 348 moveto ($            \( dm\(ibin-1,igroup\) + dm\(ibin,igroup\) \)) show
10 mp_a_x mul 336 moveto (dela\(ibin\) = ratt1 *) show
5 mp_a_x mul 324 moveto ($             \( ratt2*\(dpc1-dpc\) + ratt3*\(dpc-dpcm1\) \)) show
10 mp_a_x mul 312 moveto (delma\(ibin\) = 0.) show
10 mp_a_x mul 288 moveto (if\( \(dpc1-dpc\)*\(dpc-dpcm1\) .gt. 0. \)) show
5 mp_a_x mul 276 moveto ($       delma\(ibin\) = min\( abs\(dela\(ibin\)\), 2.*abs\(dpc-dpc1\),) show
5 mp_a_x mul 264 moveto ($            2.*abs\(dpc-dpcm1\) \) * abs\(dela\(ibin\)\)/dela\(ibin\)) show
9 mp_a_x mul 240 moveto (enddo     ! ibin = 2,NBIN-2) show
9 mp_a_x mul 216 moveto (do ibin = 2,NBIN-2) show
10 mp_a_x mul 192 moveto (dpc = pc3\(ixyz,ibin,iepart\) / dm\(ibin,igroup\)) show
10 mp_a_x mul 180 moveto (dpc1 = pc3\(ixyz,ibin+1,iepart\) / dm\(ibin+1,igroup\)) show
10 mp_a_x mul 168 moveto (dpcm1 = pc3\(ixyz,ibin-1,iepart\) / dm\(ibin-1,igroup\)) show
0 156 moveto (c) show
0 144 moveto (c) show
0 132 moveto (c  <ratx> and <den1> should be calculated in a setup routine) show
0 120 moveto (c  \(since they are time-independent\).) show
0 108 moveto (c) show
10 mp_a_x mul 96 moveto (rat1 = dm\(ibin,igroup\) /) show
5 mp_a_x mul 84 moveto ($            \( dm\(ibin,igroup\) + dm\(ibin+1,igroup\) \)) show
10 mp_a_x mul 72 moveto (rat2 = 2. * dm\(ibin+1,igroup\) * dm\(ibin,igroup\) /) show
5 mp_a_x mul 60 moveto ($           \( dm\(ibin,igroup\) + dm\(ibin+1,igroup\) \)) show
10 mp_a_x mul 48 moveto (rat3 = \( dm\(ibin-1,igroup\) + dm\(ibin,igroup\) \) /) show
5 mp_a_x mul 36 moveto ($           \( 2.*dm\(ibin,igroup\) + dm\(ibin+1,igroup\) \)) show
10 mp_a_x mul 24 moveto (rat4 = \( dm\(ibin+2,igroup\) + dm\(ibin+1,igroup\) \) /) show
5 mp_a_x mul 12 moveto ($           \( 2.*dm\(ibin+1,igroup\) + dm\(ibin,igroup\) \)) show
10 mp_a_x mul 0 moveto (den1 = dm\(ibin-1,igroup\) + dm\(ibin,igroup\) +) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
5 mp_a_x mul 780 moveto ($           dm\(ibin+1,igroup\) + dm\(ibin+2,igroup\)) show
0 768 moveto (c) show
0 756 moveto (c) show
0 744 moveto (c  <aju\(ibin\)> is the estimate for concentration \(dn/dm\) at bin) show
0 732 moveto (c  boundary <ibin>+1/2.) show
0 720 moveto (c) show
10 mp_a_x mul 708 moveto (aju\(ibin\) = dpc + rat1*\(dpc1-dpc\) + 1./den1 *) show
5 mp_a_x mul 696 moveto ($             \( rat2*\(rat3-rat4\)*\(dpc1-dpc\) -) show
5 mp_a_x mul 684 moveto ($             dm\(ibin,igroup\)*rat3*delma\(ibin+1\) +) show
5 mp_a_x mul 672 moveto ($             dm\(ibin+1,igroup\)*rat4*delma\(ibin\) \)) show
9 mp_a_x mul 648 moveto (enddo     ! ibin = 2,NBIN-2) show
0 636 moveto (c) show
0 624 moveto (c) show
0 612 moveto (c  Now construct polynomial functions in each bin) show
0 600 moveto (c) show
9 mp_a_x mul 588 moveto (do ibin = 3,NBIN-2) show
10 mp_a_x mul 564 moveto (al\(ibin\) = aju\(ibin-1\)) show
10 mp_a_x mul 552 moveto (ar\(ibin\) = aju\(ibin\)) show
9 mp_a_x mul 528 moveto (enddo) show
0 516 moveto (c) show
0 504 moveto (c) show
0 492 moveto (c  Use linear functions in first two and last two bins) show
0 480 moveto (c) show
9 mp_a_x mul 468 moveto (if\( NBIN .gt. 1 \) then) show
9 mp_a_x mul 456 moveto (ar\(2\) = aju\(2\)) show
9 mp_a_x mul 444 moveto (al\(2\) = pc3\(ixyz,1,iepart\)/dm\(1,igroup\) +) show
5 mp_a_x mul 432 moveto ($           \(rmassup\(1,igroup\)-rmass\(1,igroup\)\) /) show
5 mp_a_x mul 420 moveto ($           \(rmass\(2,igroup\)-rmass\(1,igroup\)\) *) show
5 mp_a_x mul 408 moveto ($           \(pc3\(ixyz,2,iepart\)/dm\(2,igroup\)-) show
5 mp_a_x mul 396 moveto ($           pc3\(ixyz,1,iepart\)/dm\(1,igroup\)\)) show
9 mp_a_x mul 384 moveto (ar\(1\) = al\(2\)) show
9 mp_a_x mul 372 moveto (al\(1\) = pc3\(ixyz,1,iepart\)/dm\(1,igroup\) +) show
5 mp_a_x mul 360 moveto ($           \(rmassup\(1,igroup\)/rmrat\(igroup\)-rmass\(1,igroup\)\) /) show
5 mp_a_x mul 348 moveto ($           \(rmass\(2,igroup\)-rmass\(1,igroup\)\) *) show
5 mp_a_x mul 336 moveto ($           \(pc3\(ixyz,2,iepart\)/dm\(2,igroup\)-) show
5 mp_a_x mul 324 moveto ($           pc3\(ixyz,1,iepart\)/dm\(1,igroup\)\)) show
9 mp_a_x mul 300 moveto (al\(NBIN-1\) = aju\(NBIN-2\)) show
9 mp_a_x mul 288 moveto (ar\(NBIN-1\) = pc3\(ixyz,NBIN-1,iepart\)/dm\(NBIN-1,igroup\) +) show
5 mp_a_x mul 276 moveto ($           \(rmassup\(NBIN-1,igroup\)-rmass\(NBIN-1,igroup\)\)) show
5 mp_a_x mul 264 moveto ($           / \(rmass\(NBIN,igroup\)-rmass\(NBIN-1,igroup\)\) *) show
5 mp_a_x mul 252 moveto ($           \(pc3\(ixyz,NBIN,iepart\)/dm\(NBIN,igroup\)-) show
5 mp_a_x mul 240 moveto ($           pc3\(ixyz,NBIN-1,iepart\)/dm\(NBIN-1,igroup\)\)) show
9 mp_a_x mul 228 moveto (al\(NBIN\) = ar\(NBIN-1\)) show
9 mp_a_x mul 216 moveto (ar\(NBIN\) = pc3\(ixyz,NBIN-1,iepart\)/dm\(NBIN-1,igroup\) +) show
5 mp_a_x mul 204 moveto ($           \(rmassup\(NBIN,igroup\)-rmass\(NBIN-1,igroup\)\)) show
5 mp_a_x mul 192 moveto ($           / \(rmass\(NBIN,igroup\)-rmass\(NBIN-1,igroup\)\) *) show
5 mp_a_x mul 180 moveto ($           \(pc3\(ixyz,NBIN,iepart\)/dm\(NBIN,igroup\)-) show
5 mp_a_x mul 168 moveto ($           pc3\(ixyz,NBIN-1,iepart\)/dm\(NBIN-1,igroup\)\)) show
9 mp_a_x mul 156 moveto (endif) show
0 144 moveto (c) show
0 132 moveto (c) show
0 120 moveto (c  Next, ensure that polynomial functions do not deviate beyond the) show
0 108 moveto (c  range [<al\(ibin\)>,<ar\(ibin\)>]) show
0 96 moveto (c) show
9 mp_a_x mul 84 moveto (do ibin = 1,NBIN) show
10 mp_a_x mul 60 moveto (dpc = pc3\(ixyz,ibin,iepart\) / dm\(ibin,igroup\)) show
10 mp_a_x mul 36 moveto (if\( \(ar\(ibin\)-dpc\)*\(dpc-al\(ibin\)\) .le. 0. \) then) show
12 mp_a_x mul 24 moveto (al\(ibin\) = dpc) show
12 mp_a_x mul 12 moveto (ar\(ibin\) = dpc) show
10 mp_a_x mul 0 moveto (endif) show
grestore
restore
showpage
%%Page: 4 4
save
0 setlinewidth
18 18 moveto 0 756 rlineto
576 0 rlineto 0 -756 rlineto closepath stroke
18 396 moveto 576 0 rlineto stroke
gsave
18 774 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
10 mp_a_x mul 768 moveto (test1 = \(ar\(ibin\)-al\(ibin\)\)*\(dpc - 0.5*\(al\(ibin\)+ar\(ibin\)\)\)) show
10 mp_a_x mul 756 moveto (test2 = 1./6.*\(ar\(ibin\)-al\(ibin\)\)**2) show
10 mp_a_x mul 732 moveto (if\( test1 .gt. test2 \) then) show
13 mp_a_x mul 720 moveto (al\(ibin\) = 3.*dpc - 2.*ar\(ibin\)) show
10 mp_a_x mul 708 moveto (elseif\( test1 .lt. -test2 \) then) show
13 mp_a_x mul 696 moveto (ar\(ibin\) = 3.*dpc - 2.*al\(ibin\)) show
10 mp_a_x mul 684 moveto (endif) show
9 mp_a_x mul 660 moveto (enddo) show
0 648 moveto (c) show
0 636 moveto (c) show
0 624 moveto (c  Lastly, calculate fluxes across each bin boundary.) show
0 612 moveto (c) show
0 600 moveto (c  Use upwind advection when courant number > 1.) show
0 588 moveto (c  ) show
9 mp_a_x mul 576 moveto (do ibin = 1,NBIN) show
10 mp_a_x mul 552 moveto (dpc = pc3\(ixyz,ibin,iepart\) / dm\(ibin,igroup\)) show
10 mp_a_x mul 540 moveto (dela\(ibin\) = ar\(ibin\) - al\(ibin\)) show
10 mp_a_x mul 528 moveto (a6\(ibin\) = 6. * \( dpc - 0.5*\(ar\(ibin\)+al\(ibin\)\) \)) show
9 mp_a_x mul 504 moveto (enddo) show
9 mp_a_x mul 480 moveto (do ibin = 1,NBIN-1) show
10 mp_a_x mul 456 moveto (com2  = \( dm\(ibin,igroup\) + dm\(ibin+1,igroup\) \) / 2.) show
10 mp_a_x mul 444 moveto (x = abs\( dmdt\(ibin\)*dtime/dm\(ibin,igroup\) \)) show
10 mp_a_x mul 420 moveto (if\( dmdt\(ibin\) .gt. 0. \)then) show
11 mp_a_x mul 396 moveto (if\( x .lt. 1. \)then) show
12 mp_a_x mul 384 moveto (growlg\(ibin,igroup\) = dmdt\(ibin\)/pc3\(ixyz,ibin,iepart\)) show
5 mp_a_x mul 372 moveto ($                 * \( ar\(ibin\) - 0.5*dela\(ibin\)*x +) show
5 mp_a_x mul 360 moveto ($                 \(x/2. - x**2/3.\)*a6\(ibin\) \)) show
11 mp_a_x mul 348 moveto (else) show
12 mp_a_x mul 336 moveto (growlg\(ibin,igroup\) = dmdt\(ibin\) / com2          ! upwind advection) show
11 mp_a_x mul 324 moveto (endif) show
10 mp_a_x mul 300 moveto (elseif\( dmdt\(ibin\) .lt. 0. \)then) show
11 mp_a_x mul 276 moveto (if\( x .lt. 1. \)then) show
12 mp_a_x mul 264 moveto (evaplg\(ibin+1,igroup\) = -dmdt\(ibin\)/) show
5 mp_a_x mul 252 moveto ($                 pc3\(ixyz,ibin+1,iepart\)) show
5 mp_a_x mul 240 moveto ($                 * \( al\(ibin+1\) + 0.5*dela\(ibin+1\)*x +) show
5 mp_a_x mul 228 moveto ($                 \(x/2. - \(x**2\)/3.\)*a6\(ibin+1\) \)) show
11 mp_a_x mul 216 moveto (else) show
12 mp_a_x mul 204 moveto (evaplg\(ibin+1,igroup\) = -dmdt\(ibin\) / com2       ! upwind advection) show
11 mp_a_x mul 192 moveto (endif) show
0 180 moveto (c) show
0 168 moveto (c) show
0 156 moveto (c  Boundary conditions: for evaporation out of first bin \(with cores\), ) show
0 144 moveto (c  use evaporation rate from second bin.) show
0 132 moveto (c  ) show
11 mp_a_x mul 120 moveto (if\( ibin .eq. 1 .and. ncore\(igroup\) .gt. 0\) then) show
13 mp_a_x mul 108 moveto (evaplg\(1,igroup\) = -dmdt\(1\) / dm\(1,igroup\)) show
11 mp_a_x mul 96 moveto (endif) show
10 mp_a_x mul 72 moveto (endif) show
0 60 moveto (c) show
0 48 moveto (c) show
0 36 moveto (c  Limit growth rates to reasonable values) show
0 24 moveto (c) show
10 mp_a_x mul 12 moveto (growlg\(ibin,igroup\) = min\( growlg\(ibin,igroup\), 1.e10*ONE \)) show
10 mp_a_x mul 0 moveto (evaplg\(ibin+1,igroup\) = min\( evaplg\(ibin+1,igroup\),) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 378 0 rlineto 0 -576 rlineto closepath clip
378 80 mp_a_x mul div 576 792 div scale
4 7 translate 370 378 div 784 792 div scale
textfont setfont
5 mp_a_x mul 780 moveto ($                                 1.e10*ONE \)) show
9 mp_a_x mul 756 moveto (enddo    ! ibin = 1,NBIN-1) show
8 mp_a_x mul 732 moveto (endif     ! \(pconmax .gt. FEW_PC\)) show
7 mp_a_x mul 720 moveto (endif      ! \(igas = igrowgas\(ielem\)\) .ne. 0 ) show
6 mp_a_x mul 708 moveto (enddo       ! igroup = 1,NGROUP) show
0 696 moveto (c) show
0 684 moveto (c) show
0 672 moveto (c  Return to caller with particle loss rates for growth and evaporation) show
0 660 moveto (c  evaluated.) show
0 648 moveto (c) show
6 mp_a_x mul 636 moveto (return) show
6 mp_a_x mul 624 moveto (end) show
grestore
restore
showpage
%%Trailer
%%Pages: 4
