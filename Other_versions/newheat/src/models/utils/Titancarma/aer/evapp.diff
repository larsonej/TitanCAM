14a15,18
> c  Modified  Sep-1997  (McKie)
> c  To calculate at one spatial point per call.
> c  Globals <ix>, <iy>, <iz>, <ixy>, <ixyz> specify current spatial pt's indices.
> c
28c32
<       dimension prob(MAXNBINS), evcore(MAXNELEM)
---
>       dimension prob(NBIN), evcore(NELEM)
33d36
< c  <sigmono> is criterion for a monodisperse core mass distribution.
35,36c38
<       save sigmono
<       data sigmono / 1.e-4 /
---
> c  <SIG_MONO> is criterion for a monodisperse core mass distribution
38c40
< c  <cmd_exp> is exponent of core mass in the probability distribution function.
---
>       parameter( SIG_MONO = ALMOST_ZERO )
40,41d41
<       save cmpdf_exp
<       data cmpdf_exp / -1.5 /
43c43
< c  <wt_tiny> is criterion for a weighting probability that is nearly 0.
---
> c  <CMPDF_EXP> is exponent of core mass in the probability distribution function
45,46c45
<       save wt_tiny
<       data wt_tiny / 1.e-10 /
---
>       parameter( CMPDF_EXP = -1.5 )
51,54c50,53
<     1 format(/,'warning in evapp: total evap. core mass > rmass(nbins)',
<      $       /,'  itime, ixyz, i, number created = ',3i5,1pe11.3)
<     2 format(/,'warning in evapp: total evap. core mass < rmass(1)',
<      $       /,'  itime, ixyz, i, number depleted= ',3i5,1pe11.3)
---
>     1 format(/,'warning in evapp: tot evap. core mass > rmass(NBIN)',
>      $       /,'  itime, ixyz, i, number created = ',3i8,1pe11.3)
>     2 format(/,'warning in evapp: tot evap. core mass < rmass(1)',
>      $       /,'  itime, ixyz, i, number depleted= ',3i8,1pe11.3)
55a55
> c
58d57
< c
62a62
> c
64a65,79
> c
> c  Set evaporation production rates to zero to avoid double-application
> c  of rates calculated in growp.f
> c
>       do ielem = 1,NELEM
>         do i = 1,NBIN
>           evappe(i,ielem) = 0.
>         enddo
>       enddo
> c
> c
> c  Calculate source terms due to evaporation
> c
> c
> c
67c82
<       do ig = 1,ngroups
---
>       do ig = 1,NGROUP
72a88
>        if( itype(iecor1) .ne. I_VOLCORE ) then
78,80c94
<         do i = 1,nbins                ! source bin for evaporation
<  
<          do ixyz = 1,nxyz
---
>         do i = 1,NBIN                ! source bin for evaporation
86c100,102
<           if( evaplg(ixyz,i,ig) .gt. 0. )then
---
>           evdrop = pc3(ixyz,i,iepart)*evaplg(i,ig)
> c         if(ixyz .eq. 1) 
> c    $      print *, 'evdrop',evdrop,pc3(1,i,iepart),evaplg(i,ig)
88c104
<            evdrop = pc3(ixyz,i,iepart)*evaplg(ixyz,i,ig)
---
>           if( evdrop .gt. 0. )then
90c106
<            totevap(ixyz,i,ig) = .false.
---
>            totevap(i,ig) = .false.
103c119
<            cmf(ixyz,i,ig) = coreavg / rmass(i,ig)
---
>            cmf(i,ig) = coreavg / rmass(i,ig)
117c133
<            evap_mass = ( rmrat(ig)*cmf(ixyz,i,ig) .ge. ALMOST_ONE )
---
>            evap_mass = ( rmrat(ig)*cmf(i,ig) .ge. ONE )
125c141
<            core_too_big   = coreavg .gt. rmass(nbins,igto) 
---
>            core_too_big   = coreavg .ge. rmass(NBIN,igto)
139,140c155,157
<              iavg =  int( log( coreavg / rmassmin(igto) ) /
<      $                    log( rmrat(igto) ) ) + 2
---
>              iavg = log( coreavg / rmassmin(igto) ) /
>      $              log( rmrat(igto) ) + 2
>              iavg = min( iavg, NBIN )
143,147c160,161
<              coresig = log( smf / cmf(ixyz,i,ig)**2 )
<              coresig = max( sigmono, coresig )
< 
< c This is a dummy value of <inucmin> for now (must be >= 1).
< c            inucmin(igto) = 1
---
>              coresig = log( smf / cmf(i,ig)**2 )
>              coresig = max( SIG_MONO, coresig )
148a163
> c
151,152c166,167
< c  [ [ core is smaller than the smallest CN recently nucleated ] OR 
< c  [ core mass distribution is monodisperse ] ].
---
> c  [ [ core mass distribution is monodisperse ] OR
> c    [ core is smaller than the smallest CN recently nucleated ] ]
154c169
<              evap_mom  = rmrat(ig)**2 * smf .ge. ALMOST_ONE
---
>              evap_mom  = rmrat(ig)**2 * smf .ge. ONE
157c172
<      $                 ( ( coresig .le. sigmono ) .or.
---
>      $                 ( ( coresig .le. SIG_MONO ) .or.
176c191
<             totevap(ixyz,i,ig) = .true.
---
>             totevap(i,ig) = .true.
183c198
<              factor = coreavg / rmass(nbins,igto)
---
>              factor = coreavg / rmass(NBIN,igto)
185,188c200,205
<              created = evdrop * ( factor - 1. ) * dtime
<              if( created .gt. SMALL_PC )then
<                write(LUNOPRT,1) itime, ixyz, i, created
<              endif
---
>              created = ( evdrop * ( factor - ONE ) * dtime )
>      $          / ( xmet3(ixyz)*ymet3(ixyz)*zmet3(ixyz) )
> 
> c            if( created .gt. FEW_PC )then
> c              write(LUNOPRT,1) itime, ixyz, i, created
> c            endif
192c209
<              evappe(ixyz,nbins,ieto) = evappe(ixyz,nbins,ieto) +
---
>              evappe(NBIN,ieto) = evappe(NBIN,ieto) +
195,196c212,214
<              if(evappe(ixyz,nbins,ieto) .lt. 0.) 
<      $           print *,'ev1',evappe(ixyz,nbins,ieto)
---
> c            if(evappe(NBIN,ieto) .lt. 0.)
> c    $
>              print *,'ev1',evappe(NBIN,ieto)
204,205c222,223
<                evappe(ixyz,nbins,ie2cn) = evappe(ixyz,nbins,ie2cn) +
<      $            factor * evcore(ic) * rmass(nbins,igto)
---
>                evappe(NBIN,ie2cn) = evappe(NBIN,ie2cn) +
>      $            factor * evcore(ic) * rmass(NBIN,igto)
207,208c225,227
<              if(evappe(ixyz,nbins,ie2cn) .lt. 0.) 
<      $           print *,'ev2',evappe(ixyz,nbins,ie2cn)
---
> c            if(evappe(NBIN,ie2cn) .lt. 0.)
> c    $    
>              print *,'ev2',evappe(NBIN,ie2cn)
212d230
<                
220,223c238,243
<              depleted = evdrop * ( 1. - factor ) * dtime
<              if( depleted .gt. SMALL_PC )then
<                write(LUNOPRT,2) itime, ixyz, i, depleted
<              endif
---
>              depleted = ( evdrop * ( ONE - factor ) * dtime )
>      $          / ( xmet3(ixyz)*ymet3(ixyz)*zmet3(ixyz) )
> 
> c            if( depleted .gt. FEW_PC )then
> c              write(LUNOPRT,2) itime, ixyz, i, depleted
> c            endif
227c247
<              evappe(ixyz,1,ieto) = evappe(ixyz,1,ieto) + factor * evdrop
---
>              evappe(1,ieto) = evappe(1,ieto) + factor * evdrop
229,230c249,250
<              if(evappe(ixyz,1,ieto) .lt. 0.) 
<      $           print *,'ev3',evappe(ixyz,1,ieto)
---
>              if(evappe(1,ieto) .lt. 0.)
>      $           print *,'ev3',evappe(1,ieto)
238c258
<                evappe(ixyz,1,ie2cn) = evappe(ixyz,1,ie2cn) +
---
>                evappe(1,ie2cn) = evappe(1,ie2cn) +
241,242c261,263
<              if(evappe(ixyz,1,ie2cn) .lt. 0.) 
<      $           print *,'ev4',evappe(ixyz,1,ie2cn)
---
> c            if(evappe(1,ie2cn) .lt. 0.)
> c    $
>              print *,'ev4',evappe(1,ie2cn)
254,255c275,277
<                ito =  int( log( coreavg / rmassmin(igto) ) /
<      $                     log( rmrat(igto) ) ) + 2
---
>                ito = log( coreavg / rmassmin(igto) ) /
>      $               log( rmrat(igto) ) + 2
>                ito = min( ito, NBIN )
263c285
<              evappe(ixyz,ito-1,ieto) = evappe(ixyz,ito-1,ieto) +
---
>              evappe(ito-1,ieto) = evappe(ito-1,ieto) +
266,267c288,289
<              if(evappe(ixyz,ito-1,ieto) .lt. 0.) 
<      $           print *,'ev5',evappe(ixyz,ito-1,ieto),ito,igto,
---
>              if(evappe(ito-1,ieto) .lt. 0.)
>      $         print *,'ev5',evappe(ito-1,ieto),ito,igto,
271,272c293,294
<              evappe(ixyz,ito  ,ieto) = evappe(ixyz,ito  ,ieto) +
<      $                                 evdrop * ( 1. - fracmass )
---
>              evappe(ito,ieto) = evappe(ito,ieto) +
>      $              evdrop * ( ONE - fracmass )
274,276c296,298
<              if(evappe(ixyz,ito,ieto) .lt. 0.) then 
<                  print *,'ev6',evappe(ixyz,ito,ieto)
<                  evappe(ixyz,ito,ieto) = 0.
---
>              if(evappe(ito,ieto) .lt. 0.) then
>                  print *,'ev6',evappe(ito,ieto)
>                  evappe(ito,ieto) = 0.
292c314
<                evappe(ixyz,ito-1,ie2cn) = evappe(ixyz,ito-1,ie2cn) +
---
>                evappe(ito-1,ie2cn) = evappe(ito-1,ie2cn) +
295,296c317,319
<              if(evappe(ixyz,ito-1,ie2cn) .lt. 0.) 
<      $           print *,'ev7',evappe(ixyz,ito-1,ie2cn)
---
> c            if(evappe(ito-1,ie2cn) .lt. 0.)
> c    $
>              print *,'ev7',evappe(ito-1,ie2cn)
298,299d320
<                evappe(ixyz,ito  ,ie2cn) = evappe(ixyz,ito  ,ie2cn) +
<      $                rmass(ito  ,igto) * evcore(ic) * ( 1. - fracmass )
300a322,323
>                evappe(ito,ie2cn) = evappe(ito  ,ie2cn) +
>      $                rmass(ito,igto) * evcore(ic) * ( ONE - fracmass )
302,303c325,327
<              if(evappe(ixyz,ito,ie2cn) .lt. 0.) 
<      $           print *,'ev8',evappe(ixyz,ito,ie2cn)
---
> c            if(evappe(ito,ie2cn) .lt. 0.)
> c    $
>              print *,'ev8',evappe(ito,ie2cn)
317c341
<             totevap(ixyz,i,ig) = .true.
---
>             totevap(i,ig) = .true.
330c354
<             do ito = inucmin(igto), nbins
---
>             do ito = inucmin(igto), NBIN
367c391
<               if( weightl .le. wt_tiny )then
---
>               if( (ONE + weightl) .eq. ONE )then
369,370c393,394
<               else
<                 if( (1. - weightl) .le. wt_tiny ) weightl = 1.
---
>               else if( (ONE - weightl) .le. 0. )then
>                 weightl = ONE
373c397
<             weights = 1. - weightl
---
>             weights = ONE - weightl
379c403
<             do ito = inucmin(igto), nbins
---
>             do ito = inucmin(igto), NBIN
389c413
<               evappe(ixyz,ito,ieto) = evappe(ixyz,ito,ieto) +
---
>               evappe(ito,ieto) = evappe(ito,ieto) +
392,393c416,418
<              if(evappe(ixyz,ito,ieto) .lt. 0.) 
<      $           print *,'ev9',evappe(ixyz,ito,ieto)
---
> c            if(evappe(ito,ieto) .lt. 0.)
> c    $
>              print *,'ev9',evappe(ito,ieto)
402,403c427
<                 evappe(ixyz,ito,ie2cn) = evappe(ixyz,ito,ie2cn) +
< c    $             pc3(ixyz,i,iecore) * evaplg(ixyz,i,ig) *
---
>                 evappe(ito,ie2cn) = evappe(ito,ie2cn) +
407,408c431,433
<              if(evappe(ixyz,ito,ie2cn) .lt. 0.) 
<      $           print *,'ev10',evappe(ixyz,ito,ie2cn)
---
> c            if(evappe(ito,ie2cn) .lt. 0.)
> c    $
>              print *,'ev10',evappe(ito,ie2cn)
420c445
<             evappe(ixyz,i-1,iepart) = evdrop
---
>             evappe(i-1,iepart) = evdrop
421a447,448
>              if(evappe(i-1,iepart) .lt. 0.)
>      $         print *,'ev11',evappe(i-1,iepart)
423,425d449
<              if(evappe(ixyz,i-1,iepart) .lt. 0.) 
<      $           print *,'ev11',evappe(ixyz,i-1,iepart)
< 
429,430c453,454
<               evappe(ixyz,i-1,ielem) = evappe(ixyz,i-1,ielem) +
<      $           pc3(ixyz,i,ielem) * evaplg(ixyz,i,ig)
---
>               evappe(i-1,ielem) = evappe(i-1,ielem) +
>      $           pc3(ixyz,i,ielem) * evaplg(i,ig)
431a456,457
>              if(evappe(i-1,ielem) .lt. 0.)
>      $         print *,'ev12',evappe(i-1,ielem)
433,435d458
<              if(evappe(ixyz,i-1,ielem) .lt. 0.) 
<      $           print *,'ev12',evappe(ixyz,i-1,ielem)
< 
439,441c462,463
<           endif    ! evaplg gt 0
<          enddo     ! ixyz=1,nxyz
<         enddo      ! i=1,nbins
---
>           endif    ! evdrop gt 0
>         enddo      ! i=1,NBIN
442a465
>        endif
449,451c472,473
<         do i = 2,nbins
<          do ixyz = 1,nxyz
<           if( evaplg(ixyz,i,ig) .gt. 0. )then
---
>         do i = 2,NBIN
>           if( evaplg(i,ig) .gt. 0. )then
453,454c475,476
<             evappe(ixyz,i-1,iepart) = evappe(ixyz,i-1,iepart) +
<      $         pc3(ixyz,i,iepart) * evaplg(ixyz,i,ig)
---
>             evappe(i-1,iepart) = evappe(i-1,iepart) +
>      $         pc3(ixyz,i,iepart) * evaplg(i,ig)
455a478,480
> c            if(evappe(i-1,iepart) .lt. 0.)
> c    $  
>              print *,'ev13',evappe(i-1,iepart)
457,459d481
<              if(evappe(ixyz,i-1,iepart) .lt. 0.) 
<      $           print *,'ev13',evappe(ixyz,i-1,iepart)
< 
461,462c483
<          enddo     ! ixyz=1,nxyz
<         enddo      ! i=2,nbins
---
>         enddo      ! i=2,NBIN
464c485
<       enddo        ! ig=1,ngroups
---
>       enddo        ! ig=1,NGROUP
