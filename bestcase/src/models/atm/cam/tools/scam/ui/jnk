LD(1)								      LD(1)


NNNNAAAAMMMMEEEE
     lllldddd	- Link editor

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     lllldddd	[----33332222] [----66664444] [----aaaa] [----aaaabbbbiiii]	[----aaaajjjjeeeeoooopppp] [----aaaallllllll]	[----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp]
     [----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg] [----aaaalllllllloooowwww____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----aaaaoooouuuuttttkkkkeeeeeeeepppp] [----BBBB _n_u_m]
     [----BBBBssssyyyymmmmbbbboooolllliiiicccc] [----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd] [----cccccccckkkkrrrr] [----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----ccccxxxxxxxx] [----dddd] [----DDDD _n_u_m] [----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd]	[----ddddeeeellllaaaayyyy____llllooooaaaadddd] [----ddddeeeemmmmaaaannnngggglllleeee]
     [----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----dddd] [----eeee _s_y_m_b_o_l] [----eeeellllffff] [----eeeellllssssmmmmaaaapppp] [----eeeellllssssppppeeeecccc _f_i_l_e]
     [----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn] [----eeeexxxxcccclllluuuuddddeeee	_o_b_j_e_c_t]	[----eeeexxxxppppoooorrrrttttssss] [----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e]
     [----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----ffff	_f_i_l_l] [----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l_s]
     [----ffffoooorrrrcccceeee____llllooooaaaadddd] [----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e] [----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]
     [----GGGG [_n_u_m]]	[----ggggppppiiiinnnnffffoooo] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____iiiinnnniiiitttt] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____ssssttttaaaarrrrtttt____iiiinnnniiiitttt] [----hhhh]
     [----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e] [----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----hhhhiiiiddddeeeessss]
     [----IIII _p_a_t_h_n_a_m_e] [----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr] [----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd]	[----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn]
     [----iiiinnnnffffoooo] [----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l] [----iiiivvvvppppaaaadddd] [----llll _x] [----LLLL _d_i_r] [----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::............]
     [----LLLLDDDD____MMMMSSSSGGGG::::............]  [----mmmm] [----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e] [----mmmmiiiippppssss2222] [----mmmmiiiippppssss3333] [----mmmmiiiippppssss4444]
     [----mmmmmmmmaaaapppp] [----nnnn] [----NNNN] [----nnnn33332222] [----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee] [----nnnnooooiiiinnnnffffoooo] [----nnnnooooiiiivvvvppppaaaadddd]
     [----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt] [----nnnnoooo____rrrrqqqqssss] [----nnnnoooonnnneeee]
     [----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd] [----nnnnoooo____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooossssttttddddlllliiiibbbb] [----nnnnoooottttaaaallllllll]
     [----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk] [----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd] [----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e]
     [----oooo _o_u_t_f_i_l_e] [----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo] [----rrrr] [----rrrreeeeaaaadddd] [----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd]
     [----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee] [----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h] [----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr] [----ssss]
     [----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g] [----sssshhhhaaaarrrreeeedddd] [----sssshhhhoooowwww] [----sssshhhhoooowwww____uuuunnnnrrrreeeeffff]
     [----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e] [----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444] [----TTTT _n_u_m]
     [----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]	[----uuuu _s_y_m_n_a_m_e] [----UUUU] [----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----vvvv] [----VVVV] [----VVVVSSSS _n_u_m] [----wwww] [----WWWWxxxx] [----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----wwwwooooffffffff _n_u_m_l_i_s_t] [----xxxx]
     [----XXXXllllooooccccaaaallll _n_a_m_e_s] [----yyyy_s_y_m] [----zzzz] _f_i_l_e ...

IIIIMMMMPPPPLLLLEEEEMMMMEEEENNNNTTTTAAAATTTTIIIIOOOONNNN
     IRIX systems

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     lllldddd, the link editor, links	ELF object files to create an executable
     file.  lllldddd uses the	archive	format created by the archiver,	aaaarrrr(1).

     The lllldddd command combines several object files into one, performs
     relocation, resolves external symbols, builds tables and relocation
     information for run-time linkage (in case of shared linking), and
     supports symbol table information for symbolic debugging.	In the
     simplest case, the	names of several object	files are specified, and lllldddd
     combines them.  This produces an object module that can be	executed or
     used as input for a subsequent lllldddd run.  By	default, the output from lllldddd
     is	left in	file aaaa....oooouuuutttt.

     Input sections are	linked together	contiguously into output sections.
     Output sections are organized in an ELF file into loadable	segments
     specified in the program header.  Segments	represent a contiguous
     portion of	the file to be loaded into memory, with	possibly the
     addition of extra memory at the end.  For more information, see the
     eeeellllffff(4) man	page.

     The sections within the argument object files are combined, some by
     merging and others	by concatenation.  Unless the ----eeee option	is
     specified,	the entry point	of the output is the first instruction in
     the text segment.

     Typically,	lllldddd is invoked by cccccccc(1),	CCCCCCCC(1), ffff77777777(1), or ffff99990000(1) as the
     final step	in compilation,	but it can be run separately.  Many lllldddd
     options can be specified to the linker as options to the ----WWWWllll option on
     the compiler command line.	 For example:

	  cc ... -Wl,-m

     The following terms are used on this man page and throughout the
     loader documentation:

     TTTTeeeerrrrmmmm	    DDDDeeeeffffiiiinnnniiiittttiiiioooonnnn

     aaaa....oooouuuutttt	    File aaaa....oooouuuutttt is an executable	file produced by lllldddd, but it
		    is not a Dynamic Shared Object (DSO).  By default, the
		    IRIX compilers invoke lllldddd and produce an aaaa....oooouuuutttt file that
		    is a dynamic executable.  You can also request that	the
		    compiler produce an	aaaa....oooouuuutttt file that	is not a dynamic
		    executable by compiling with the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	on
		    the	compiler command line.

     DSO	    A DSO, or Dynamic Shared Object, is	an executable
		    object file	that is	relocatable by rrrrlllldddd(5) at load time.
		    It consists	of shared text and data.  It is	produced by
		    the	linker.	 Usually written to _f_i_l_e....ssssoooo.

     Library	    A generic term that	includes both DSOs and archive
		    libraries.

     Object file    A relocatable file produced	by the compiler	and written
		    to _f_i_l_e....oooo.

     Archive	    Produced by	aaaarrrr(1).	Usually	written	to _f_i_l_e....aaaa.

     Section	    A contiguous block of data and internal information	in
		    an object file that	is manipulated by the linker as	a
		    single piece.

     Segment	    A contiguous block of data and internal information	in
		    an executable file that is manipulated by the kernel as
		    a single piece.  In	general, the linker takes sections
		    from object	files and concatenates them to form
		    segments in	executable files.  In general, the kernel
		    maps each segment into the processes address space at
		    the	addresses specified by the linker.

     This man page describes each lllldddd option.  After each option's
     description is a parenthesized list that indicates	the compiler
     command lines from	which the particular option can	be passed as an
     argument to the compiler's	----WWWWllll option.  The compilers are represented
     as	follows	in the these lists:

     NNNNoooottttaaaattttiiiioooonnnn  CCCCoooommmmppppiiiilllleeeerrrr

     C	       MIPSpro C Compiler

     C++       MIPSpro C++ Compiler

     F77       MIPSpro Fortran 77 Compiler

     F90       MIPSpro 7 Fortran 90 Compiler

     The following sections catagorize the linker options.

   SSSSyyyymmmmbbbboooollll RRRReeeessssoooolllluuuuttttiiiioooonnnn aaaannnndddd IIIInnnnppppuuuutttt SSSSeeeeaaaarrrrcccchhhh PPPPaaaatttthhhh
     The following linker options are involved in the symbol resolution
     process:

     ----cccccccckkkkrrrr     Sets the	value of the variable ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn to specify
	       non-ANSI	semantics to lllliiiibbbbcccc.  For	more information, see
	       eeeennnndddd(3C).	 (C)

     ----ccccxxxxxxxx      Specifies special handling of certain symbols needed for
	       proper linkage and execution of C++ programs.

     ----llll_x       Identifies library files.  The linker searches for libraries
	       lllliiiibbbb_x....ssssoooo or lllliiiibbbb_x....aaaa, where	_x is a string.	A shared object	or
	       an archive is searched when its name is encountered, so the
	       position	of the ----llll option on the	command	line is
	       significant.  (C, C++, F77, F90)

     ----LLLL	_d_i_r    Controls	the library search path.

	       When _d_i_r	is specified, the linker searches the directories
	       specified in _d_i_r	before it searches the default directories.
	       The linker searches for lllliiiibbbb_x....ssssoooo,	lllliiiibbbb_x....aaaa,	or lllliiiibbbb_x....bbbb in _d_i_r.
	       If ----LLLL _d_i_r is specified in conjunction with ----llll _x,	the ----LLLL
	       option must be before (to the left) of the ----llll option(s).	 If
	       the ----LLLL _d_i_r option is specified in conjunction with the ----vvvv
	       option, the system writes the search paths and indicates
	       which libraries were actually chosen.  This option can be
	       specified without a space between ----LLLL and	_d_i_r. (C, C++, F77,
	       F90)

     ----nnnnoooossssttttddddlllliiiibbbb Prevents	the linker from	searching in the default
	       directories.  This option is useful when	the default
	       directories for libraries should	not be searched	and only
	       the directories specified by ----LLLL _d_i_r are to be searched.

	       The ----nnnnoooossssttttddddlllliiiibbbb option is a synonym for the ----LLLL option
	       specified without its _d_i_r argument.  For	example, assume
	       that you	wanted library mmmmyyyylllliiiibbbb searched, and mmmmyyyylllliiiibbbb is stored
	       in directory mmmmyyyyddddiiiirrrr.  Further assume that	you do not want	the
	       linker to search	in the default directories.  The following
	       sample command lines are	equivalent:

		    ld -nostdlib -L mydirs -lmine kangaroo.o
		    ld -L -L mydirs -lmine kangaroo.o

	       This searches for lllliiiibbbbmmmmiiiinnnneeee....aaaa or lllliiiibbbbmmmmiiiinnnneeee....ssssoooo in mmmmyyyyddddiiiirrrrssss.  mmmmyyyyddddiiiirrrrssss
	       is a colon-separated list of search directories.

		    The	----nnnnoooossssttttddddlllliiiibbbb option must be specified in conjunction
		    with the ----LLLL	_d_i_r option.  (C, C++, F77, F90)

     ----uuuu	_s_y_m_n_a_m_e
	       Enters _s_y_m_n_a_m_e as an undefined symbol in	the symbol table.
	       This is useful for loading entirely from	an archive because
	       initially, the symbol table is empty and	an unresolved
	       reference is needed to force the	loading	of the first
	       routine.

	       If the symbol used in this option is not	resolved by any
	       object by the end of the	link, the resulting executable or
	       DSO will	have that symbol undefined.  (C, C++)

   IIIInnnnppppuuuutttt SSSSppppeeeecccciiiiffffiiiiccccaaaattttiiiioooonnnn OOOOppppttttiiiioooonnnnssss
     The following options affect both input object specification and
     symbol resolution:

     ----aaaallllllll      Links in	all of the objects from	all archives following this
	       option. This option is commonly used in conjunction with	the
	       ----sssshhhhaaaarrrreeeedddd option to create	a shared object	out of an existing
	       archive.	 (C, C++, F77, F90)

     ----eeeexxxxcccclllluuuuddddeeee _o_b_j_e_c_t
	       Used in conjunction with	the ----aaaallllllll and ----sssshhhhaaaarrrreeeedddd options.  The
	       _o_b_j_e_c_t specified	is excluded from the shared object.  (C,
	       C++, F77, F90)

     ----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e
	       Allows you to specify arguments to lllldddd from a file.  lllldddd reads
	       file _o_p_t_i_o_n__l_i_s_t__f_i_l_e as	if it appeared on the command line
	       in the same position as the ----ffffrrrroooommmm option.  New-line
	       characters in _o_p_t_i_o_n__l_i_s_t__f_i_l_e are treated as if	they were
	       ordinary	spaces.

     ----MMMMDDDDiiiiggggnnnnoooorrrreeee _n_a_m_e
	       Prevents	the linker from	adding the _n_a_m_ed object	or DSO to
	       the MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd file.  For more information, see the
	       ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e option's description.  (C, C++, F77, F90)

     ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e
	       By default, the linker adds the names of	any objects and
	       DSOs used in the	link to	_f_i_l_e.  When compiling, _f_i_l_e is
	       updated to contain header, library, and run-time	mmmmaaaakkkkeeee(1)
	       dependencies for	the output file.

	       When this option	is specified, the linker updates only lines
	       that end	with a distinctive make	comment	and begin with the
	       name of the output file followed	by a colon (::::).	 The
	       standard	name for _f_i_l_e is MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd.  (C, C++, F77, F90)

     ----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee
	       Specifies that that references to libraries specified in	the
	       ----llll option must resolve to shared	objects.  Typically, if	the
	       shared object, as specified by the ----llll option, is	not found,
	       the linker attempts to find the corresponding archive to
	       resolve undefines.  Specifying this does	not allow those
	       archives	to be used.  (C, C++, F77, F90)

     ----nnnnoooottttaaaallllllll   Turns off the action of the ----aaaallllllll	option.	 This pulls objects
	       out of the archive into a DSO if	the objects resolve
	       unresolved symbols in the already included object, but these
	       objects are included without exporting their symbols by
	       default.	 (C, C++, F77, F90)

     ----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e
	       Specifies a file	list.  The file	specified by
	       _o_b_j_e_c_t__l_i_s_t__f_i_l_e	contains a list	of file	or archive names.
	       By putting the file list	in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e instead of
	       on the command line, you	can avoid exceeding the	limit on
	       the length of a command line.  This is primarily	useful when
	       linking very large programs with	many objects and long file
	       names.

	       In the _o_b_j_e_c_t__l_i_s_t__f_i_l_e,	blank lines and	leading	white space
	       are ignored.  Files must	be listed one per line.	 A file
	       name is considered ended	by the next whitespace character.
	       Characters after	the file name are ignored.  Any	leading
	       dash (----)	characters in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e line are
	       considered part of a file name; nothing in the file is
	       interpreted as an option.  Lines	in the file are	limited	to
	       BBBBUUUUFFFFSSSSIIIIZZZZ****2222	characters (16 Kbytes) each.  (C, C++, F77, F90)

   DDDDeeeebbbbuuuuggggggggiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The debugging options control listings and	messages that can be
     produced when debugging new software.  For	more information on
     controlling messages when debugging, see the description for the
     ----LLLLDDDD____MMMMSSSSGGGG:::: option group.  The following options aid in debugging linking
     sessions:

     ----aaaaoooouuuuttttkkkkeeeeeeeepppp By default, lllldddd removes the output file if there are link
	       errors.	When this option is specified, though, the output
	       is written to aaaa....oooouuuutttt.  (C, C++, F77, F90)

     ----ffff	_f_i_l_l   Sets the	fill pattern for _h_o_l_e_s between sections	within an
	       output segment.	The argument _f_i_l_l must be a four-byte
	       hexadecimal constant.

	       As the linker lays out sections,	the alignment restrictions
	       lead to gaps, or	_h_o_l_e_s, between the sections.  This option
	       specifies the value to use to fill the holes.

     ----ggggppppiiiinnnnffffoooo   Produces	a listing of short data	section	components (page
	       pointers, GOT pointers, small data, and small literals).
	       This may	be useful in identifying modules with large
	       GP-relative sections. The listing produced by this option is
	       a subset	of the information that	is produced when ----mmmm is
	       specified.

	       If you receive message 171, it means that the GP-relative
	       data has	been broken up into several areas (multigot).  The
	       ----ggggppppiiiinnnnffffoooo option does not work in such cases, but you can
	       specify the ----mmmm option.  The ----mmmm option is	a good alternative.
	       It provides all the information needed to analyze
	       GP-relative usage.

     ----mmmm	       Writes a	map or listing of the input/output (I/O) sections
	       to standard output.  This is a UNIX system V-like map.

     ----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo
	       Prints extra information	regarding the quickstart status	of
	       the executable file created.  This includes a full list of
	       conflict	symbols	and their objects of origin.  (C, C++, F77,
	       F90)

     ----sssshhhhoooowwww     Prints the name of the specific linker being used.  (C, C++,
	       F77, F90)

     ----sssshhhhoooowwww____uuuunnnnrrrreeeeffff
	       Lists defined but unreferenced symbols.	This option can	be
	       used when looking for dead code in a program.  Note that
	       library routines	typically define symbols that might not	be
	       referenced by all programs.  Also, in the case of weak and
	       strong symbol pairs, in which two different symbols point to
	       the same	virtual	address, if only one of	them is	referenced,
	       the other symbol	is still listed.  This does not	necessarily
	       mean the	specified function is never used.

     ----sssspppplllliiiitttt____ccccoooommmmmmmmoooonnnn
	       Shows how and where split commons were laid out.	 For more
	       information on this, see	the oooopppptttt(5) man page's description
	       of the ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn	option.

     ----vvvv	       Sets verbose mode. This option generates	more information
	       than the	----sssshhhhoooowwww option.  This options shows linker phases,
	       what and	where it searches for objects and libraries, and
	       what is actually	linked in.  (C,	C++, F77, F90)

     ----VVVV	       Prints the version of lllldddd	being used.

     ----yyyy_s_y_m     Writes symbol information to ssssttttddddeeeerrrrrrrr.  Indicates each file in
	       which _s_y_m appears, _s_y_m's	type, and whether the file defines
	       or references _s_y_m.  Many	such options can be given to trace
	       many symbols.  Each ----yyyy_s_y_m applies to those files	listed
	       after this option on the	command	line.  Symbols and archived
	       objects that are	not linked in and DSOs that are	not used do
	       not appear in the output.  (C, C++, F77,	F90)

   MMMMeeeessssssssaaaaggggeeee OOOOppppttttiiiioooonnnnssss
     The following options affect the process of issuing messages:

     ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg
	  When using an	ELF layout specification file with the ----eeeellllssssppppeeeecccc
	  option, the linker typically generates an error if portions of
	  the object file that are not strippable have been omitted from
	  the output.  Specifying the ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg option overrides this
	  error	check and allows the omission of data or text that would
	  ordinarily be	linked.	 In this case, you must	ensure that the
	  output is correct.

     ----ddddeeeemmmmaaaannnngggglllleeee
	  Specifies that demangling of C++ names should	take place when
	  generating other messages.  (C)

     ----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	  Disables the warning that is issued when the ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd option
	  is in	effect.	 (C, C++, F77, F90)

     ----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  Produces an executable or DSO	and exits with zero status even	if
	  there	are unresolved symbols.	 Resolution of these symbols is
	  completed by rrrrlllldddd(5).	If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd option is also
	  specified, a list of the unresolved symbols is generated.  If	the
	  ----sssshhhhaaaarrrreeeedddd option is also specified, no such list is generated.	If
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option is also specified, the	----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  option is ignored and	the ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd option is put into
	  effect, as it	always is when ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd is specified.

	  This option is enabled by default when the ----sssshhhhaaaarrrreeeedddd option is
	  specified, but it is not enabled when	the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	  ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are enabled.  (C,	C++, F77, and F90)

     ----iiiinnnnffffoooo
	  Generates messages of	an informational nature	that might
	  highlight unusual, but not illegal, situations.  This	is enabled
	  by default.  (C, C++,	F77, F90)

     ----LLLLDDDD____MMMMSSSSGGGG::::[_m_s_g_t_y_p_e====_n_u_m_l_i_s_t][::::_m_s_g_t_y_p_e=_n_u_m_l_i_s_t]...
	       Changes or respecifies message severities.  This	option
	       controls	the general message handling interface for lllldddd.	It
	       allows you to change the	default	message	severity.  For
	       _n_u_m_l_i_s_t,	specify	a comma- or dash-separated list	of message
	       numbers.	For a list of the linker messages and their
	       numbers,	see the	MESSAGES section.

	       Valid _m_s_g_t_y_p_e arguments,	and their meanings, are	as follows:

	       _m_s_g_t_y_p_e	 MMMMeeeeaaaannnniiiinnnngggg

	       eeeerrrrrrrroooorrrr	 Treats	each message in	_n_u_m_l_i_s_t	as an error.

	       iiiinnnnffffoooo	 Treats	each message in	_n_u_m_l_i_s_t	as an informational
			 message.

	       wwwwaaaarrrrnnnniiiinnnngggg	 Treats	each message in	_n_u_m_l_i_s_t	as a warning.

	       vvvveeeerrrrbbbboooosssseeee	 Treats	each message in	_n_u_m_l_i_s_t	as a verbose
			 message.

	       ooooffffffff	 Ignores each message in _n_u_m_l_i_s_t.

	       Example 1:  Specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333 tells the linker
	       to treat	message	33, which by default is	an error, as a
	       warning.	 Similarly, specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333::::ooooffffffff====44447777----66668888
	       tells the linker	to treat message 33 as a warning and to
	       ignore all messages from	47 to 68 inclusive.

	       Example 2:  Some	information obtained when the ----vvvv (verbose
	       mode) option is enabled can be of use when debugging
	       programs.  To obtain informational messages regarding symbol
	       resolution conflict, preemption,	and type mismatch
	       information in regard to	weak symbols, specify the following
	       lllldddd options:

		    -LD_MSG:info=134,175-177
		    -quickstart_info

	       The preceding options produce the following messages:

	   134:	Weak definition	preempting another weak	definition.
	   174:	Strong definition preempting a weak definition.
	   175:	Weak definition	type mismatch with a strong definition.
	   176:	Weak definition	type mismatch with a reference.
	   177:	Weak definition	type mismatch with another weak	definition.

	       Fatal errors cannot be modified by ----LLLLDDDD____MMMMSSSSGGGG::::.  (C, C++, F77,
	       F90)

     ----nnnnooooiiiinnnnffffoooo   Suppresses informational	messages generated when	the ----iiiinnnnffffoooo
	       option is in effect.  (C, C++, F77, F90)

     ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	       Lists unresolved	symbols.  If the ----sssshhhhaaaarrrreeeedddd option	is also
	       specified, a DSO	is produced and	lllldddd exits with zero status.
	       If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, lllldddd
	       exits with nonzero status and no	executable is produced.
	       This option is enabled by default when the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, but it is disabled by
	       default when the	----sssshhhhaaaarrrreeeedddd	option is specified.  (C, C++, F77,
	       and F90)

     ----UUUU	       Suppresses error	messages that would be generated for
	       undefined symbols.  This	option allows you to create an
	       executable with undefined symbols.  Referencing an undefined
	       symbol during execution can cause a segmentation	fault and a
	       core dump.

     ----wwww, ----wwwwaaaallllllll Specifies that all warnings are to be suppressed.  (C, C++,
	       F77, F90)

     ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	       Specifies that the linker should	issue a	warning	if it finds
	       that some object	has not	been used in a link.  The semantics
	       of dynamic linking dictate that this cannot be determined
	       absolutely at static link time, but it is usually quite
	       reliable.  This option is enabled by default.  (C, C++, F77,
	       F90)

     ----wwwwooooffffffff _n_u_m_l_i_s_t
	       Suppresses the messages specified in _n_u_m_l_i_s_t.  For _n_u_m_l_i_s_t
	       specify a comma-separated list of warning message numbers.
	       For example, specifying ----wwwwooooffffffff """" 5555,,,,11117777,,,,22223333""""	suppresses warning
	       messages	numbered 5, 17,	and 23.	 If you	are linking using
	       the cccccccc(1) command, this option should be	passed to the
	       linker with the following three options:	 ----WWWWllll,,,,----wwwwooooffffffff,,,,5555 ----WWWWllll,,,,----
	       wwwwooooffffffff,,,,11117777 ----WWWWllll,,,,----wwwwooooffffffff,,,,22223333.  This is equivalent to specifying
	       ----LLLLDDDD____MMMMSSSSGGGG::::OOOOFFFFFFFF====5555,,,,7777,,,,22223333.  (C,	C++, F77, F90)

   SSSSttttrrrriiiippppppppiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options are involved	in the process of stripping
     information from an object	file.  The linker does not strip out
     information that would prevent the	program	from running.

     ----ssss	       Strips the symbolic information from the	output object file.
	       (C, C++,	F77, F90)

     ----xxxx	       Does not	preserve local (non-global) symbols in the output
	       symbol table.  The linker enters	external and static symbols
	       only.  This option conserves space in the output	file.

   OOOOuuuuttttppppuuuutttt OOOObbbbjjjjeeeecccctttt FFFFoooorrrrmmmmaaaatttt	OOOOppppttttiiiioooonnnnssss
     The following options affect the format of	the output object file:

     ----33332222 or ----oooo33332222
	       Specifies that the object to be linked (and the input
	       objects)	are to be old-style, 32-bit ucode objects.  (C,
	       C++, F77, F90)

     ----66664444       Specifies that the object to be linked (and the input
	       objects)	are to be 64-bit objects.  (C, C++, F77, F90)

     ----aaaabbbbiiii      Specifies that the resultant output executable conforms to
	       generic MIPS ABI	conventions.  (C, C++, F77, F90)

     ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       Produces	a dynamic executable.  The object created can use
	       shared objects at runtime. This is enabled by default.  (C,
	       C++, F77, F90)

     ----eeeellllffff      Produces	an ELF output object file.  This is the	default,
	       and currently the only, file format supported.  (C, C++,
	       F77, F90)

     ----mmmmiiiippppssss2222    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 2 ISA.	 (C, C++, F77, F90)

     ----mmmmiiiippppssss3333    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 3 ISA.	 If lllldddd finds object files
	       that are	MIPS 4,	the resulting binary is	silently marked	as
	       being a ----mmmmiiiippppssss4444 binary.  (C, C++,	F77, F90)

     ----mmmmiiiippppssss4444    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 4 ISA.	 (C, C++, F77, F90)

     ----nnnn33332222      Specifies that the object to be linked (and the input
	       objects)	are to be new-style, 32-bit objects.  (C, C++, F77,
	       F90)

     ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd
	       Produces	a static executable.  The output object	created
	       will not	use any	shared objects during execution.  This
	       declares	that you are not loading position-independent code
	       (PIC).  This option cannot be specified in conjunction with
	       the ----rrrr option; do not use them together on the same command
	       line.  (C, C++, F77, F90)

     ----rrrr	       Retains relocation entries in the output	file.  Relocation
	       entries must be saved if	the output file	is to become an
	       input file in a subsequent lllldddd run.  This	option also
	       prevents	final definitions from being given to common
	       symbols and suppresses the uuuunnnnddddeeeeffffiiiinnnneeeedddd ssssyyyymmmmbbbboooollll diagnostics.
	       This option cannot be specified in conjunction with the
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option; do not use them together on the same
	       command line.

     ----sssshhhhaaaarrrreeeedddd   Produces	a DSO, creates all of the tables for run-time
	       linking,	and resolves references	to other specified shared
	       objects.	 The object created can	be used	by the linker to
	       make dynamic executables.  (C, C++, F77,	F90)

   LLLLaaaayyyyoooouuuutttt OOOOppppttttiiiioooonnnnssss
     The layout	options	affect the layout of the object	file.  They are	as
     follows:

     ----BBBB	_n_u_m    Sets the	uninitialized data (BSS) segment origin.  Specify a
	       hexadecimal number for _n_u_m.

     ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	       Checks the location of this shared object's segments and
	       makes sure they stay out	of the way of others in	the
	       _l_o_c_a_t_i_o_n__f_i_l_e.  A single	registry file, either with
	       ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is allowed.	 This
	       option must be specified	in conjunction with the	----sssshhhhaaaarrrreeeedddd
	       option.	(C, C++, F77, F90)

	       lllldddd uses the ssssoooo____llllooooccccaaaattttiiiioooonnnnssss	file from the current directory	(in
	       preference to uuuussssrrrr////lllliiiibbbb if	the cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or
	       uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy option is not specified.

     ----dddd	       Forces definition of common storage and defines
	       loader-defined symbols even if ----rrrr is present.

     ----DDDD	_n_u_m    Sets the	initialized data segment origin.  Specify a
	       hexadecimal number for _n_u_m.  (C,	C++, F77, F90)

     ----eeeellllssssmmmmaaaapppp   Specifies that the linker should	emit a layout map in the
	       form of an ELF layout specification.  The output	from this
	       specification can be used with the ----eeeellllssssppppeeeecccc option without
	       modification.

     ----eeeellllssssppppeeeecccc _f_i_l_e
	       Specifies a file	to serve as an ELF layout specification
	       file.  This file	and its	syntax are described in	eeeellllssssppppeeeecccc(5).

     ----GGGG	[_n_u_m]  Specifies the largest size, in bytes, of	a ....ccccoooommmmmmmm	item that
	       is to be	allocated in the small BSS section for reference
	       off of the global pointer (GP).	The default is 8 bytes.	 If
	       the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has been specified, this option is
	       a synonym for the ----sssshhhhaaaarrrreeeedddd option	and takes no numerical
	       argument.

     ----iiiivvvvppppaaaadddd    Improves	cache behavior by causing the linker to	perform
	       intervariable padding of	some large variables.  This is in
	       effect by default.  (C, C++, F77, F90)

     ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::[_c_o_m_m_a_n_d====_a_r_g][::::_c_o_m_m_a_n_d====_a_r_g]...
	       The ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT option group accepts arguments that control
	       the layout of the object	file.  These arguments are as
	       follows:

	       sssseeeegggglllliiiiggggnnnn====_a_l_i_g_n_v_a_l
		    Defines the	minimum	segment	alignment.  _a_l_i_g_n_v_a_l must
		    be both PPPPAAAAGGGGEEEESSSSIIIIZZZZEEEE or	greater	and a power of 2.

	       llllggggooootttt____bbbbuuuuffffffffeeeerrrr====_v_a_l
		    Used by lllldddd after it	exhausts local Global Offset Table
		    (GOT) page slots.  The _v_a_l argument	is the number of
		    extra slots	per local GOT area to use.

	       mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd====_s_e_t_t_i_n_g
		    This is for	internal use.  When used in conjunction
		    with ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt, forces	different levels of
		    multigot during regression testing.	 When disabled,
		    every input	section	to has its own GOT.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  Usually,	the linker attempts
		    to link everything,	generating a single GOT.  If this
		    fails, it reruns the layout	phase and possibly creates
		    multiple GOT regions.  This	option causes the first
		    layout pass	to fail.  This is used in conjunction with
		    the	mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd option described	previously.

	       ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  When used in conjunction
		    with the mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd (described previously), it
		    forces multiple levels of multigot during regression
		    testing.

	       sssseeeeggggaaaalllliiiiggggnnnn====_v_a_l
		    Defines the	minimum	segment	alignment.  _v_a_l	must be
		    both 0x1000	or greater and a power of 2.

	       oooonnnneeee____ggggooootttt====_s_e_t_t_i_n_g
		    Prevents the linker	from producing multiple	GP regions.
		    For	more information, see mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd, which is
		    described previously in this list.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       rrrreeeeoooorrrrddddeeeerrrr____ffffiiiilllleeee====_f_e_e_d_b_a_c_k__f_i_l_e
		    Names a feedback file.  When specified, function layout
		    in the text	section	is optimized to	minimize page
		    faults and I-cache misses based upon the frequency
		    information	in _f_e_e_d_b_a_c_k__f_i_l_e.  This	file is	usually
		    produced by	pppprrrrooooffff(1)/ccccvvvvppppeeeerrrrffff(1) or ssssssssccccoooorrrrdddd(1)/ssssssssoooorrrrddddeeeerrrr(1),
		    but	a user can also	construct or modify this ASCII
		    file.

		    Note that object files must	have been compiled with	the
		    ----OOOOPPPPTTTT::::pppprrrroooocccceeeedddduuuurrrreeee____rrrreeeeoooorrrrddddeeeerrrr====OOOONNNN option specified.	 For more
		    information	on this	option,	see the	oooopppptttt(5) man page.

		    For	information on messages	related	to this	option,	see
		    the	MESSAGES section of this man page.  For	an example
		    that shows reordering code regions,	see the	_M_I_P_S_p_r_o
		    _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e.

	       (C, C++,	F77, F90)

     ----nnnn	  Preloads the entire text and data portions of	the executable(s)
	  when the output file is executed.  This involves moving the data
	  areas	up to the first	possible _p_a_g_e_s_i_z_e byte boundary	following
	  the end of the text.	You must specify the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	in
	  conjunction with the ----nnnn option.  (C, C++, F77, F90)

     ----NNNN	  Places the data segment immediately after the	text and does not
	  make the text	portion	read only or sharable.	You must specify
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option in conjunction	with the ----NNNN option.

     ----nnnnooooiiiivvvvppppaaaadddd
	  Disables the behavior	of the ----iiiivvvvppppaaaadddd option.  (C, C++,	F77, F90)

     ----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee
	  Puts ....rrrrooooddddaaaattttaaaa into the	data segment, which has	write permission.
	  This is in effect by default.	 (C, C++, F77, F90)

     ----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd
	  Puts ....rrrrooooddddaaaattttaaaa into the	text segment, where it is shared across
	  processes and	is read-only.  (C, C++,	F77, F90)

     ----TTTT	_n_u_m
	  Sets the text	segment	origin.	 (C, C++, F77, F90)

     ----XXXXllllooooccccaaaallll _n_a_m_e_s
	  Assigns the named global BSS (uninitialized data) symbols to a
	  special local	data section in	the aaaa....oooouuuutttt file.	 This is useful	for
	  hand-parallelized Fortran programs that require this symbol to be
	  private for each thread.

	  A symbol assigned to the small BSS or	small data section of an
	  object file cannot be	moved to the special section.  If the
	  symbol is assigned to	either the small BSS or	small data section,
	  either recompile with	a smaller ----GGGG number or use the following
	  directive in your source code:  ####pppprrrraaaaggggmmmmaaaa sssseeeeccccttttiiiioooonnnn____nnnnoooonnnn____ggggpppp((((_n_a_m_e) (in
	  C) or	CCCC****$$$$****SSSSEEEECCCCTTTTIIIIOOOONNNN____NNNNOOOONNNN____GGGGPPPP((((_n_a_m_e)))) (in Fortran).

     ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	  Registers the	location of this shared	object's segments and makes
	  sure they stay out of	the way	of others in the _l_o_c_a_t_i_o_n__f_i_l_e.	The
	  _l_o_c_a_t_i_o_n__f_i_l_e	is updated if it is writable.  A single	registry
	  file,	either with ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is
	  allowed.  This option	is must	be specified in	conjunction with
	  used with the	----sssshhhhaaaarrrreeeedddd	option.	 The default registry file is
	  either ////uuuussssrrrr////lllliiiibbbb,,,,33332222////_s_o__l_o_c_a_t_i_o_n_s or ////uuuussssrrrr////lllliiiibbbb,,,,66664444////_s_o__l_o_c_a_t_i_o_n_s,
	  depending on your compilation.  For more information on
	  _s_o__l_o_c_a_t_i_o_n_s,	see the	ddddssssoooo(5) man page.  (C, C++, F77,	F90)

     ----zzzz	  Arranges that	the process pages are loaded on	demand from the
	  resulting executable file rather than	preloaded, and that the
	  text pages are shared	among all users.  This is in effect by
	  default.

   DDDDyyyynnnnaaaammmmiiiicccc LLLLiiiinnnnkkkkiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options affect dynamic linking:

     ----BBBB	_s_y_m_b_o_l_i_c
	       Inserts the element DDDDTTTT____SSSSYYYYMMMMBBBBOOOOLLLLIIIICCCC into the	....ddddyyyynnnnaaaammmmiiiicccc section of
	       a shared	object library.	 This alters the dynamic linker's
	       symbol resolution algorithm for references within the
	       library.	 Instead of starting a symbol search with the
	       executable file,	the dynamic linker starts from the shared
	       object itself.  If the shared object fails to supply the
	       referenced symbol, the dynamic linker then searches the
	       executable file and other shared	objects	as usual.

     ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       When creating a dynamic shared object using the ----sssshhhhaaaarrrreeeedddd
	       option, this option marks that shared object as default
	       delay load.  (C,	C++, F77, F90)

     ----ddddeeeellllaaaayyyy____llllooooaaaadddd
	       Indicates that the next specified DSO should be delay
	       loaded.	Typically, linking against a DSO causes	that DSO to
	       be loaded at runtime whenever the DSO being created is
	       loaded.	This resolves the symbols supplied by that object.
	       You can use the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option to delay the loading of a
	       DSO. When ----ddddeeeellllaaaayyyy____llllooooaaaadddd is	specified, the DSO is not loaded
	       until a symbol supplied by the DSO is actually referenced.
	       Be careful when using the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option or when linking
	       against a DSO that was built using the ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       option.	Symbols	from a delay-loaded DSO	do not preempt
	       symbols from other libraries; they are resolved as if the
	       DSO was last on the link	line.  (C, C++,	F77, F90)

     ----eeee	_s_y_m_b_o_l Sets the	default	entry point address for	the output file	to
	       be that of the symbol _s_y_m_b_o_l.  (C, C++, F77, F90)

     ----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____EEEEXXXXAAAACCCCTTTT____MMMMAAAATTTTCCCCHHHH flag in the ....lllliiiibbbblllliiiisssstttt flags field.
	       This indicates to rrrrlllldddd(5)	that this shared object	must match
	       the timestamp and checksum from the ....lllliiiibbbblllliiiisssstttt section in
	       addition	to the interface version.  This	means that all DSOs
	       run against must	match exactly the version, timestamp, and
	       checksum	against	which the application was linked (or
	       processed by rrrrqqqqssss).  Moreover, if	the object is copied to
	       another machine,	it will	not run	unless the object is first
	       processed by rrrrqqqqssss(1) because the other machine is	likely to
	       have a different	checksum and timestamp for things on the
	       liblist of this object, such as lllliiiibbbbcccc....ssssoooo....1111.  On a	MIPS4
	       machine (such as	R10000), the following would not execute:

		    cccccccc tttt....cccc ----nnnn33332222	----mmmmiiiippppssss3333 ----WWWWllll,,,,----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn ;;;; ....////aaaa....oooouuuutttt

	       rrrrlllldddd(5) would generate a fatal error for the previous command
	       because the MIPS3 lllliiiibbbbcccc....ssssoooo....1111 linked against is not the same
	       as the MIPS4 lllliiiibbbbcccc....ssssoooo....1111 against which the	executable will	run
	       on that machine.	 (C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss  Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be exported by the object being created.
	       This is the default behavior for	linking	in an object, but
	       it is not for archives or DSOs.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The specified _f_i_l_e must contain a list	of symbols
	       that should be exported.	 The list is comprised of symbol
	       names separated by spaces or new-line characters.  Any
	       symbols not specifically	exported will be automatically
	       hidden.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	exported.  Use a
	       comma to	separate the symbols.  If you specify any exported
	       symbols,	all unspecified	symbols	are automatically hidden.
	       (C, C++,	F77, F90)

     ----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l
	       Puts calls to one or more _f_f_u_n_c_s_y_m_b_o_l into the code that
	       rrrrlllldddd(5) exercises	after the main program exits.  The
	       _f_f_u_n_c_s_y_m_b_o_l contains the	termination code to be called after
	       the main	program	exits.	In the case of a DSO that is no
	       longer referenced and is	closed using ddddllllcccclllloooosssseeee(3C), this
	       function	is called before the DSO is unmapped.

	       A single	----ffffiiiinnnniiii option is	effective in a given DSO or
	       executable.  To specify more than one _f_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----ffffiiiinnnniiii options on the command line.  If multiple
	       ----ffffiiiinnnniiii options are provided, they	are executed at	runtime	in
	       the reverse order listed	on the command line.  The ordering
	       facilitates pairing ----iiiinnnniiiitttt and ----ffffiiiinnnniiii entries in makefiles.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For information on
	       how to specify your own ----ffffiiiinnnniiii functions,	see the	EXAMPLES
	       section.	 (C)

     ----ffffoooorrrrcccceeee____llllooooaaaadddd
	       Forces the normal loading of the	next specified DSO,
	       overriding any default delay load attribute associated with
	       that DSO.  (C, C++, F77,	F90)

     ----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Specifies that the linker perform the work described for	the
	       ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk option and, in addition, add	each
	       library encountered to the list of objects needed by the
	       current object, beyond what is specified	on the link line.
	       (C, C++,	F77, F90)

     ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The file specified by _f_i_l_e must contain a list	of
	       symbols to be hidden.  The list is comprised of symbols
	       separated by spaces or new-lines	characters.  This option is
	       ignored if any symbols in the list are specifically marked
	       as exported using the ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee
	       option.	(C, C++, F77, F90)

     ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	hidden.	 Use a
	       comma to	separate the symbols.  This option is ignored if
	       any symbols are specifically marked as exported using the
	       ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll	or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee options.  If you specify
	       ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll, all unspecified symbols are automatically
	       exported, including those that were implicitly hidden when
	       loading archive libraries.  (C, C++, F77, F90)

     ----hhhhiiiiddddeeeessss    Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be hidden by the	object being created.  This
	       is the default behavior for linking in archives or DSOs,	but
	       it is not for relocatable objects.  (C, C++, F77, F90)

     ----IIII	_p_a_t_h_n_a_m_e
	       Writes the path name into the ....iiiinnnntttteeeerrrrpppp section.  The _p_a_t_h_n_a_m_e
	       is a path name for the system to	invoke as a program
	       interpreter.

     ----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr
	       Clears the LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag	in the ....lllliiiibbbblllliiiisssstttt	flags field
	       for shared objects listed subsequently on the lllldddd	command
	       line.  This allows rrrrlllldddd(5) to use	a shared object	at runtime
	       that has	a different minor version number.  This	option is
	       enabled by default.  For	more information on major and minor
	       version numbers,	see the	ddddssssoooo(5) man page.  (C, C++, F77,
	       F90)

     ----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____IIIIGGGGNNNNOOOORRRREEEE____VVVVEEEERRRRSSSSIIIIOOOONNNN flag in the liblist flags field.
	       For subsequent shared objects in	the liblist, rrrrlllldddd(5) does
	       not try to match	the interface version as specified at link
	       time.  (C, C++, F77, F90)

     ----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l
	       Puts a call to _i_f_u_n_c_s_y_m_b_o_l into the code	that rrrrlllldddd(5)
	       exercises before	the main program begins.  The _i_f_u_n_c_s_y_m_b_o_l
	       contains	initialization code to be called before	control	is
	       passed to mmmmaaaaiiiinnnn.	In the case of a DSO opened with ddddllllooooppppeeeennnn(3C)
	       or ssssggggiiiiddddllllaaaadddddddd(3C) an initialization function is called after
	       the DSO is loaded but before it is referenced.

	       A single	----iiiinnnniiiitttt option is	effective in a given DSO or
	       executable.  To specify more than one _i_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----iiiinnnniiiitttt options on the command line.  If multiple
	       ----iiiinnnniiiitttt options are specified, they are executed at runtime in
	       the order listed	on the command line.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 Any user ....iiiinnnniiiitttt
	       sections	are concatenated to the	ones generated by the
	       linker.	For information	on how to specify your own ----iiiinnnniiiitttt
	       functions, see the EXAMPLES section.  (C)

     ----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt
	       Turns on	a flag in the dynamic section so that rrrrlllldddd(5) does
	       not allow execution time	or runtime changes to the path
	       (except by a superuser) to find the shared objects.
	       Typically, this option is used for security purposes on
	       system utilities.  (C, C++, F77,	F90)

     ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Some applications may find it desirable to hide some of
	       their dependent libraries.  This	option cancels the upward
	       propagation of libraries	to facilitate such hiding.
	       Executables and shared objects built in this way	can
	       experience slightly slower startup.  (C,	C++, F77, F90)

     ----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr
	       Sets the	LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag in the ....lllliiiibbbblllliiiisssstttt flags field
	       for DSOs	listed subsequently on the lllldddd command line.  This
	       indicates to rrrrlllldddd(5) that	the shared object used at runtime
	       must have the exact same	minor (and major) version number as
	       that at static link time.  Otherwise, execution aborts.	For
	       more information	on major and minor version numbers, see	the
	       ddddssssoooo(5) man page.	 (C, C++, F77, F90)

     ----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h
	       Adds the	_l_i_b_r_a_r_y__p_a_t_h to	the search path	for DSOs.  Each
	       library path is appended	to the list of directories at the
	       time the	executable or DSO is loaded.  This option directs
	       rrrrlllldddd(5) to look in the named directories,	but to look only
	       for DSOs, and to	stop looking when the correct one is found.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For more
	       information, see	the rrrrlllldddd(5) man page.  (C, C++, F77, F90)

     ----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g
	       Sets the	value of the DDDDTTTT____MMMMIIIIPPPPSSSS____IIIIVVVVEEEERRRRSSSSIIIIOOOONNNN field in the dynamic
	       section of the shared object to _v_e_r_s_i_o_n__s_t_r_i_n_g.	The
	       _v_e_r_s_i_o_n__s_t_r_i_n_g must consist of a	series of version strings
	       separated by colons (:).	 (C, C++, F77, F90)

     ----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       Sets DDDDTTTT____SSSSOOOONNNNAAAAMMMMEEEE for a shared object.  Must be specified in
	       conjunction with	the ----sssshhhhaaaarrrreeeedddd option.  The _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       can be a	single component name (for example, lllliiiibbbbcccc....aaaa), a full
	       path name (starting with	a slash), or a relative	path name
	       (containing a slash).  Single component names use rrrrppppaaaatttthhhh,
	       LLLLDDDD____LLLLIIIIBBBBRRRRAAAARRRRYYYY____PPPPAAAATTTTHHHH,	and the	default	paths to resolve their
	       locations.  (C, C++, F77, F90)

     ----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Typically, every	shared object and every	executable has a
	       dependency list of shared objects that are needed for
	       correct execution.  The runtime linker, rrrrlllldddd(5), loads these
	       objects when any	process	is run.	 If the	depended-upon
	       shared objects have more	objects	that they in turn depend
	       upon, rrrrlllldddd(5) adds them at the end of the	list, and so on,
	       performing a transitive closure.

	       By default, a similar operation is performed at static, lllldddd,
	       link time.  Any shared object that is listed on the command
	       line is put on aaaa....oooouuuutttt's dependency list.	Then any new shared
	       objects from the	dependency lists of the	already-processed
	       shared objects are also processed and checked for
	       conflicting definitions of symbols, but they are	not added
	       to the list of shared objects needed by the object being
	       built.  This is the default behavior.  (C, C++, F77, F90)

   IIII////OOOO OOOOppppttttiiiioooonnnnssss
     The options affect	I/O:

     ----mmmmmmmmaaaapppp     Directs the linker to use mmmmmmmmaaaapppp(2) as its	preferred mode for
	       reading object files.  This usually results in better I/O
	       performances, except when using NFS mounted files with high
	       network latencies.  This	is enabled by default.

     ----rrrreeeeaaaadddd     Directs the linker to use the ooooppppeeeennnn(2), llllsssseeeeeeeekkkk(2),	and rrrreeeeaaaadddd(2)
	       utilities as its	preferred mode for reading object files.
	       Setting this option when	many object files are remotely
	       mounted with high network latency often improves
	       performance.

   HHHHaaaarrrrddddwwwwaaaarrrreeee PPPPaaaattttcccchhhh OOOOppppttttiiiioooonnnnssss
     The following options are patches to the hardware:

     ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Disables	the work-around	for the	R4000 bug.  When this flag
	       is present, no adjustment is attempted.	The work-around	is
	       enabled by default, so the presence of the
	       ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp option before	any object files disables
	       the feature.  Disabling the workaround can result in code
	       that is not compatible across platforms and may also result
	       in a performance	penalty	on some	R4000 systems.

     ----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Works around an R4000 bug present in 2.1	and 2.2	silicon.
	       This option tries to prevent certain classes of branch
	       instructions from being the last	instruction on a page of
	       virtual memory.	This option is enabled by default for links
	       of MIPS3	or lower programs.  You	can use	the hhhhiiiinnnnvvvv(1M)
	       command to determine what revision of R4000 is present in
	       the system.

	       The kernel automatically	works around this problem with
	       early versions of the R4000, but	there is a small
	       performance penalty.  Using this	option helps avoid the
	       situation in which a kernel workaround is needed.

   MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss OOOOppppttttiiiioooonnnnssss
     The following are miscellaneous options:

     ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       Alters the meaning of the ----GGGG option to conform to the UNIX
	       System V	Release	4 usage.  For more information,	see the
	       ----GGGG [_n_u_m]	option.	 When specified	on the compiler	command
	       line, this option is ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.  (C,	C++, F77, F90)

     ----oooo	_o_u_t_f_i_l_e
	       Produces	an output object file by the name _o_u_t_f_i_l_e.  The
	       name of the default output file is aaaa....oooouuuutttt.  For example, in
	       the event that _o_u_t_f_i_l_e has undefined references at the end
	       of the link editor run, and the ----rrrr option was not used, and
	       the ----aaaaoooouuuuttttkkkkeeeeeeeepppp option was	used, _o_u_t_f_i_l_e is renamed aaaa....oooouuuutttt.	 If
	       there are undefined references and the ----aaaaoooouuuuttttkkkkeeeeeeeepppp	option was
	       not used, there is no output from lllldddd.

	       If the specified	output file already exists, the	ownership
	       and mode	from the existing file are retained.  (C, C++, F77,
	       F90)

     ----VVVVSSSS _n_u_m   Uses _n_u_m	as the decimal version stamp to	identify the aaaa....oooouuuutttt
	       file that is produced.  The version stamp is stored in the
	       optional	and symbolic headers.  (C, C++,	F77, F90)

   SSSSyyyynnnnoooonnnnyyyymmmm OOOOppppttttiiiioooonnnnssss
     The following options are synonyms	for other lllldddd options:

     ----aaaa	       This is a synonym of ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.

     ----aaaajjjjeeeeoooopppp    This is a synonym for ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp.

     ----ddddnnnn       This is a synonym for ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.  (C)

     ----ddddyyyy       This is a synonym for ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd.  (C)

     ----GGGG	       If the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has	been specified,	this option
	       is a synonym for	----sssshhhhaaaarrrreeeedddd	and takes no numerical argument.
	       (C)

     ----hhhh	       This is a synonym for ----ssssoooonnnnaaaammmmeeee.

     ----hhhhiiiiddddeeeessss____ffffiiiilllleeee _f_i_l_e
	       This is a synonym for the ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee option.

     ----nnnnoooonnnneeee     Same as ----nnnnoooottttaaaallllllll.	 (C, C++, F77, F90)

     ----oooo33332222      This is a synonym for ----33332222.

     ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn
	       This is a synonym for ----iiiivvvvppppaaaadddd.

     ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       This is a synonym for ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.

     ----WWWWxxxx,,,,----GGGG _n_u_m
	       This is a synonym for the non-SVR4 meaning of ----GGGG.  The
	       meaning of this option is unaffected by the use of the
	       ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option.

RRRREEEESSSSEEEERRRRVVVVEEEEDDDD SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     The following symbols are reserved	for internal use:

     ....bbbbssssssss, ....ccccoooommmmmmmmeeeennnntttt, ....ddddaaaattttaaaa, ....ffffiiiinnnniiii, ....iiiinnnniiiitttt, ....lllliiiitttt4444, ....lllliiiitttt8888,	....rrrrddddaaaattttaaaa,	....ssssbbbbssssssss,
     ....ssssddddaaaattttaaaa, ....tttteeeexxxxtttt, ____BBBBAAAASSSSEEEE____AAAADDDDDDDDRRRREEEESSSSSSSS, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKK,
     ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKKIIIINNNNGGGG, ____GGGGOOOOTTTT____OOOOFFFFFFFFSSSSEEEETTTT, ________ddddssssoooo____ddddiiiissssppppllllaaaacccceeeemmmmeeeennnntttt,	________eeeellllffff____hhhheeeeaaaaddddeeeerrrr,
     ________ffffssssttttaaaarrrrtttt, ________iiiissssttttaaaarrrrtttt, ________llllccccllllddddttttaaaa____aaaaddddddddrrrreeeessssssss, ________llllccccllllddddttttaaaa____ssssiiiizzzzeeee,
     ________pppprrrrooooggggrrrraaaammmm____hhhheeeeaaaaddddeeeerrrr____ttttaaaabbbblllleeee, ________rrrrlllldddd____oooobbbbjjjj____hhhheeeeaaaadddd, ________ssssttttaaaarrrrtttt, ________uuuunnnnwwwwiiiinnnndddd,
     ____ddddaaaattttaaaa____iiiinnnniiiitttt____ttttaaaabbbblllleeee, ____eeeeddddaaaattttaaaa, ____eeeennnndddd, ____eeeetttteeeexxxxtttt, ____ffffbbbbssssssss, ____ffffddddaaaattttaaaa, ____fffftttteeeexxxxtttt, ____ggggpppp,
     ____ggggpppp____ddddiiiisssspppp, ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn, ____pppprrrroooocccceeeedddduuuurrrreeee____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee, ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee,
     ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee____ssssiiiizzzzeeee, ____rrrrlllldddd____nnnneeeewwww____iiiinnnntttteeeerrrrffffaaaacccceeee,	____rrrrtttt____ssssyyyymmmmbbbboooollll____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee,
     ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee, and ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee____ssssiiiizzzzeeee.

     In	addition, all symbols that begin with the prefixes ________eeeellllffff____vvvvaaaaddddddddrrrr and
     ________eeeellllffff____ssssiiiizzzzeeee	are reserved.  It is erroneous to define these symbols.

     In	ANSI C,	the following symbols can be defined:  eeeennnndddd, eeeeddddaaaattttaaaa, and
     eeeetttteeeexxxxtttt.  If	they are not defined (but only referenced), they are
     assigned the same values as ____eeeennnndddd, ____eeeeddddaaaattttaaaa, and ____eeeetttteeeexxxxtttt respectively.
     For more information on these symbols, see	the eeeennnndddd(3C) man	page.

LLLLIIIIBBBBRRRRAAAARRRRYYYY	SSSSEEEEAAAARRRRCCCCHHHH OOOORRRRDDDDEEEERRRR
     If	an argument specified on the lllldddd	command	line is	a library, it is
     searched exactly once at the point	it is encountered in the argument
     list.  There are two kinds	of libraries:  archives	and DSOs.  When
     linking with archives, only the routines that define an unresolved
     external reference	are loaded.  Shared objects are	used only if the
     output is to be dynamic.  In that case, only the name is used for
     external resolution; no object is included	as part	of the output
     object file.  Note	that unresolved	symbols	are not	considered an error
     when linking with the ----sssshhhhaaaarrrreeeedddd option.  The	library	(archive) symbol
     table (see	aaaarrrr(1)) is a hash table and is searched to resolved external
     references	that can be satisfied by library members.  The ordering	of
     library members is	not important.	By default, internal libraries are
     not searched.

     When searching for	ucode libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb////, ////lllliiiibbbb////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////.	 Note that although
     archives are found	in ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////, shared objects should not be
     installed there because rrrrlllldddd(5) will not find them.

     When searching for	64-bit libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb66664444////, ////lllliiiibbbb66664444////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////.  When searching for
     new 32-bit	libraries, the default directories searched are
     ////uuuussssrrrr////lllliiiibbbb33332222////, ////lllliiiibbbb33332222////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////.

NNNNOOOOTTTTEEEESSSS
     An	object's segments must not overlap, and	all of the object's
     addresses must be less than 0x80000000 (except when compiling with	the
     old 32-bit	option (----33332222), for which	the size maximum is 0x4000000).
     The stack starts at 0x80000000 and	grows down through lower addresses.
     Space should be left for it.  The default text segment address is
     0x10000000, with the data segment immediately following the text
     segment.  By default, the bss segment follows the data segment.

     While 64-bit programs can use much	more than 2 gigabytes of memory,
     the executable file can be	at most	2 gigabytes in size.

     When creating an executable object	runnable on UNIX, aaaa....oooouuuutttt,
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrtttt1111....oooo, should be	the first object loaded, and
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrttttnnnn....oooo should be last, following any libraries.  The
     compilers (cccccccc(1), CCCCCCCC(1), ffff99990000(1), and ffff77777777(1)) automatically	load these
     object files in the proper	order. Note that if lllldddd is invoked directly,
     those two objects are not loaded automatically.  It is your
     responsibility to specify them explicitly.

     The linker	no longer recognizes archives built with aaaarrrr ----CCCC (COFF-style)
     archive headers.

     The following group of options have been superseded by the	----eeeellllssssppppeeeecccc
     functionality:  ----XXXXnnnnoooobbbbsssssssscccchhhhaaaannnnggggeeee, ----XXXXnnnnoooossssoooorrrrttttbbbbssssssss, ----XXXXssssoooorrrrttttbbbbssssssss, ----XXXXnnnnddddbbbblllloooocccckkkk,
     ----XXXXbbbblllloooocccckkkk, ----XXXXbbbblllloooocccckkkkrrrraaaannnnggggeeee, ----XXXXnnnnddddllllooooccccaaaallllddddaaaattttaaaa, ----XXXXaaaalllliiiiggggnnnnbbbbssssssss, ----XXXXnnnnooooaaaalllliiiiggggnnnnbbbbssssssss,
     ----XXXXccccaaaacccchhhheeeemmmmiiiissssaaaalllliiiiggggnnnn, ----XXXXccccaaaacccchhhheeeessssiiiizzzzeeee, ----XXXXccccaaaacccchhhheeeelllliiiinnnneeeessssiiiizzzzeeee, ----XXXXddddeeeeffffmmmmoooovvvveeeemmmmaaaaxxxx,
     ----XXXXsssseeeettttaaaalllliiiiggggnnnn, and ----XXXXddddeeeebbbbuuuugggg.  The ----XXXXllllooooccccaaaallllddddaaaattttaaaa option has been replaced	by
     the ----XXXXllllooooccccaaaallll option.

     As	of the 7.3.1.3m	release, the ....ddddyyyynnnnaaaammmmiiiicccc section of the aaaa....oooouuuutttt now has
     entries for the timestamp and checksum.  This allows downstream tools
     such as SpeedShop to determine if data files match	the executable or
     not.  This	information has	always been in DSOs.  NOTE that	a
     recompiled	aaaa....oooouuuutttt now always has different bits.

     As	of the 7.3.1.3m	release, the linker generates some text	on its own
     such as the iiiinnnniiiitttt and ffffiiiinnnniiii function	driver.	 Prior to this,	the linker
     neglected to generate debugging information along with this text,
     making unwinding in the debugger and exception-handling routines
     problematic.  This	has been fixed.

     There are still problems with unwinding through linker-generated code
     that has been instrumented	for performance	evaluation. This will be
     addressed in future releases.

EEEEXXXXPPPPOOOORRRRTTTTIIIINNNNGGGG AAAANNNNDDDD HHHHIIIIDDDDIIIINNNNGGGG SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     By	default, all symbols are exported.  That is, if	they were
     externally	visible	in the incoming	object file, they will be
     externally	visible	in the generated aaaa....oooouuuutttt or DSO.

     The one exception to this rule is when loading an archive library when
     building a	DSO.  In this case, the	default	behavior is to silently
     hide all symbols that come	from the archive library.  The ----aaaallllllll option
     can be used to override that default behavior.

     WARNING:  Be careful when using ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll and	archive	libraries.
     The ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll	option silently	exports	the other symbols from the
     archive library when you might have expected them to remain hidden.

     When building a DSO it is a good idea to control its interface by
     exporting only those symbols that users are allowed to reference.
     This is best done by listing exported symbols in a	file and using the
     ----eeeexxxxppppoooorrrrtttt____ffffiiiilllleeee option.   This option	exports	the listed symbols and
     hides all others.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     The following sample lllldddd command line illustrates how to specify ----iiiinnnniiiitttt
     and ----ffffiiiinnnniiii functions:

ld ... -init mystartup1	-fini myshutdown1 -init	mystartup2 -fini myshutdown2

     The ----ffffiiiinnnniiii routines	execute	in the reverse order from how they are
     specified on the command line, mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222	first and mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111
     second.  You cannot run mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222 after mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111 because all
     local objects will	already	have been destroyed by mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111.

FFFFIIIILLLLEEEESSSS
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////lllliiiibbbb****....aaaa libraries

     aaaa....oooouuuutttt

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     aaaarrrr(1), aaaassss(1), cccccccc(1), ccccoooolllllllliiiiddddeeee(1), ffff77777777(1), ffff99990000(1), hhhhiiiinnnnvvvv(1M),	mmmmaaaakkkkeeee(1),
     pppprrrrooooffff(1), rrrrqqqqssss(1)

     llllsssseeeeeeeekkkk(2), mmmmmmmmaaaapppp(2),	ooooppppeeeennnn(2), rrrreeeeaaaadddd(2)

     eeeennnndddd(3C)

     eeeellllffff(4)

     ddddssssoooo(5), ggggpppp____oooovvvveeeerrrrfffflllloooowwww(5), oooopppptttt(5), rrrrlllldddd(5)

     _M_I_P_S_p_r_o _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e
LD(1)								      LD(1)


NNNNAAAAMMMMEEEE
     lllldddd	- Link editor

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     lllldddd	[----33332222] [----66664444] [----aaaa] [----aaaabbbbiiii]	[----aaaajjjjeeeeoooopppp] [----aaaallllllll]	[----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp]
     [----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg] [----aaaalllllllloooowwww____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----aaaaoooouuuuttttkkkkeeeeeeeepppp] [----BBBB _n_u_m]
     [----BBBBssssyyyymmmmbbbboooolllliiiicccc] [----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd] [----cccccccckkkkrrrr] [----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----ccccxxxxxxxx] [----dddd] [----DDDD _n_u_m] [----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd]	[----ddddeeeellllaaaayyyy____llllooooaaaadddd] [----ddddeeeemmmmaaaannnngggglllleeee]
     [----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----dddd] [----eeee _s_y_m_b_o_l] [----eeeellllffff] [----eeeellllssssmmmmaaaapppp] [----eeeellllssssppppeeeecccc _f_i_l_e]
     [----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn] [----eeeexxxxcccclllluuuuddddeeee	_o_b_j_e_c_t]	[----eeeexxxxppppoooorrrrttttssss] [----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e]
     [----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----ffff	_f_i_l_l] [----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l_s]
     [----ffffoooorrrrcccceeee____llllooooaaaadddd] [----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e] [----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]
     [----GGGG [_n_u_m]]	[----ggggppppiiiinnnnffffoooo] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____iiiinnnniiiitttt] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____ssssttttaaaarrrrtttt____iiiinnnniiiitttt] [----hhhh]
     [----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e] [----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----hhhhiiiiddddeeeessss]
     [----IIII _p_a_t_h_n_a_m_e] [----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr] [----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd]	[----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn]
     [----iiiinnnnffffoooo] [----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l] [----iiiivvvvppppaaaadddd] [----llll _x] [----LLLL _d_i_r] [----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::............]
     [----LLLLDDDD____MMMMSSSSGGGG::::............]  [----mmmm] [----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e] [----mmmmiiiippppssss2222] [----mmmmiiiippppssss3333] [----mmmmiiiippppssss4444]
     [----mmmmmmmmaaaapppp] [----nnnn] [----NNNN] [----nnnn33332222] [----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee] [----nnnnooooiiiinnnnffffoooo] [----nnnnooooiiiivvvvppppaaaadddd]
     [----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt] [----nnnnoooo____rrrrqqqqssss] [----nnnnoooonnnneeee]
     [----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd] [----nnnnoooo____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooossssttttddddlllliiiibbbb] [----nnnnoooottttaaaallllllll]
     [----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk] [----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd] [----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e]
     [----oooo _o_u_t_f_i_l_e] [----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo] [----rrrr] [----rrrreeeeaaaadddd] [----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd]
     [----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee] [----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h] [----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr] [----ssss]
     [----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g] [----sssshhhhaaaarrrreeeedddd] [----sssshhhhoooowwww] [----sssshhhhoooowwww____uuuunnnnrrrreeeeffff]
     [----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e] [----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444] [----TTTT _n_u_m]
     [----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]	[----uuuu _s_y_m_n_a_m_e] [----UUUU] [----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----vvvv] [----VVVV] [----VVVVSSSS _n_u_m] [----wwww] [----WWWWxxxx] [----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----wwwwooooffffffff _n_u_m_l_i_s_t] [----xxxx]
     [----XXXXllllooooccccaaaallll _n_a_m_e_s] [----yyyy_s_y_m] [----zzzz] _f_i_l_e ...

IIIIMMMMPPPPLLLLEEEEMMMMEEEENNNNTTTTAAAATTTTIIIIOOOONNNN
     IRIX systems

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     lllldddd, the link editor, links	ELF object files to create an executable
     file.  lllldddd uses the	archive	format created by the archiver,	aaaarrrr(1).

     The lllldddd command combines several object files into one, performs
     relocation, resolves external symbols, builds tables and relocation
     information for run-time linkage (in case of shared linking), and
     supports symbol table information for symbolic debugging.	In the
     simplest case, the	names of several object	files are specified, and lllldddd
     combines them.  This produces an object module that can be	executed or
     used as input for a subsequent lllldddd run.  By	default, the output from lllldddd
     is	left in	file aaaa....oooouuuutttt.

     Input sections are	linked together	contiguously into output sections.
     Output sections are organized in an ELF file into loadable	segments
     specified in the program header.  Segments	represent a contiguous
     portion of	the file to be loaded into memory, with	possibly the
     addition of extra memory at the end.  For more information, see the
     eeeellllffff(4) man	page.

     The sections within the argument object files are combined, some by
     merging and others	by concatenation.  Unless the ----eeee option	is
     specified,	the entry point	of the output is the first instruction in
     the text segment.

     Typically,	lllldddd is invoked by cccccccc(1),	CCCCCCCC(1), ffff77777777(1), or ffff99990000(1) as the
     final step	in compilation,	but it can be run separately.  Many lllldddd
     options can be specified to the linker as options to the ----WWWWllll option on
     the compiler command line.	 For example:

	  cc ... -Wl,-m

     The following terms are used on this man page and throughout the
     loader documentation:

     TTTTeeeerrrrmmmm	    DDDDeeeeffffiiiinnnniiiittttiiiioooonnnn

     aaaa....oooouuuutttt	    File aaaa....oooouuuutttt is an executable	file produced by lllldddd, but it
		    is not a Dynamic Shared Object (DSO).  By default, the
		    IRIX compilers invoke lllldddd and produce an aaaa....oooouuuutttt file that
		    is a dynamic executable.  You can also request that	the
		    compiler produce an	aaaa....oooouuuutttt file that	is not a dynamic
		    executable by compiling with the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	on
		    the	compiler command line.

     DSO	    A DSO, or Dynamic Shared Object, is	an executable
		    object file	that is	relocatable by rrrrlllldddd(5) at load time.
		    It consists	of shared text and data.  It is	produced by
		    the	linker.	 Usually written to _f_i_l_e....ssssoooo.

     Library	    A generic term that	includes both DSOs and archive
		    libraries.

     Object file    A relocatable file produced	by the compiler	and written
		    to _f_i_l_e....oooo.

     Archive	    Produced by	aaaarrrr(1).	Usually	written	to _f_i_l_e....aaaa.

     Section	    A contiguous block of data and internal information	in
		    an object file that	is manipulated by the linker as	a
		    single piece.

     Segment	    A contiguous block of data and internal information	in
		    an executable file that is manipulated by the kernel as
		    a single piece.  In	general, the linker takes sections
		    from object	files and concatenates them to form
		    segments in	executable files.  In general, the kernel
		    maps each segment into the processes address space at
		    the	addresses specified by the linker.

     This man page describes each lllldddd option.  After each option's
     description is a parenthesized list that indicates	the compiler
     command lines from	which the particular option can	be passed as an
     argument to the compiler's	----WWWWllll option.  The compilers are represented
     as	follows	in the these lists:

     NNNNoooottttaaaattttiiiioooonnnn  CCCCoooommmmppppiiiilllleeeerrrr

     C	       MIPSpro C Compiler

     C++       MIPSpro C++ Compiler

     F77       MIPSpro Fortran 77 Compiler

     F90       MIPSpro 7 Fortran 90 Compiler

     The following sections catagorize the linker options.

   SSSSyyyymmmmbbbboooollll RRRReeeessssoooolllluuuuttttiiiioooonnnn aaaannnndddd IIIInnnnppppuuuutttt SSSSeeeeaaaarrrrcccchhhh PPPPaaaatttthhhh
     The following linker options are involved in the symbol resolution
     process:

     ----cccccccckkkkrrrr     Sets the	value of the variable ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn to specify
	       non-ANSI	semantics to lllliiiibbbbcccc.  For	more information, see
	       eeeennnndddd(3C).	 (C)

     ----ccccxxxxxxxx      Specifies special handling of certain symbols needed for
	       proper linkage and execution of C++ programs.

     ----llll_x       Identifies library files.  The linker searches for libraries
	       lllliiiibbbb_x....ssssoooo or lllliiiibbbb_x....aaaa, where	_x is a string.	A shared object	or
	       an archive is searched when its name is encountered, so the
	       position	of the ----llll option on the	command	line is
	       significant.  (C, C++, F77, F90)

     ----LLLL	_d_i_r    Controls	the library search path.

	       When _d_i_r	is specified, the linker searches the directories
	       specified in _d_i_r	before it searches the default directories.
	       The linker searches for lllliiiibbbb_x....ssssoooo,	lllliiiibbbb_x....aaaa,	or lllliiiibbbb_x....bbbb in _d_i_r.
	       If ----LLLL _d_i_r is specified in conjunction with ----llll _x,	the ----LLLL
	       option must be before (to the left) of the ----llll option(s).	 If
	       the ----LLLL _d_i_r option is specified in conjunction with the ----vvvv
	       option, the system writes the search paths and indicates
	       which libraries were actually chosen.  This option can be
	       specified without a space between ----LLLL and	_d_i_r. (C, C++, F77,
	       F90)

     ----nnnnoooossssttttddddlllliiiibbbb Prevents	the linker from	searching in the default
	       directories.  This option is useful when	the default
	       directories for libraries should	not be searched	and only
	       the directories specified by ----LLLL _d_i_r are to be searched.

	       The ----nnnnoooossssttttddddlllliiiibbbb option is a synonym for the ----LLLL option
	       specified without its _d_i_r argument.  For	example, assume
	       that you	wanted library mmmmyyyylllliiiibbbb searched, and mmmmyyyylllliiiibbbb is stored
	       in directory mmmmyyyyddddiiiirrrr.  Further assume that	you do not want	the
	       linker to search	in the default directories.  The following
	       sample command lines are	equivalent:

		    ld -nostdlib -L mydirs -lmine kangaroo.o
		    ld -L -L mydirs -lmine kangaroo.o

	       This searches for lllliiiibbbbmmmmiiiinnnneeee....aaaa or lllliiiibbbbmmmmiiiinnnneeee....ssssoooo in mmmmyyyyddddiiiirrrrssss.  mmmmyyyyddddiiiirrrrssss
	       is a colon-separated list of search directories.

		    The	----nnnnoooossssttttddddlllliiiibbbb option must be specified in conjunction
		    with the ----LLLL	_d_i_r option.  (C, C++, F77, F90)

     ----uuuu	_s_y_m_n_a_m_e
	       Enters _s_y_m_n_a_m_e as an undefined symbol in	the symbol table.
	       This is useful for loading entirely from	an archive because
	       initially, the symbol table is empty and	an unresolved
	       reference is needed to force the	loading	of the first
	       routine.

	       If the symbol used in this option is not	resolved by any
	       object by the end of the	link, the resulting executable or
	       DSO will	have that symbol undefined.  (C, C++)

   IIIInnnnppppuuuutttt SSSSppppeeeecccciiiiffffiiiiccccaaaattttiiiioooonnnn OOOOppppttttiiiioooonnnnssss
     The following options affect both input object specification and
     symbol resolution:

     ----aaaallllllll      Links in	all of the objects from	all archives following this
	       option. This option is commonly used in conjunction with	the
	       ----sssshhhhaaaarrrreeeedddd option to create	a shared object	out of an existing
	       archive.	 (C, C++, F77, F90)

     ----eeeexxxxcccclllluuuuddddeeee _o_b_j_e_c_t
	       Used in conjunction with	the ----aaaallllllll and ----sssshhhhaaaarrrreeeedddd options.  The
	       _o_b_j_e_c_t specified	is excluded from the shared object.  (C,
	       C++, F77, F90)

     ----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e
	       Allows you to specify arguments to lllldddd from a file.  lllldddd reads
	       file _o_p_t_i_o_n__l_i_s_t__f_i_l_e as	if it appeared on the command line
	       in the same position as the ----ffffrrrroooommmm option.  New-line
	       characters in _o_p_t_i_o_n__l_i_s_t__f_i_l_e are treated as if	they were
	       ordinary	spaces.

     ----MMMMDDDDiiiiggggnnnnoooorrrreeee _n_a_m_e
	       Prevents	the linker from	adding the _n_a_m_ed object	or DSO to
	       the MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd file.  For more information, see the
	       ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e option's description.  (C, C++, F77, F90)

     ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e
	       By default, the linker adds the names of	any objects and
	       DSOs used in the	link to	_f_i_l_e.  When compiling, _f_i_l_e is
	       updated to contain header, library, and run-time	mmmmaaaakkkkeeee(1)
	       dependencies for	the output file.

	       When this option	is specified, the linker updates only lines
	       that end	with a distinctive make	comment	and begin with the
	       name of the output file followed	by a colon (::::).	 The
	       standard	name for _f_i_l_e is MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd.  (C, C++, F77, F90)

     ----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee
	       Specifies that that references to libraries specified in	the
	       ----llll option must resolve to shared	objects.  Typically, if	the
	       shared object, as specified by the ----llll option, is	not found,
	       the linker attempts to find the corresponding archive to
	       resolve undefines.  Specifying this does	not allow those
	       archives	to be used.  (C, C++, F77, F90)

     ----nnnnoooottttaaaallllllll   Turns off the action of the ----aaaallllllll	option.	 This pulls objects
	       out of the archive into a DSO if	the objects resolve
	       unresolved symbols in the already included object, but these
	       objects are included without exporting their symbols by
	       default.	 (C, C++, F77, F90)

     ----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e
	       Specifies a file	list.  The file	specified by
	       _o_b_j_e_c_t__l_i_s_t__f_i_l_e	contains a list	of file	or archive names.
	       By putting the file list	in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e instead of
	       on the command line, you	can avoid exceeding the	limit on
	       the length of a command line.  This is primarily	useful when
	       linking very large programs with	many objects and long file
	       names.

	       In the _o_b_j_e_c_t__l_i_s_t__f_i_l_e,	blank lines and	leading	white space
	       are ignored.  Files must	be listed one per line.	 A file
	       name is considered ended	by the next whitespace character.
	       Characters after	the file name are ignored.  Any	leading
	       dash (----)	characters in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e line are
	       considered part of a file name; nothing in the file is
	       interpreted as an option.  Lines	in the file are	limited	to
	       BBBBUUUUFFFFSSSSIIIIZZZZ****2222	characters (16 Kbytes) each.  (C, C++, F77, F90)

   DDDDeeeebbbbuuuuggggggggiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The debugging options control listings and	messages that can be
     produced when debugging new software.  For	more information on
     controlling messages when debugging, see the description for the
     ----LLLLDDDD____MMMMSSSSGGGG:::: option group.  The following options aid in debugging linking
     sessions:

     ----aaaaoooouuuuttttkkkkeeeeeeeepppp By default, lllldddd removes the output file if there are link
	       errors.	When this option is specified, though, the output
	       is written to aaaa....oooouuuutttt.  (C, C++, F77, F90)

     ----ffff	_f_i_l_l   Sets the	fill pattern for _h_o_l_e_s between sections	within an
	       output segment.	The argument _f_i_l_l must be a four-byte
	       hexadecimal constant.

	       As the linker lays out sections,	the alignment restrictions
	       lead to gaps, or	_h_o_l_e_s, between the sections.  This option
	       specifies the value to use to fill the holes.

     ----ggggppppiiiinnnnffffoooo   Produces	a listing of short data	section	components (page
	       pointers, GOT pointers, small data, and small literals).
	       This may	be useful in identifying modules with large
	       GP-relative sections. The listing produced by this option is
	       a subset	of the information that	is produced when ----mmmm is
	       specified.

	       If you receive message 171, it means that the GP-relative
	       data has	been broken up into several areas (multigot).  The
	       ----ggggppppiiiinnnnffffoooo option does not work in such cases, but you can
	       specify the ----mmmm option.  The ----mmmm option is	a good alternative.
	       It provides all the information needed to analyze
	       GP-relative usage.

     ----mmmm	       Writes a	map or listing of the input/output (I/O) sections
	       to standard output.  This is a UNIX system V-like map.

     ----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo
	       Prints extra information	regarding the quickstart status	of
	       the executable file created.  This includes a full list of
	       conflict	symbols	and their objects of origin.  (C, C++, F77,
	       F90)

     ----sssshhhhoooowwww     Prints the name of the specific linker being used.  (C, C++,
	       F77, F90)

     ----sssshhhhoooowwww____uuuunnnnrrrreeeeffff
	       Lists defined but unreferenced symbols.	This option can	be
	       used when looking for dead code in a program.  Note that
	       library routines	typically define symbols that might not	be
	       referenced by all programs.  Also, in the case of weak and
	       strong symbol pairs, in which two different symbols point to
	       the same	virtual	address, if only one of	them is	referenced,
	       the other symbol	is still listed.  This does not	necessarily
	       mean the	specified function is never used.

     ----sssspppplllliiiitttt____ccccoooommmmmmmmoooonnnn
	       Shows how and where split commons were laid out.	 For more
	       information on this, see	the oooopppptttt(5) man page's description
	       of the ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn	option.

     ----vvvv	       Sets verbose mode. This option generates	more information
	       than the	----sssshhhhoooowwww option.  This options shows linker phases,
	       what and	where it searches for objects and libraries, and
	       what is actually	linked in.  (C,	C++, F77, F90)

     ----VVVV	       Prints the version of lllldddd	being used.

     ----yyyy_s_y_m     Writes symbol information to ssssttttddddeeeerrrrrrrr.  Indicates each file in
	       which _s_y_m appears, _s_y_m's	type, and whether the file defines
	       or references _s_y_m.  Many	such options can be given to trace
	       many symbols.  Each ----yyyy_s_y_m applies to those files	listed
	       after this option on the	command	line.  Symbols and archived
	       objects that are	not linked in and DSOs that are	not used do
	       not appear in the output.  (C, C++, F77,	F90)

   MMMMeeeessssssssaaaaggggeeee OOOOppppttttiiiioooonnnnssss
     The following options affect the process of issuing messages:

     ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg
	  When using an	ELF layout specification file with the ----eeeellllssssppppeeeecccc
	  option, the linker typically generates an error if portions of
	  the object file that are not strippable have been omitted from
	  the output.  Specifying the ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg option overrides this
	  error	check and allows the omission of data or text that would
	  ordinarily be	linked.	 In this case, you must	ensure that the
	  output is correct.

     ----ddddeeeemmmmaaaannnngggglllleeee
	  Specifies that demangling of C++ names should	take place when
	  generating other messages.  (C)

     ----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	  Disables the warning that is issued when the ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd option
	  is in	effect.	 (C, C++, F77, F90)

     ----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  Produces an executable or DSO	and exits with zero status even	if
	  there	are unresolved symbols.	 Resolution of these symbols is
	  completed by rrrrlllldddd(5).	If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd option is also
	  specified, a list of the unresolved symbols is generated.  If	the
	  ----sssshhhhaaaarrrreeeedddd option is also specified, no such list is generated.	If
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option is also specified, the	----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  option is ignored and	the ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd option is put into
	  effect, as it	always is when ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd is specified.

	  This option is enabled by default when the ----sssshhhhaaaarrrreeeedddd option is
	  specified, but it is not enabled when	the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	  ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are enabled.  (C,	C++, F77, and F90)

     ----iiiinnnnffffoooo
	  Generates messages of	an informational nature	that might
	  highlight unusual, but not illegal, situations.  This	is enabled
	  by default.  (C, C++,	F77, F90)

     ----LLLLDDDD____MMMMSSSSGGGG::::[_m_s_g_t_y_p_e====_n_u_m_l_i_s_t][::::_m_s_g_t_y_p_e=_n_u_m_l_i_s_t]...
	       Changes or respecifies message severities.  This	option
	       controls	the general message handling interface for lllldddd.	It
	       allows you to change the	default	message	severity.  For
	       _n_u_m_l_i_s_t,	specify	a comma- or dash-separated list	of message
	       numbers.	For a list of the linker messages and their
	       numbers,	see the	MESSAGES section.

	       Valid _m_s_g_t_y_p_e arguments,	and their meanings, are	as follows:

	       _m_s_g_t_y_p_e	 MMMMeeeeaaaannnniiiinnnngggg

	       eeeerrrrrrrroooorrrr	 Treats	each message in	_n_u_m_l_i_s_t	as an error.

	       iiiinnnnffffoooo	 Treats	each message in	_n_u_m_l_i_s_t	as an informational
			 message.

	       wwwwaaaarrrrnnnniiiinnnngggg	 Treats	each message in	_n_u_m_l_i_s_t	as a warning.

	       vvvveeeerrrrbbbboooosssseeee	 Treats	each message in	_n_u_m_l_i_s_t	as a verbose
			 message.

	       ooooffffffff	 Ignores each message in _n_u_m_l_i_s_t.

	       Example 1:  Specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333 tells the linker
	       to treat	message	33, which by default is	an error, as a
	       warning.	 Similarly, specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333::::ooooffffffff====44447777----66668888
	       tells the linker	to treat message 33 as a warning and to
	       ignore all messages from	47 to 68 inclusive.

	       Example 2:  Some	information obtained when the ----vvvv (verbose
	       mode) option is enabled can be of use when debugging
	       programs.  To obtain informational messages regarding symbol
	       resolution conflict, preemption,	and type mismatch
	       information in regard to	weak symbols, specify the following
	       lllldddd options:

		    -LD_MSG:info=134,175-177
		    -quickstart_info

	       The preceding options produce the following messages:

	   134:	Weak definition	preempting another weak	definition.
	   174:	Strong definition preempting a weak definition.
	   175:	Weak definition	type mismatch with a strong definition.
	   176:	Weak definition	type mismatch with a reference.
	   177:	Weak definition	type mismatch with another weak	definition.

	       Fatal errors cannot be modified by ----LLLLDDDD____MMMMSSSSGGGG::::.  (C, C++, F77,
	       F90)

     ----nnnnooooiiiinnnnffffoooo   Suppresses informational	messages generated when	the ----iiiinnnnffffoooo
	       option is in effect.  (C, C++, F77, F90)

     ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	       Lists unresolved	symbols.  If the ----sssshhhhaaaarrrreeeedddd option	is also
	       specified, a DSO	is produced and	lllldddd exits with zero status.
	       If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, lllldddd
	       exits with nonzero status and no	executable is produced.
	       This option is enabled by default when the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, but it is disabled by
	       default when the	----sssshhhhaaaarrrreeeedddd	option is specified.  (C, C++, F77,
	       and F90)

     ----UUUU	       Suppresses error	messages that would be generated for
	       undefined symbols.  This	option allows you to create an
	       executable with undefined symbols.  Referencing an undefined
	       symbol during execution can cause a segmentation	fault and a
	       core dump.

     ----wwww, ----wwwwaaaallllllll Specifies that all warnings are to be suppressed.  (C, C++,
	       F77, F90)

     ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	       Specifies that the linker should	issue a	warning	if it finds
	       that some object	has not	been used in a link.  The semantics
	       of dynamic linking dictate that this cannot be determined
	       absolutely at static link time, but it is usually quite
	       reliable.  This option is enabled by default.  (C, C++, F77,
	       F90)

     ----wwwwooooffffffff _n_u_m_l_i_s_t
	       Suppresses the messages specified in _n_u_m_l_i_s_t.  For _n_u_m_l_i_s_t
	       specify a comma-separated list of warning message numbers.
	       For example, specifying ----wwwwooooffffffff """" 5555,,,,11117777,,,,22223333""""	suppresses warning
	       messages	numbered 5, 17,	and 23.	 If you	are linking using
	       the cccccccc(1) command, this option should be	passed to the
	       linker with the following three options:	 ----WWWWllll,,,,----wwwwooooffffffff,,,,5555 ----WWWWllll,,,,----
	       wwwwooooffffffff,,,,11117777 ----WWWWllll,,,,----wwwwooooffffffff,,,,22223333.  This is equivalent to specifying
	       ----LLLLDDDD____MMMMSSSSGGGG::::OOOOFFFFFFFF====5555,,,,7777,,,,22223333.  (C,	C++, F77, F90)

   SSSSttttrrrriiiippppppppiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options are involved	in the process of stripping
     information from an object	file.  The linker does not strip out
     information that would prevent the	program	from running.

     ----ssss	       Strips the symbolic information from the	output object file.
	       (C, C++,	F77, F90)

     ----xxxx	       Does not	preserve local (non-global) symbols in the output
	       symbol table.  The linker enters	external and static symbols
	       only.  This option conserves space in the output	file.

   OOOOuuuuttttppppuuuutttt OOOObbbbjjjjeeeecccctttt FFFFoooorrrrmmmmaaaatttt	OOOOppppttttiiiioooonnnnssss
     The following options affect the format of	the output object file:

     ----33332222 or ----oooo33332222
	       Specifies that the object to be linked (and the input
	       objects)	are to be old-style, 32-bit ucode objects.  (C,
	       C++, F77, F90)

     ----66664444       Specifies that the object to be linked (and the input
	       objects)	are to be 64-bit objects.  (C, C++, F77, F90)

     ----aaaabbbbiiii      Specifies that the resultant output executable conforms to
	       generic MIPS ABI	conventions.  (C, C++, F77, F90)

     ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       Produces	a dynamic executable.  The object created can use
	       shared objects at runtime. This is enabled by default.  (C,
	       C++, F77, F90)

     ----eeeellllffff      Produces	an ELF output object file.  This is the	default,
	       and currently the only, file format supported.  (C, C++,
	       F77, F90)

     ----mmmmiiiippppssss2222    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 2 ISA.	 (C, C++, F77, F90)

     ----mmmmiiiippppssss3333    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 3 ISA.	 If lllldddd finds object files
	       that are	MIPS 4,	the resulting binary is	silently marked	as
	       being a ----mmmmiiiippppssss4444 binary.  (C, C++,	F77, F90)

     ----mmmmiiiippppssss4444    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 4 ISA.	 (C, C++, F77, F90)

     ----nnnn33332222      Specifies that the object to be linked (and the input
	       objects)	are to be new-style, 32-bit objects.  (C, C++, F77,
	       F90)

     ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd
	       Produces	a static executable.  The output object	created
	       will not	use any	shared objects during execution.  This
	       declares	that you are not loading position-independent code
	       (PIC).  This option cannot be specified in conjunction with
	       the ----rrrr option; do not use them together on the same command
	       line.  (C, C++, F77, F90)

     ----rrrr	       Retains relocation entries in the output	file.  Relocation
	       entries must be saved if	the output file	is to become an
	       input file in a subsequent lllldddd run.  This	option also
	       prevents	final definitions from being given to common
	       symbols and suppresses the uuuunnnnddddeeeeffffiiiinnnneeeedddd ssssyyyymmmmbbbboooollll diagnostics.
	       This option cannot be specified in conjunction with the
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option; do not use them together on the same
	       command line.

     ----sssshhhhaaaarrrreeeedddd   Produces	a DSO, creates all of the tables for run-time
	       linking,	and resolves references	to other specified shared
	       objects.	 The object created can	be used	by the linker to
	       make dynamic executables.  (C, C++, F77,	F90)

   LLLLaaaayyyyoooouuuutttt OOOOppppttttiiiioooonnnnssss
     The layout	options	affect the layout of the object	file.  They are	as
     follows:

     ----BBBB	_n_u_m    Sets the	uninitialized data (BSS) segment origin.  Specify a
	       hexadecimal number for _n_u_m.

     ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	       Checks the location of this shared object's segments and
	       makes sure they stay out	of the way of others in	the
	       _l_o_c_a_t_i_o_n__f_i_l_e.  A single	registry file, either with
	       ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is allowed.	 This
	       option must be specified	in conjunction with the	----sssshhhhaaaarrrreeeedddd
	       option.	(C, C++, F77, F90)

	       lllldddd uses the ssssoooo____llllooooccccaaaattttiiiioooonnnnssss	file from the current directory	(in
	       preference to uuuussssrrrr////lllliiiibbbb if	the cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or
	       uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy option is not specified.

     ----dddd	       Forces definition of common storage and defines
	       loader-defined symbols even if ----rrrr is present.

     ----DDDD	_n_u_m    Sets the	initialized data segment origin.  Specify a
	       hexadecimal number for _n_u_m.  (C,	C++, F77, F90)

     ----eeeellllssssmmmmaaaapppp   Specifies that the linker should	emit a layout map in the
	       form of an ELF layout specification.  The output	from this
	       specification can be used with the ----eeeellllssssppppeeeecccc option without
	       modification.

     ----eeeellllssssppppeeeecccc _f_i_l_e
	       Specifies a file	to serve as an ELF layout specification
	       file.  This file	and its	syntax are described in	eeeellllssssppppeeeecccc(5).

     ----GGGG	[_n_u_m]  Specifies the largest size, in bytes, of	a ....ccccoooommmmmmmm	item that
	       is to be	allocated in the small BSS section for reference
	       off of the global pointer (GP).	The default is 8 bytes.	 If
	       the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has been specified, this option is
	       a synonym for the ----sssshhhhaaaarrrreeeedddd option	and takes no numerical
	       argument.

     ----iiiivvvvppppaaaadddd    Improves	cache behavior by causing the linker to	perform
	       intervariable padding of	some large variables.  This is in
	       effect by default.  (C, C++, F77, F90)

     ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::[_c_o_m_m_a_n_d====_a_r_g][::::_c_o_m_m_a_n_d====_a_r_g]...
	       The ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT option group accepts arguments that control
	       the layout of the object	file.  These arguments are as
	       follows:

	       sssseeeegggglllliiiiggggnnnn====_a_l_i_g_n_v_a_l
		    Defines the	minimum	segment	alignment.  _a_l_i_g_n_v_a_l must
		    be both PPPPAAAAGGGGEEEESSSSIIIIZZZZEEEE or	greater	and a power of 2.

	       llllggggooootttt____bbbbuuuuffffffffeeeerrrr====_v_a_l
		    Used by lllldddd after it	exhausts local Global Offset Table
		    (GOT) page slots.  The _v_a_l argument	is the number of
		    extra slots	per local GOT area to use.

	       mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd====_s_e_t_t_i_n_g
		    This is for	internal use.  When used in conjunction
		    with ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt, forces	different levels of
		    multigot during regression testing.	 When disabled,
		    every input	section	to has its own GOT.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  Usually,	the linker attempts
		    to link everything,	generating a single GOT.  If this
		    fails, it reruns the layout	phase and possibly creates
		    multiple GOT regions.  This	option causes the first
		    layout pass	to fail.  This is used in conjunction with
		    the	mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd option described	previously.

	       ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  When used in conjunction
		    with the mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd (described previously), it
		    forces multiple levels of multigot during regression
		    testing.

	       sssseeeeggggaaaalllliiiiggggnnnn====_v_a_l
		    Defines the	minimum	segment	alignment.  _v_a_l	must be
		    both 0x1000	or greater and a power of 2.

	       oooonnnneeee____ggggooootttt====_s_e_t_t_i_n_g
		    Prevents the linker	from producing multiple	GP regions.
		    For	more information, see mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd, which is
		    described previously in this list.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       rrrreeeeoooorrrrddddeeeerrrr____ffffiiiilllleeee====_f_e_e_d_b_a_c_k__f_i_l_e
		    Names a feedback file.  When specified, function layout
		    in the text	section	is optimized to	minimize page
		    faults and I-cache misses based upon the frequency
		    information	in _f_e_e_d_b_a_c_k__f_i_l_e.  This	file is	usually
		    produced by	pppprrrrooooffff(1)/ccccvvvvppppeeeerrrrffff(1) or ssssssssccccoooorrrrdddd(1)/ssssssssoooorrrrddddeeeerrrr(1),
		    but	a user can also	construct or modify this ASCII
		    file.

		    Note that object files must	have been compiled with	the
		    ----OOOOPPPPTTTT::::pppprrrroooocccceeeedddduuuurrrreeee____rrrreeeeoooorrrrddddeeeerrrr====OOOONNNN option specified.	 For more
		    information	on this	option,	see the	oooopppptttt(5) man page.

		    For	information on messages	related	to this	option,	see
		    the	MESSAGES section of this man page.  For	an example
		    that shows reordering code regions,	see the	_M_I_P_S_p_r_o
		    _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e.

	       (C, C++,	F77, F90)

     ----nnnn	  Preloads the entire text and data portions of	the executable(s)
	  when the output file is executed.  This involves moving the data
	  areas	up to the first	possible _p_a_g_e_s_i_z_e byte boundary	following
	  the end of the text.	You must specify the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	in
	  conjunction with the ----nnnn option.  (C, C++, F77, F90)

     ----NNNN	  Places the data segment immediately after the	text and does not
	  make the text	portion	read only or sharable.	You must specify
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option in conjunction	with the ----NNNN option.

     ----nnnnooooiiiivvvvppppaaaadddd
	  Disables the behavior	of the ----iiiivvvvppppaaaadddd option.  (C, C++,	F77, F90)

     ----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee
	  Puts ....rrrrooooddddaaaattttaaaa into the	data segment, which has	write permission.
	  This is in effect by default.	 (C, C++, F77, F90)

     ----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd
	  Puts ....rrrrooooddddaaaattttaaaa into the	text segment, where it is shared across
	  processes and	is read-only.  (C, C++,	F77, F90)

     ----TTTT	_n_u_m
	  Sets the text	segment	origin.	 (C, C++, F77, F90)

     ----XXXXllllooooccccaaaallll _n_a_m_e_s
	  Assigns the named global BSS (uninitialized data) symbols to a
	  special local	data section in	the aaaa....oooouuuutttt file.	 This is useful	for
	  hand-parallelized Fortran programs that require this symbol to be
	  private for each thread.

	  A symbol assigned to the small BSS or	small data section of an
	  object file cannot be	moved to the special section.  If the
	  symbol is assigned to	either the small BSS or	small data section,
	  either recompile with	a smaller ----GGGG number or use the following
	  directive in your source code:  ####pppprrrraaaaggggmmmmaaaa sssseeeeccccttttiiiioooonnnn____nnnnoooonnnn____ggggpppp((((_n_a_m_e) (in
	  C) or	CCCC****$$$$****SSSSEEEECCCCTTTTIIIIOOOONNNN____NNNNOOOONNNN____GGGGPPPP((((_n_a_m_e)))) (in Fortran).

     ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	  Registers the	location of this shared	object's segments and makes
	  sure they stay out of	the way	of others in the _l_o_c_a_t_i_o_n__f_i_l_e.	The
	  _l_o_c_a_t_i_o_n__f_i_l_e	is updated if it is writable.  A single	registry
	  file,	either with ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is
	  allowed.  This option	is must	be specified in	conjunction with
	  used with the	----sssshhhhaaaarrrreeeedddd	option.	 The default registry file is
	  either ////uuuussssrrrr////lllliiiibbbb,,,,33332222////_s_o__l_o_c_a_t_i_o_n_s or ////uuuussssrrrr////lllliiiibbbb,,,,66664444////_s_o__l_o_c_a_t_i_o_n_s,
	  depending on your compilation.  For more information on
	  _s_o__l_o_c_a_t_i_o_n_s,	see the	ddddssssoooo(5) man page.  (C, C++, F77,	F90)

     ----zzzz	  Arranges that	the process pages are loaded on	demand from the
	  resulting executable file rather than	preloaded, and that the
	  text pages are shared	among all users.  This is in effect by
	  default.

   DDDDyyyynnnnaaaammmmiiiicccc LLLLiiiinnnnkkkkiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options affect dynamic linking:

     ----BBBB	_s_y_m_b_o_l_i_c
	       Inserts the element DDDDTTTT____SSSSYYYYMMMMBBBBOOOOLLLLIIIICCCC into the	....ddddyyyynnnnaaaammmmiiiicccc section of
	       a shared	object library.	 This alters the dynamic linker's
	       symbol resolution algorithm for references within the
	       library.	 Instead of starting a symbol search with the
	       executable file,	the dynamic linker starts from the shared
	       object itself.  If the shared object fails to supply the
	       referenced symbol, the dynamic linker then searches the
	       executable file and other shared	objects	as usual.

     ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       When creating a dynamic shared object using the ----sssshhhhaaaarrrreeeedddd
	       option, this option marks that shared object as default
	       delay load.  (C,	C++, F77, F90)

     ----ddddeeeellllaaaayyyy____llllooooaaaadddd
	       Indicates that the next specified DSO should be delay
	       loaded.	Typically, linking against a DSO causes	that DSO to
	       be loaded at runtime whenever the DSO being created is
	       loaded.	This resolves the symbols supplied by that object.
	       You can use the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option to delay the loading of a
	       DSO. When ----ddddeeeellllaaaayyyy____llllooooaaaadddd is	specified, the DSO is not loaded
	       until a symbol supplied by the DSO is actually referenced.
	       Be careful when using the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option or when linking
	       against a DSO that was built using the ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       option.	Symbols	from a delay-loaded DSO	do not preempt
	       symbols from other libraries; they are resolved as if the
	       DSO was last on the link	line.  (C, C++,	F77, F90)

     ----eeee	_s_y_m_b_o_l Sets the	default	entry point address for	the output file	to
	       be that of the symbol _s_y_m_b_o_l.  (C, C++, F77, F90)

     ----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____EEEEXXXXAAAACCCCTTTT____MMMMAAAATTTTCCCCHHHH flag in the ....lllliiiibbbblllliiiisssstttt flags field.
	       This indicates to rrrrlllldddd(5)	that this shared object	must match
	       the timestamp and checksum from the ....lllliiiibbbblllliiiisssstttt section in
	       addition	to the interface version.  This	means that all DSOs
	       run against must	match exactly the version, timestamp, and
	       checksum	against	which the application was linked (or
	       processed by rrrrqqqqssss).  Moreover, if	the object is copied to
	       another machine,	it will	not run	unless the object is first
	       processed by rrrrqqqqssss(1) because the other machine is	likely to
	       have a different	checksum and timestamp for things on the
	       liblist of this object, such as lllliiiibbbbcccc....ssssoooo....1111.  On a	MIPS4
	       machine (such as	R10000), the following would not execute:

		    cccccccc tttt....cccc ----nnnn33332222	----mmmmiiiippppssss3333 ----WWWWllll,,,,----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn ;;;; ....////aaaa....oooouuuutttt

	       rrrrlllldddd(5) would generate a fatal error for the previous command
	       because the MIPS3 lllliiiibbbbcccc....ssssoooo....1111 linked against is not the same
	       as the MIPS4 lllliiiibbbbcccc....ssssoooo....1111 against which the	executable will	run
	       on that machine.	 (C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss  Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be exported by the object being created.
	       This is the default behavior for	linking	in an object, but
	       it is not for archives or DSOs.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The specified _f_i_l_e must contain a list	of symbols
	       that should be exported.	 The list is comprised of symbol
	       names separated by spaces or new-line characters.  Any
	       symbols not specifically	exported will be automatically
	       hidden.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	exported.  Use a
	       comma to	separate the symbols.  If you specify any exported
	       symbols,	all unspecified	symbols	are automatically hidden.
	       (C, C++,	F77, F90)

     ----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l
	       Puts calls to one or more _f_f_u_n_c_s_y_m_b_o_l into the code that
	       rrrrlllldddd(5) exercises	after the main program exits.  The
	       _f_f_u_n_c_s_y_m_b_o_l contains the	termination code to be called after
	       the main	program	exits.	In the case of a DSO that is no
	       longer referenced and is	closed using ddddllllcccclllloooosssseeee(3C), this
	       function	is called before the DSO is unmapped.

	       A single	----ffffiiiinnnniiii option is	effective in a given DSO or
	       executable.  To specify more than one _f_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----ffffiiiinnnniiii options on the command line.  If multiple
	       ----ffffiiiinnnniiii options are provided, they	are executed at	runtime	in
	       the reverse order listed	on the command line.  The ordering
	       facilitates pairing ----iiiinnnniiiitttt and ----ffffiiiinnnniiii entries in makefiles.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For information on
	       how to specify your own ----ffffiiiinnnniiii functions,	see the	EXAMPLES
	       section.	 (C)

     ----ffffoooorrrrcccceeee____llllooooaaaadddd
	       Forces the normal loading of the	next specified DSO,
	       overriding any default delay load attribute associated with
	       that DSO.  (C, C++, F77,	F90)

     ----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Specifies that the linker perform the work described for	the
	       ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk option and, in addition, add	each
	       library encountered to the list of objects needed by the
	       current object, beyond what is specified	on the link line.
	       (C, C++,	F77, F90)

     ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The file specified by _f_i_l_e must contain a list	of
	       symbols to be hidden.  The list is comprised of symbols
	       separated by spaces or new-lines	characters.  This option is
	       ignored if any symbols in the list are specifically marked
	       as exported using the ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee
	       option.	(C, C++, F77, F90)

     ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	hidden.	 Use a
	       comma to	separate the symbols.  This option is ignored if
	       any symbols are specifically marked as exported using the
	       ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll	or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee options.  If you specify
	       ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll, all unspecified symbols are automatically
	       exported, including those that were implicitly hidden when
	       loading archive libraries.  (C, C++, F77, F90)

     ----hhhhiiiiddddeeeessss    Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be hidden by the	object being created.  This
	       is the default behavior for linking in archives or DSOs,	but
	       it is not for relocatable objects.  (C, C++, F77, F90)

     ----IIII	_p_a_t_h_n_a_m_e
	       Writes the path name into the ....iiiinnnntttteeeerrrrpppp section.  The _p_a_t_h_n_a_m_e
	       is a path name for the system to	invoke as a program
	       interpreter.

     ----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr
	       Clears the LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag	in the ....lllliiiibbbblllliiiisssstttt	flags field
	       for shared objects listed subsequently on the lllldddd	command
	       line.  This allows rrrrlllldddd(5) to use	a shared object	at runtime
	       that has	a different minor version number.  This	option is
	       enabled by default.  For	more information on major and minor
	       version numbers,	see the	ddddssssoooo(5) man page.  (C, C++, F77,
	       F90)

     ----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____IIIIGGGGNNNNOOOORRRREEEE____VVVVEEEERRRRSSSSIIIIOOOONNNN flag in the liblist flags field.
	       For subsequent shared objects in	the liblist, rrrrlllldddd(5) does
	       not try to match	the interface version as specified at link
	       time.  (C, C++, F77, F90)

     ----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l
	       Puts a call to _i_f_u_n_c_s_y_m_b_o_l into the code	that rrrrlllldddd(5)
	       exercises before	the main program begins.  The _i_f_u_n_c_s_y_m_b_o_l
	       contains	initialization code to be called before	control	is
	       passed to mmmmaaaaiiiinnnn.	In the case of a DSO opened with ddddllllooooppppeeeennnn(3C)
	       or ssssggggiiiiddddllllaaaadddddddd(3C) an initialization function is called after
	       the DSO is loaded but before it is referenced.

	       A single	----iiiinnnniiiitttt option is	effective in a given DSO or
	       executable.  To specify more than one _i_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----iiiinnnniiiitttt options on the command line.  If multiple
	       ----iiiinnnniiiitttt options are specified, they are executed at runtime in
	       the order listed	on the command line.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 Any user ....iiiinnnniiiitttt
	       sections	are concatenated to the	ones generated by the
	       linker.	For information	on how to specify your own ----iiiinnnniiiitttt
	       functions, see the EXAMPLES section.  (C)

     ----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt
	       Turns on	a flag in the dynamic section so that rrrrlllldddd(5) does
	       not allow execution time	or runtime changes to the path
	       (except by a superuser) to find the shared objects.
	       Typically, this option is used for security purposes on
	       system utilities.  (C, C++, F77,	F90)

     ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Some applications may find it desirable to hide some of
	       their dependent libraries.  This	option cancels the upward
	       propagation of libraries	to facilitate such hiding.
	       Executables and shared objects built in this way	can
	       experience slightly slower startup.  (C,	C++, F77, F90)

     ----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr
	       Sets the	LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag in the ....lllliiiibbbblllliiiisssstttt flags field
	       for DSOs	listed subsequently on the lllldddd command line.  This
	       indicates to rrrrlllldddd(5) that	the shared object used at runtime
	       must have the exact same	minor (and major) version number as
	       that at static link time.  Otherwise, execution aborts.	For
	       more information	on major and minor version numbers, see	the
	       ddddssssoooo(5) man page.	 (C, C++, F77, F90)

     ----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h
	       Adds the	_l_i_b_r_a_r_y__p_a_t_h to	the search path	for DSOs.  Each
	       library path is appended	to the list of directories at the
	       time the	executable or DSO is loaded.  This option directs
	       rrrrlllldddd(5) to look in the named directories,	but to look only
	       for DSOs, and to	stop looking when the correct one is found.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For more
	       information, see	the rrrrlllldddd(5) man page.  (C, C++, F77, F90)

     ----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g
	       Sets the	value of the DDDDTTTT____MMMMIIIIPPPPSSSS____IIIIVVVVEEEERRRRSSSSIIIIOOOONNNN field in the dynamic
	       section of the shared object to _v_e_r_s_i_o_n__s_t_r_i_n_g.	The
	       _v_e_r_s_i_o_n__s_t_r_i_n_g must consist of a	series of version strings
	       separated by colons (:).	 (C, C++, F77, F90)

     ----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       Sets DDDDTTTT____SSSSOOOONNNNAAAAMMMMEEEE for a shared object.  Must be specified in
	       conjunction with	the ----sssshhhhaaaarrrreeeedddd option.  The _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       can be a	single component name (for example, lllliiiibbbbcccc....aaaa), a full
	       path name (starting with	a slash), or a relative	path name
	       (containing a slash).  Single component names use rrrrppppaaaatttthhhh,
	       LLLLDDDD____LLLLIIIIBBBBRRRRAAAARRRRYYYY____PPPPAAAATTTTHHHH,	and the	default	paths to resolve their
	       locations.  (C, C++, F77, F90)

     ----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Typically, every	shared object and every	executable has a
	       dependency list of shared objects that are needed for
	       correct execution.  The runtime linker, rrrrlllldddd(5), loads these
	       objects when any	process	is run.	 If the	depended-upon
	       shared objects have more	objects	that they in turn depend
	       upon, rrrrlllldddd(5) adds them at the end of the	list, and so on,
	       performing a transitive closure.

	       By default, a similar operation is performed at static, lllldddd,
	       link time.  Any shared object that is listed on the command
	       line is put on aaaa....oooouuuutttt's dependency list.	Then any new shared
	       objects from the	dependency lists of the	already-processed
	       shared objects are also processed and checked for
	       conflicting definitions of symbols, but they are	not added
	       to the list of shared objects needed by the object being
	       built.  This is the default behavior.  (C, C++, F77, F90)

   IIII////OOOO OOOOppppttttiiiioooonnnnssss
     The options affect	I/O:

     ----mmmmmmmmaaaapppp     Directs the linker to use mmmmmmmmaaaapppp(2) as its	preferred mode for
	       reading object files.  This usually results in better I/O
	       performances, except when using NFS mounted files with high
	       network latencies.  This	is enabled by default.

     ----rrrreeeeaaaadddd     Directs the linker to use the ooooppppeeeennnn(2), llllsssseeeeeeeekkkk(2),	and rrrreeeeaaaadddd(2)
	       utilities as its	preferred mode for reading object files.
	       Setting this option when	many object files are remotely
	       mounted with high network latency often improves
	       performance.

   HHHHaaaarrrrddddwwwwaaaarrrreeee PPPPaaaattttcccchhhh OOOOppppttttiiiioooonnnnssss
     The following options are patches to the hardware:

     ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Disables	the work-around	for the	R4000 bug.  When this flag
	       is present, no adjustment is attempted.	The work-around	is
	       enabled by default, so the presence of the
	       ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp option before	any object files disables
	       the feature.  Disabling the workaround can result in code
	       that is not compatible across platforms and may also result
	       in a performance	penalty	on some	R4000 systems.

     ----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Works around an R4000 bug present in 2.1	and 2.2	silicon.
	       This option tries to prevent certain classes of branch
	       instructions from being the last	instruction on a page of
	       virtual memory.	This option is enabled by default for links
	       of MIPS3	or lower programs.  You	can use	the hhhhiiiinnnnvvvv(1M)
	       command to determine what revision of R4000 is present in
	       the system.

	       The kernel automatically	works around this problem with
	       early versions of the R4000, but	there is a small
	       performance penalty.  Using this	option helps avoid the
	       situation in which a kernel workaround is needed.

   MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss OOOOppppttttiiiioooonnnnssss
     The following are miscellaneous options:

     ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       Alters the meaning of the ----GGGG option to conform to the UNIX
	       System V	Release	4 usage.  For more information,	see the
	       ----GGGG [_n_u_m]	option.	 When specified	on the compiler	command
	       line, this option is ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.  (C,	C++, F77, F90)

     ----oooo	_o_u_t_f_i_l_e
	       Produces	an output object file by the name _o_u_t_f_i_l_e.  The
	       name of the default output file is aaaa....oooouuuutttt.  For example, in
	       the event that _o_u_t_f_i_l_e has undefined references at the end
	       of the link editor run, and the ----rrrr option was not used, and
	       the ----aaaaoooouuuuttttkkkkeeeeeeeepppp option was	used, _o_u_t_f_i_l_e is renamed aaaa....oooouuuutttt.	 If
	       there are undefined references and the ----aaaaoooouuuuttttkkkkeeeeeeeepppp	option was
	       not used, there is no output from lllldddd.

	       If the specified	output file already exists, the	ownership
	       and mode	from the existing file are retained.  (C, C++, F77,
	       F90)

     ----VVVVSSSS _n_u_m   Uses _n_u_m	as the decimal version stamp to	identify the aaaa....oooouuuutttt
	       file that is produced.  The version stamp is stored in the
	       optional	and symbolic headers.  (C, C++,	F77, F90)

   SSSSyyyynnnnoooonnnnyyyymmmm OOOOppppttttiiiioooonnnnssss
     The following options are synonyms	for other lllldddd options:

     ----aaaa	       This is a synonym of ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.

     ----aaaajjjjeeeeoooopppp    This is a synonym for ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp.

     ----ddddnnnn       This is a synonym for ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.  (C)

     ----ddddyyyy       This is a synonym for ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd.  (C)

     ----GGGG	       If the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has	been specified,	this option
	       is a synonym for	----sssshhhhaaaarrrreeeedddd	and takes no numerical argument.
	       (C)

     ----hhhh	       This is a synonym for ----ssssoooonnnnaaaammmmeeee.

     ----hhhhiiiiddddeeeessss____ffffiiiilllleeee _f_i_l_e
	       This is a synonym for the ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee option.

     ----nnnnoooonnnneeee     Same as ----nnnnoooottttaaaallllllll.	 (C, C++, F77, F90)

     ----oooo33332222      This is a synonym for ----33332222.

     ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn
	       This is a synonym for ----iiiivvvvppppaaaadddd.

     ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       This is a synonym for ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.

     ----WWWWxxxx,,,,----GGGG _n_u_m
	       This is a synonym for the non-SVR4 meaning of ----GGGG.  The
	       meaning of this option is unaffected by the use of the
	       ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option.

RRRREEEESSSSEEEERRRRVVVVEEEEDDDD SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     The following symbols are reserved	for internal use:

     ....bbbbssssssss, ....ccccoooommmmmmmmeeeennnntttt, ....ddddaaaattttaaaa, ....ffffiiiinnnniiii, ....iiiinnnniiiitttt, ....lllliiiitttt4444, ....lllliiiitttt8888,	....rrrrddddaaaattttaaaa,	....ssssbbbbssssssss,
     ....ssssddddaaaattttaaaa, ....tttteeeexxxxtttt, ____BBBBAAAASSSSEEEE____AAAADDDDDDDDRRRREEEESSSSSSSS, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKK,
     ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKKIIIINNNNGGGG, ____GGGGOOOOTTTT____OOOOFFFFFFFFSSSSEEEETTTT, ________ddddssssoooo____ddddiiiissssppppllllaaaacccceeeemmmmeeeennnntttt,	________eeeellllffff____hhhheeeeaaaaddddeeeerrrr,
     ________ffffssssttttaaaarrrrtttt, ________iiiissssttttaaaarrrrtttt, ________llllccccllllddddttttaaaa____aaaaddddddddrrrreeeessssssss, ________llllccccllllddddttttaaaa____ssssiiiizzzzeeee,
     ________pppprrrrooooggggrrrraaaammmm____hhhheeeeaaaaddddeeeerrrr____ttttaaaabbbblllleeee, ________rrrrlllldddd____oooobbbbjjjj____hhhheeeeaaaadddd, ________ssssttttaaaarrrrtttt, ________uuuunnnnwwwwiiiinnnndddd,
     ____ddddaaaattttaaaa____iiiinnnniiiitttt____ttttaaaabbbblllleeee, ____eeeeddddaaaattttaaaa, ____eeeennnndddd, ____eeeetttteeeexxxxtttt, ____ffffbbbbssssssss, ____ffffddddaaaattttaaaa, ____fffftttteeeexxxxtttt, ____ggggpppp,
     ____ggggpppp____ddddiiiisssspppp, ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn, ____pppprrrroooocccceeeedddduuuurrrreeee____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee, ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee,
     ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee____ssssiiiizzzzeeee, ____rrrrlllldddd____nnnneeeewwww____iiiinnnntttteeeerrrrffffaaaacccceeee,	____rrrrtttt____ssssyyyymmmmbbbboooollll____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee,
     ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee, and ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee____ssssiiiizzzzeeee.

     In	addition, all symbols that begin with the prefixes ________eeeellllffff____vvvvaaaaddddddddrrrr and
     ________eeeellllffff____ssssiiiizzzzeeee	are reserved.  It is erroneous to define these symbols.

     In	ANSI C,	the following symbols can be defined:  eeeennnndddd, eeeeddddaaaattttaaaa, and
     eeeetttteeeexxxxtttt.  If	they are not defined (but only referenced), they are
     assigned the same values as ____eeeennnndddd, ____eeeeddddaaaattttaaaa, and ____eeeetttteeeexxxxtttt respectively.
     For more information on these symbols, see	the eeeennnndddd(3C) man	page.

LLLLIIIIBBBBRRRRAAAARRRRYYYY	SSSSEEEEAAAARRRRCCCCHHHH OOOORRRRDDDDEEEERRRR
     If	an argument specified on the lllldddd	command	line is	a library, it is
     searched exactly once at the point	it is encountered in the argument
     list.  There are two kinds	of libraries:  archives	and DSOs.  When
     linking with archives, only the routines that define an unresolved
     external reference	are loaded.  Shared objects are	used only if the
     output is to be dynamic.  In that case, only the name is used for
     external resolution; no object is included	as part	of the output
     object file.  Note	that unresolved	symbols	are not	considered an error
     when linking with the ----sssshhhhaaaarrrreeeedddd option.  The	library	(archive) symbol
     table (see	aaaarrrr(1)) is a hash table and is searched to resolved external
     references	that can be satisfied by library members.  The ordering	of
     library members is	not important.	By default, internal libraries are
     not searched.

     When searching for	ucode libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb////, ////lllliiiibbbb////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////.	 Note that although
     archives are found	in ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////, shared objects should not be
     installed there because rrrrlllldddd(5) will not find them.

     When searching for	64-bit libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb66664444////, ////lllliiiibbbb66664444////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////.  When searching for
     new 32-bit	libraries, the default directories searched are
     ////uuuussssrrrr////lllliiiibbbb33332222////, ////lllliiiibbbb33332222////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////.

NNNNOOOOTTTTEEEESSSS
     An	object's segments must not overlap, and	all of the object's
     addresses must be less than 0x80000000 (except when compiling with	the
     old 32-bit	option (----33332222), for which	the size maximum is 0x4000000).
     The stack starts at 0x80000000 and	grows down through lower addresses.
     Space should be left for it.  The default text segment address is
     0x10000000, with the data segment immediately following the text
     segment.  By default, the bss segment follows the data segment.

     While 64-bit programs can use much	more than 2 gigabytes of memory,
     the executable file can be	at most	2 gigabytes in size.

     When creating an executable object	runnable on UNIX, aaaa....oooouuuutttt,
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrtttt1111....oooo, should be	the first object loaded, and
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrttttnnnn....oooo should be last, following any libraries.  The
     compilers (cccccccc(1), CCCCCCCC(1), ffff99990000(1), and ffff77777777(1)) automatically	load these
     object files in the proper	order. Note that if lllldddd is invoked directly,
     those two objects are not loaded automatically.  It is your
     responsibility to specify them explicitly.

     The linker	no longer recognizes archives built with aaaarrrr ----CCCC (COFF-style)
     archive headers.

     The following group of options have been superseded by the	----eeeellllssssppppeeeecccc
     functionality:  ----XXXXnnnnoooobbbbsssssssscccchhhhaaaannnnggggeeee, ----XXXXnnnnoooossssoooorrrrttttbbbbssssssss, ----XXXXssssoooorrrrttttbbbbssssssss, ----XXXXnnnnddddbbbblllloooocccckkkk,
     ----XXXXbbbblllloooocccckkkk, ----XXXXbbbblllloooocccckkkkrrrraaaannnnggggeeee, ----XXXXnnnnddddllllooooccccaaaallllddddaaaattttaaaa, ----XXXXaaaalllliiiiggggnnnnbbbbssssssss, ----XXXXnnnnooooaaaalllliiiiggggnnnnbbbbssssssss,
     ----XXXXccccaaaacccchhhheeeemmmmiiiissssaaaalllliiiiggggnnnn, ----XXXXccccaaaacccchhhheeeessssiiiizzzzeeee, ----XXXXccccaaaacccchhhheeeelllliiiinnnneeeessssiiiizzzzeeee, ----XXXXddddeeeeffffmmmmoooovvvveeeemmmmaaaaxxxx,
     ----XXXXsssseeeettttaaaalllliiiiggggnnnn, and ----XXXXddddeeeebbbbuuuugggg.  The ----XXXXllllooooccccaaaallllddddaaaattttaaaa option has been replaced	by
     the ----XXXXllllooooccccaaaallll option.

     As	of the 7.3.1.3m	release, the ....ddddyyyynnnnaaaammmmiiiicccc section of the aaaa....oooouuuutttt now has
     entries for the timestamp and checksum.  This allows downstream tools
     such as SpeedShop to determine if data files match	the executable or
     not.  This	information has	always been in DSOs.  NOTE that	a
     recompiled	aaaa....oooouuuutttt now always has different bits.

     As	of the 7.3.1.3m	release, the linker generates some text	on its own
     such as the iiiinnnniiiitttt and ffffiiiinnnniiii function	driver.	 Prior to this,	the linker
     neglected to generate debugging information along with this text,
     making unwinding in the debugger and exception-handling routines
     problematic.  This	has been fixed.

     There are still problems with unwinding through linker-generated code
     that has been instrumented	for performance	evaluation. This will be
     addressed in future releases.

EEEEXXXXPPPPOOOORRRRTTTTIIIINNNNGGGG AAAANNNNDDDD HHHHIIIIDDDDIIIINNNNGGGG SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     By	default, all symbols are exported.  That is, if	they were
     externally	visible	in the incoming	object file, they will be
     externally	visible	in the generated aaaa....oooouuuutttt or DSO.

     The one exception to this rule is when loading an archive library when
     building a	DSO.  In this case, the	default	behavior is to silently
     hide all symbols that come	from the archive library.  The ----aaaallllllll option
     can be used to override that default behavior.

     WARNING:  Be careful when using ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll and	archive	libraries.
     The ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll	option silently	exports	the other symbols from the
     archive library when you might have expected them to remain hidden.

     When building a DSO it is a good idea to control its interface by
     exporting only those symbols that users are allowed to reference.
     This is best done by listing exported symbols in a	file and using the
     ----eeeexxxxppppoooorrrrtttt____ffffiiiilllleeee option.   This option	exports	the listed symbols and
     hides all others.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     The following sample lllldddd command line illustrates how to specify ----iiiinnnniiiitttt
     and ----ffffiiiinnnniiii functions:

ld ... -init mystartup1	-fini myshutdown1 -init	mystartup2 -fini myshutdown2

     The ----ffffiiiinnnniiii routines	execute	in the reverse order from how they are
     specified on the command line, mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222	first and mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111
     second.  You cannot run mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222 after mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111 because all
     local objects will	already	have been destroyed by mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111.

FFFFIIIILLLLEEEESSSS
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////lllliiiibbbb****....aaaa libraries

     aaaa....oooouuuutttt

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     aaaarrrr(1), aaaassss(1), cccccccc(1), ccccoooolllllllliiiiddddeeee(1), ffff77777777(1), ffff99990000(1), hhhhiiiinnnnvvvv(1M),	mmmmaaaakkkkeeee(1),
     pppprrrrooooffff(1), rrrrqqqqssss(1)

     llllsssseeeeeeeekkkk(2), mmmmmmmmaaaapppp(2),	ooooppppeeeennnn(2), rrrreeeeaaaadddd(2)

     eeeennnndddd(3C)

     eeeellllffff(4)

     ddddssssoooo(5), ggggpppp____oooovvvveeeerrrrfffflllloooowwww(5), oooopppptttt(5), rrrrlllldddd(5)

     _M_I_P_S_p_r_o _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e
LD(1)								      LD(1)


NNNNAAAAMMMMEEEE
     lllldddd	- Link editor

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     lllldddd	[----33332222] [----66664444] [----aaaa] [----aaaabbbbiiii]	[----aaaajjjjeeeeoooopppp] [----aaaallllllll]	[----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp]
     [----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg] [----aaaalllllllloooowwww____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----aaaaoooouuuuttttkkkkeeeeeeeepppp] [----BBBB _n_u_m]
     [----BBBBssssyyyymmmmbbbboooolllliiiicccc] [----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd] [----cccccccckkkkrrrr] [----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----ccccxxxxxxxx] [----dddd] [----DDDD _n_u_m] [----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd]	[----ddddeeeellllaaaayyyy____llllooooaaaadddd] [----ddddeeeemmmmaaaannnngggglllleeee]
     [----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----dddd] [----eeee _s_y_m_b_o_l] [----eeeellllffff] [----eeeellllssssmmmmaaaapppp] [----eeeellllssssppppeeeecccc _f_i_l_e]
     [----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn] [----eeeexxxxcccclllluuuuddddeeee	_o_b_j_e_c_t]	[----eeeexxxxppppoooorrrrttttssss] [----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e]
     [----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----ffff	_f_i_l_l] [----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l_s]
     [----ffffoooorrrrcccceeee____llllooooaaaadddd] [----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e] [----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]
     [----GGGG [_n_u_m]]	[----ggggppppiiiinnnnffffoooo] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____iiiinnnniiiitttt] [----gggguuuuaaaarrrraaaannnntttteeeeeeee____ssssttttaaaarrrrtttt____iiiinnnniiiitttt] [----hhhh]
     [----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e] [----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t] [----hhhhiiiiddddeeeessss]
     [----IIII _p_a_t_h_n_a_m_e] [----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr] [----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd]	[----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn]
     [----iiiinnnnffffoooo] [----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l] [----iiiivvvvppppaaaadddd] [----llll _x] [----LLLL _d_i_r] [----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::............]
     [----LLLLDDDD____MMMMSSSSGGGG::::............]  [----mmmm] [----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e] [----mmmmiiiippppssss2222] [----mmmmiiiippppssss3333] [----mmmmiiiippppssss4444]
     [----mmmmmmmmaaaapppp] [----nnnn] [----NNNN] [----nnnn33332222] [----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee] [----nnnnooooiiiinnnnffffoooo] [----nnnnooooiiiivvvvppppaaaadddd]
     [----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt] [----nnnnoooo____rrrrqqqqssss] [----nnnnoooonnnneeee]
     [----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd] [----nnnnoooo____rrrr5555kkkk____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp] [----nnnnoooossssttttddddlllliiiibbbb] [----nnnnoooottttaaaallllllll]
     [----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk] [----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd] [----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e]
     [----oooo _o_u_t_f_i_l_e] [----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo] [----rrrr] [----rrrreeeeaaaadddd] [----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd]
     [----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee] [----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h] [----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr] [----ssss]
     [----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g] [----sssshhhhaaaarrrreeeedddd] [----sssshhhhoooowwww] [----sssshhhhoooowwww____uuuunnnnrrrreeeeffff]
     [----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e] [----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444] [----TTTT _n_u_m]
     [----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk]	[----uuuu _s_y_m_n_a_m_e] [----UUUU] [----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e]
     [----vvvv] [----VVVV] [----VVVVSSSS _n_u_m] [----wwww] [----WWWWxxxx] [----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd] [----wwwwooooffffffff _n_u_m_l_i_s_t] [----xxxx]
     [----XXXXllllooooccccaaaallll _n_a_m_e_s] [----yyyy_s_y_m] [----zzzz] _f_i_l_e ...

IIIIMMMMPPPPLLLLEEEEMMMMEEEENNNNTTTTAAAATTTTIIIIOOOONNNN
     IRIX systems

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     lllldddd, the link editor, links	ELF object files to create an executable
     file.  lllldddd uses the	archive	format created by the archiver,	aaaarrrr(1).

     The lllldddd command combines several object files into one, performs
     relocation, resolves external symbols, builds tables and relocation
     information for run-time linkage (in case of shared linking), and
     supports symbol table information for symbolic debugging.	In the
     simplest case, the	names of several object	files are specified, and lllldddd
     combines them.  This produces an object module that can be	executed or
     used as input for a subsequent lllldddd run.  By	default, the output from lllldddd
     is	left in	file aaaa....oooouuuutttt.

     Input sections are	linked together	contiguously into output sections.
     Output sections are organized in an ELF file into loadable	segments
     specified in the program header.  Segments	represent a contiguous
     portion of	the file to be loaded into memory, with	possibly the
     addition of extra memory at the end.  For more information, see the
     eeeellllffff(4) man	page.

     The sections within the argument object files are combined, some by
     merging and others	by concatenation.  Unless the ----eeee option	is
     specified,	the entry point	of the output is the first instruction in
     the text segment.

     Typically,	lllldddd is invoked by cccccccc(1),	CCCCCCCC(1), ffff77777777(1), or ffff99990000(1) as the
     final step	in compilation,	but it can be run separately.  Many lllldddd
     options can be specified to the linker as options to the ----WWWWllll option on
     the compiler command line.	 For example:

	  cc ... -Wl,-m

     The following terms are used on this man page and throughout the
     loader documentation:

     TTTTeeeerrrrmmmm	    DDDDeeeeffffiiiinnnniiiittttiiiioooonnnn

     aaaa....oooouuuutttt	    File aaaa....oooouuuutttt is an executable	file produced by lllldddd, but it
		    is not a Dynamic Shared Object (DSO).  By default, the
		    IRIX compilers invoke lllldddd and produce an aaaa....oooouuuutttt file that
		    is a dynamic executable.  You can also request that	the
		    compiler produce an	aaaa....oooouuuutttt file that	is not a dynamic
		    executable by compiling with the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	on
		    the	compiler command line.

     DSO	    A DSO, or Dynamic Shared Object, is	an executable
		    object file	that is	relocatable by rrrrlllldddd(5) at load time.
		    It consists	of shared text and data.  It is	produced by
		    the	linker.	 Usually written to _f_i_l_e....ssssoooo.

     Library	    A generic term that	includes both DSOs and archive
		    libraries.

     Object file    A relocatable file produced	by the compiler	and written
		    to _f_i_l_e....oooo.

     Archive	    Produced by	aaaarrrr(1).	Usually	written	to _f_i_l_e....aaaa.

     Section	    A contiguous block of data and internal information	in
		    an object file that	is manipulated by the linker as	a
		    single piece.

     Segment	    A contiguous block of data and internal information	in
		    an executable file that is manipulated by the kernel as
		    a single piece.  In	general, the linker takes sections
		    from object	files and concatenates them to form
		    segments in	executable files.  In general, the kernel
		    maps each segment into the processes address space at
		    the	addresses specified by the linker.

     This man page describes each lllldddd option.  After each option's
     description is a parenthesized list that indicates	the compiler
     command lines from	which the particular option can	be passed as an
     argument to the compiler's	----WWWWllll option.  The compilers are represented
     as	follows	in the these lists:

     NNNNoooottttaaaattttiiiioooonnnn  CCCCoooommmmppppiiiilllleeeerrrr

     C	       MIPSpro C Compiler

     C++       MIPSpro C++ Compiler

     F77       MIPSpro Fortran 77 Compiler

     F90       MIPSpro 7 Fortran 90 Compiler

     The following sections catagorize the linker options.

   SSSSyyyymmmmbbbboooollll RRRReeeessssoooolllluuuuttttiiiioooonnnn aaaannnndddd IIIInnnnppppuuuutttt SSSSeeeeaaaarrrrcccchhhh PPPPaaaatttthhhh
     The following linker options are involved in the symbol resolution
     process:

     ----cccccccckkkkrrrr     Sets the	value of the variable ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn to specify
	       non-ANSI	semantics to lllliiiibbbbcccc.  For	more information, see
	       eeeennnndddd(3C).	 (C)

     ----ccccxxxxxxxx      Specifies special handling of certain symbols needed for
	       proper linkage and execution of C++ programs.

     ----llll_x       Identifies library files.  The linker searches for libraries
	       lllliiiibbbb_x....ssssoooo or lllliiiibbbb_x....aaaa, where	_x is a string.	A shared object	or
	       an archive is searched when its name is encountered, so the
	       position	of the ----llll option on the	command	line is
	       significant.  (C, C++, F77, F90)

     ----LLLL	_d_i_r    Controls	the library search path.

	       When _d_i_r	is specified, the linker searches the directories
	       specified in _d_i_r	before it searches the default directories.
	       The linker searches for lllliiiibbbb_x....ssssoooo,	lllliiiibbbb_x....aaaa,	or lllliiiibbbb_x....bbbb in _d_i_r.
	       If ----LLLL _d_i_r is specified in conjunction with ----llll _x,	the ----LLLL
	       option must be before (to the left) of the ----llll option(s).	 If
	       the ----LLLL _d_i_r option is specified in conjunction with the ----vvvv
	       option, the system writes the search paths and indicates
	       which libraries were actually chosen.  This option can be
	       specified without a space between ----LLLL and	_d_i_r. (C, C++, F77,
	       F90)

     ----nnnnoooossssttttddddlllliiiibbbb Prevents	the linker from	searching in the default
	       directories.  This option is useful when	the default
	       directories for libraries should	not be searched	and only
	       the directories specified by ----LLLL _d_i_r are to be searched.

	       The ----nnnnoooossssttttddddlllliiiibbbb option is a synonym for the ----LLLL option
	       specified without its _d_i_r argument.  For	example, assume
	       that you	wanted library mmmmyyyylllliiiibbbb searched, and mmmmyyyylllliiiibbbb is stored
	       in directory mmmmyyyyddddiiiirrrr.  Further assume that	you do not want	the
	       linker to search	in the default directories.  The following
	       sample command lines are	equivalent:

		    ld -nostdlib -L mydirs -lmine kangaroo.o
		    ld -L -L mydirs -lmine kangaroo.o

	       This searches for lllliiiibbbbmmmmiiiinnnneeee....aaaa or lllliiiibbbbmmmmiiiinnnneeee....ssssoooo in mmmmyyyyddddiiiirrrrssss.  mmmmyyyyddddiiiirrrrssss
	       is a colon-separated list of search directories.

		    The	----nnnnoooossssttttddddlllliiiibbbb option must be specified in conjunction
		    with the ----LLLL	_d_i_r option.  (C, C++, F77, F90)

     ----uuuu	_s_y_m_n_a_m_e
	       Enters _s_y_m_n_a_m_e as an undefined symbol in	the symbol table.
	       This is useful for loading entirely from	an archive because
	       initially, the symbol table is empty and	an unresolved
	       reference is needed to force the	loading	of the first
	       routine.

	       If the symbol used in this option is not	resolved by any
	       object by the end of the	link, the resulting executable or
	       DSO will	have that symbol undefined.  (C, C++)

   IIIInnnnppppuuuutttt SSSSppppeeeecccciiiiffffiiiiccccaaaattttiiiioooonnnn OOOOppppttttiiiioooonnnnssss
     The following options affect both input object specification and
     symbol resolution:

     ----aaaallllllll      Links in	all of the objects from	all archives following this
	       option. This option is commonly used in conjunction with	the
	       ----sssshhhhaaaarrrreeeedddd option to create	a shared object	out of an existing
	       archive.	 (C, C++, F77, F90)

     ----eeeexxxxcccclllluuuuddddeeee _o_b_j_e_c_t
	       Used in conjunction with	the ----aaaallllllll and ----sssshhhhaaaarrrreeeedddd options.  The
	       _o_b_j_e_c_t specified	is excluded from the shared object.  (C,
	       C++, F77, F90)

     ----ffffrrrroooommmm _o_p_t_i_o_n__l_i_s_t__f_i_l_e
	       Allows you to specify arguments to lllldddd from a file.  lllldddd reads
	       file _o_p_t_i_o_n__l_i_s_t__f_i_l_e as	if it appeared on the command line
	       in the same position as the ----ffffrrrroooommmm option.  New-line
	       characters in _o_p_t_i_o_n__l_i_s_t__f_i_l_e are treated as if	they were
	       ordinary	spaces.

     ----MMMMDDDDiiiiggggnnnnoooorrrreeee _n_a_m_e
	       Prevents	the linker from	adding the _n_a_m_ed object	or DSO to
	       the MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd file.  For more information, see the
	       ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e option's description.  (C, C++, F77, F90)

     ----MMMMDDDDuuuuppppddddaaaatttteeee _f_i_l_e
	       By default, the linker adds the names of	any objects and
	       DSOs used in the	link to	_f_i_l_e.  When compiling, _f_i_l_e is
	       updated to contain header, library, and run-time	mmmmaaaakkkkeeee(1)
	       dependencies for	the output file.

	       When this option	is specified, the linker updates only lines
	       that end	with a distinctive make	comment	and begin with the
	       name of the output file followed	by a colon (::::).	 The
	       standard	name for _f_i_l_e is MMMMaaaakkkkeeeeddddeeeeppppeeeennnndddd.  (C, C++, F77, F90)

     ----nnnnoooo____aaaarrrrcccchhhhiiiivvvveeee
	       Specifies that that references to libraries specified in	the
	       ----llll option must resolve to shared	objects.  Typically, if	the
	       shared object, as specified by the ----llll option, is	not found,
	       the linker attempts to find the corresponding archive to
	       resolve undefines.  Specifying this does	not allow those
	       archives	to be used.  (C, C++, F77, F90)

     ----nnnnoooottttaaaallllllll   Turns off the action of the ----aaaallllllll	option.	 This pulls objects
	       out of the archive into a DSO if	the objects resolve
	       unresolved symbols in the already included object, but these
	       objects are included without exporting their symbols by
	       default.	 (C, C++, F77, F90)

     ----oooobbbbjjjjeeeeccccttttlllliiiisssstttt _o_b_j_e_c_t__l_i_s_t__f_i_l_e
	       Specifies a file	list.  The file	specified by
	       _o_b_j_e_c_t__l_i_s_t__f_i_l_e	contains a list	of file	or archive names.
	       By putting the file list	in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e instead of
	       on the command line, you	can avoid exceeding the	limit on
	       the length of a command line.  This is primarily	useful when
	       linking very large programs with	many objects and long file
	       names.

	       In the _o_b_j_e_c_t__l_i_s_t__f_i_l_e,	blank lines and	leading	white space
	       are ignored.  Files must	be listed one per line.	 A file
	       name is considered ended	by the next whitespace character.
	       Characters after	the file name are ignored.  Any	leading
	       dash (----)	characters in an _o_b_j_e_c_t__l_i_s_t__f_i_l_e line are
	       considered part of a file name; nothing in the file is
	       interpreted as an option.  Lines	in the file are	limited	to
	       BBBBUUUUFFFFSSSSIIIIZZZZ****2222	characters (16 Kbytes) each.  (C, C++, F77, F90)

   DDDDeeeebbbbuuuuggggggggiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The debugging options control listings and	messages that can be
     produced when debugging new software.  For	more information on
     controlling messages when debugging, see the description for the
     ----LLLLDDDD____MMMMSSSSGGGG:::: option group.  The following options aid in debugging linking
     sessions:

     ----aaaaoooouuuuttttkkkkeeeeeeeepppp By default, lllldddd removes the output file if there are link
	       errors.	When this option is specified, though, the output
	       is written to aaaa....oooouuuutttt.  (C, C++, F77, F90)

     ----ffff	_f_i_l_l   Sets the	fill pattern for _h_o_l_e_s between sections	within an
	       output segment.	The argument _f_i_l_l must be a four-byte
	       hexadecimal constant.

	       As the linker lays out sections,	the alignment restrictions
	       lead to gaps, or	_h_o_l_e_s, between the sections.  This option
	       specifies the value to use to fill the holes.

     ----ggggppppiiiinnnnffffoooo   Produces	a listing of short data	section	components (page
	       pointers, GOT pointers, small data, and small literals).
	       This may	be useful in identifying modules with large
	       GP-relative sections. The listing produced by this option is
	       a subset	of the information that	is produced when ----mmmm is
	       specified.

	       If you receive message 171, it means that the GP-relative
	       data has	been broken up into several areas (multigot).  The
	       ----ggggppppiiiinnnnffffoooo option does not work in such cases, but you can
	       specify the ----mmmm option.  The ----mmmm option is	a good alternative.
	       It provides all the information needed to analyze
	       GP-relative usage.

     ----mmmm	       Writes a	map or listing of the input/output (I/O) sections
	       to standard output.  This is a UNIX system V-like map.

     ----qqqquuuuiiiicccckkkkssssttttaaaarrrrtttt____iiiinnnnffffoooo
	       Prints extra information	regarding the quickstart status	of
	       the executable file created.  This includes a full list of
	       conflict	symbols	and their objects of origin.  (C, C++, F77,
	       F90)

     ----sssshhhhoooowwww     Prints the name of the specific linker being used.  (C, C++,
	       F77, F90)

     ----sssshhhhoooowwww____uuuunnnnrrrreeeeffff
	       Lists defined but unreferenced symbols.	This option can	be
	       used when looking for dead code in a program.  Note that
	       library routines	typically define symbols that might not	be
	       referenced by all programs.  Also, in the case of weak and
	       strong symbol pairs, in which two different symbols point to
	       the same	virtual	address, if only one of	them is	referenced,
	       the other symbol	is still listed.  This does not	necessarily
	       mean the	specified function is never used.

     ----sssspppplllliiiitttt____ccccoooommmmmmmmoooonnnn
	       Shows how and where split commons were laid out.	 For more
	       information on this, see	the oooopppptttt(5) man page's description
	       of the ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn	option.

     ----vvvv	       Sets verbose mode. This option generates	more information
	       than the	----sssshhhhoooowwww option.  This options shows linker phases,
	       what and	where it searches for objects and libraries, and
	       what is actually	linked in.  (C,	C++, F77, F90)

     ----VVVV	       Prints the version of lllldddd	being used.

     ----yyyy_s_y_m     Writes symbol information to ssssttttddddeeeerrrrrrrr.  Indicates each file in
	       which _s_y_m appears, _s_y_m's	type, and whether the file defines
	       or references _s_y_m.  Many	such options can be given to trace
	       many symbols.  Each ----yyyy_s_y_m applies to those files	listed
	       after this option on the	command	line.  Symbols and archived
	       objects that are	not linked in and DSOs that are	not used do
	       not appear in the output.  (C, C++, F77,	F90)

   MMMMeeeessssssssaaaaggggeeee OOOOppppttttiiiioooonnnnssss
     The following options affect the process of issuing messages:

     ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg
	  When using an	ELF layout specification file with the ----eeeellllssssppppeeeecccc
	  option, the linker typically generates an error if portions of
	  the object file that are not strippable have been omitted from
	  the output.  Specifying the ----aaaalllllllloooowwww____mmmmiiiissssssssiiiinnnngggg option overrides this
	  error	check and allows the omission of data or text that would
	  ordinarily be	linked.	 In this case, you must	ensure that the
	  output is correct.

     ----ddddeeeemmmmaaaannnngggglllleeee
	  Specifies that demangling of C++ names should	take place when
	  generating other messages.  (C)

     ----ddddoooonnnntttt____wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	  Disables the warning that is issued when the ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd option
	  is in	effect.	 (C, C++, F77, F90)

     ----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  Produces an executable or DSO	and exits with zero status even	if
	  there	are unresolved symbols.	 Resolution of these symbols is
	  completed by rrrrlllldddd(5).	If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd option is also
	  specified, a list of the unresolved symbols is generated.  If	the
	  ----sssshhhhaaaarrrreeeedddd option is also specified, no such list is generated.	If
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option is also specified, the	----iiiiggggnnnnoooorrrreeee____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	  option is ignored and	the ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd option is put into
	  effect, as it	always is when ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd is specified.

	  This option is enabled by default when the ----sssshhhhaaaarrrreeeedddd option is
	  specified, but it is not enabled when	the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	  ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are enabled.  (C,	C++, F77, and F90)

     ----iiiinnnnffffoooo
	  Generates messages of	an informational nature	that might
	  highlight unusual, but not illegal, situations.  This	is enabled
	  by default.  (C, C++,	F77, F90)

     ----LLLLDDDD____MMMMSSSSGGGG::::[_m_s_g_t_y_p_e====_n_u_m_l_i_s_t][::::_m_s_g_t_y_p_e=_n_u_m_l_i_s_t]...
	       Changes or respecifies message severities.  This	option
	       controls	the general message handling interface for lllldddd.	It
	       allows you to change the	default	message	severity.  For
	       _n_u_m_l_i_s_t,	specify	a comma- or dash-separated list	of message
	       numbers.	For a list of the linker messages and their
	       numbers,	see the	MESSAGES section.

	       Valid _m_s_g_t_y_p_e arguments,	and their meanings, are	as follows:

	       _m_s_g_t_y_p_e	 MMMMeeeeaaaannnniiiinnnngggg

	       eeeerrrrrrrroooorrrr	 Treats	each message in	_n_u_m_l_i_s_t	as an error.

	       iiiinnnnffffoooo	 Treats	each message in	_n_u_m_l_i_s_t	as an informational
			 message.

	       wwwwaaaarrrrnnnniiiinnnngggg	 Treats	each message in	_n_u_m_l_i_s_t	as a warning.

	       vvvveeeerrrrbbbboooosssseeee	 Treats	each message in	_n_u_m_l_i_s_t	as a verbose
			 message.

	       ooooffffffff	 Ignores each message in _n_u_m_l_i_s_t.

	       Example 1:  Specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333 tells the linker
	       to treat	message	33, which by default is	an error, as a
	       warning.	 Similarly, specifying ----LLLLDDDD____MMMMSSSSGGGG::::wwwwaaaarrrrnnnniiiinnnngggg====33333333::::ooooffffffff====44447777----66668888
	       tells the linker	to treat message 33 as a warning and to
	       ignore all messages from	47 to 68 inclusive.

	       Example 2:  Some	information obtained when the ----vvvv (verbose
	       mode) option is enabled can be of use when debugging
	       programs.  To obtain informational messages regarding symbol
	       resolution conflict, preemption,	and type mismatch
	       information in regard to	weak symbols, specify the following
	       lllldddd options:

		    -LD_MSG:info=134,175-177
		    -quickstart_info

	       The preceding options produce the following messages:

	   134:	Weak definition	preempting another weak	definition.
	   174:	Strong definition preempting a weak definition.
	   175:	Weak definition	type mismatch with a strong definition.
	   176:	Weak definition	type mismatch with a reference.
	   177:	Weak definition	type mismatch with another weak	definition.

	       Fatal errors cannot be modified by ----LLLLDDDD____MMMMSSSSGGGG::::.  (C, C++, F77,
	       F90)

     ----nnnnooooiiiinnnnffffoooo   Suppresses informational	messages generated when	the ----iiiinnnnffffoooo
	       option is in effect.  (C, C++, F77, F90)

     ----nnnnoooo____uuuunnnnrrrreeeessssoooollllvvvveeeedddd
	       Lists unresolved	symbols.  If the ----sssshhhhaaaarrrreeeedddd option	is also
	       specified, a DSO	is produced and	lllldddd exits with zero status.
	       If the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, lllldddd
	       exits with nonzero status and no	executable is produced.
	       This option is enabled by default when the ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd or
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd options are specified, but it is disabled by
	       default when the	----sssshhhhaaaarrrreeeedddd	option is specified.  (C, C++, F77,
	       and F90)

     ----UUUU	       Suppresses error	messages that would be generated for
	       undefined symbols.  This	option allows you to create an
	       executable with undefined symbols.  Referencing an undefined
	       symbol during execution can cause a segmentation	fault and a
	       core dump.

     ----wwww, ----wwwwaaaallllllll Specifies that all warnings are to be suppressed.  (C, C++,
	       F77, F90)

     ----wwwwaaaarrrrnnnn____uuuunnnnuuuusssseeeedddd
	       Specifies that the linker should	issue a	warning	if it finds
	       that some object	has not	been used in a link.  The semantics
	       of dynamic linking dictate that this cannot be determined
	       absolutely at static link time, but it is usually quite
	       reliable.  This option is enabled by default.  (C, C++, F77,
	       F90)

     ----wwwwooooffffffff _n_u_m_l_i_s_t
	       Suppresses the messages specified in _n_u_m_l_i_s_t.  For _n_u_m_l_i_s_t
	       specify a comma-separated list of warning message numbers.
	       For example, specifying ----wwwwooooffffffff """" 5555,,,,11117777,,,,22223333""""	suppresses warning
	       messages	numbered 5, 17,	and 23.	 If you	are linking using
	       the cccccccc(1) command, this option should be	passed to the
	       linker with the following three options:	 ----WWWWllll,,,,----wwwwooooffffffff,,,,5555 ----WWWWllll,,,,----
	       wwwwooooffffffff,,,,11117777 ----WWWWllll,,,,----wwwwooooffffffff,,,,22223333.  This is equivalent to specifying
	       ----LLLLDDDD____MMMMSSSSGGGG::::OOOOFFFFFFFF====5555,,,,7777,,,,22223333.  (C,	C++, F77, F90)

   SSSSttttrrrriiiippppppppiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options are involved	in the process of stripping
     information from an object	file.  The linker does not strip out
     information that would prevent the	program	from running.

     ----ssss	       Strips the symbolic information from the	output object file.
	       (C, C++,	F77, F90)

     ----xxxx	       Does not	preserve local (non-global) symbols in the output
	       symbol table.  The linker enters	external and static symbols
	       only.  This option conserves space in the output	file.

   OOOOuuuuttttppppuuuutttt OOOObbbbjjjjeeeecccctttt FFFFoooorrrrmmmmaaaatttt	OOOOppppttttiiiioooonnnnssss
     The following options affect the format of	the output object file:

     ----33332222 or ----oooo33332222
	       Specifies that the object to be linked (and the input
	       objects)	are to be old-style, 32-bit ucode objects.  (C,
	       C++, F77, F90)

     ----66664444       Specifies that the object to be linked (and the input
	       objects)	are to be 64-bit objects.  (C, C++, F77, F90)

     ----aaaabbbbiiii      Specifies that the resultant output executable conforms to
	       generic MIPS ABI	conventions.  (C, C++, F77, F90)

     ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       Produces	a dynamic executable.  The object created can use
	       shared objects at runtime. This is enabled by default.  (C,
	       C++, F77, F90)

     ----eeeellllffff      Produces	an ELF output object file.  This is the	default,
	       and currently the only, file format supported.  (C, C++,
	       F77, F90)

     ----mmmmiiiippppssss2222    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 2 ISA.	 (C, C++, F77, F90)

     ----mmmmiiiippppssss3333    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 3 ISA.	 If lllldddd finds object files
	       that are	MIPS 4,	the resulting binary is	silently marked	as
	       being a ----mmmmiiiippppssss4444 binary.  (C, C++,	F77, F90)

     ----mmmmiiiippppssss4444    Specifies that the linker should	try to produce a binary
	       that conforms to	the MIPS 4 ISA.	 (C, C++, F77, F90)

     ----nnnn33332222      Specifies that the object to be linked (and the input
	       objects)	are to be new-style, 32-bit objects.  (C, C++, F77,
	       F90)

     ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd
	       Produces	a static executable.  The output object	created
	       will not	use any	shared objects during execution.  This
	       declares	that you are not loading position-independent code
	       (PIC).  This option cannot be specified in conjunction with
	       the ----rrrr option; do not use them together on the same command
	       line.  (C, C++, F77, F90)

     ----rrrr	       Retains relocation entries in the output	file.  Relocation
	       entries must be saved if	the output file	is to become an
	       input file in a subsequent lllldddd run.  This	option also
	       prevents	final definitions from being given to common
	       symbols and suppresses the uuuunnnnddddeeeeffffiiiinnnneeeedddd ssssyyyymmmmbbbboooollll diagnostics.
	       This option cannot be specified in conjunction with the
	       ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option; do not use them together on the same
	       command line.

     ----sssshhhhaaaarrrreeeedddd   Produces	a DSO, creates all of the tables for run-time
	       linking,	and resolves references	to other specified shared
	       objects.	 The object created can	be used	by the linker to
	       make dynamic executables.  (C, C++, F77,	F90)

   LLLLaaaayyyyoooouuuutttt OOOOppppttttiiiioooonnnnssss
     The layout	options	affect the layout of the object	file.  They are	as
     follows:

     ----BBBB	_n_u_m    Sets the	uninitialized data (BSS) segment origin.  Specify a
	       hexadecimal number for _n_u_m.

     ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	       Checks the location of this shared object's segments and
	       makes sure they stay out	of the way of others in	the
	       _l_o_c_a_t_i_o_n__f_i_l_e.  A single	registry file, either with
	       ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is allowed.	 This
	       option must be specified	in conjunction with the	----sssshhhhaaaarrrreeeedddd
	       option.	(C, C++, F77, F90)

	       lllldddd uses the ssssoooo____llllooooccccaaaattttiiiioooonnnnssss	file from the current directory	(in
	       preference to uuuussssrrrr////lllliiiibbbb if	the cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or
	       uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy option is not specified.

     ----dddd	       Forces definition of common storage and defines
	       loader-defined symbols even if ----rrrr is present.

     ----DDDD	_n_u_m    Sets the	initialized data segment origin.  Specify a
	       hexadecimal number for _n_u_m.  (C,	C++, F77, F90)

     ----eeeellllssssmmmmaaaapppp   Specifies that the linker should	emit a layout map in the
	       form of an ELF layout specification.  The output	from this
	       specification can be used with the ----eeeellllssssppppeeeecccc option without
	       modification.

     ----eeeellllssssppppeeeecccc _f_i_l_e
	       Specifies a file	to serve as an ELF layout specification
	       file.  This file	and its	syntax are described in	eeeellllssssppppeeeecccc(5).

     ----GGGG	[_n_u_m]  Specifies the largest size, in bytes, of	a ....ccccoooommmmmmmm	item that
	       is to be	allocated in the small BSS section for reference
	       off of the global pointer (GP).	The default is 8 bytes.	 If
	       the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has been specified, this option is
	       a synonym for the ----sssshhhhaaaarrrreeeedddd option	and takes no numerical
	       argument.

     ----iiiivvvvppppaaaadddd    Improves	cache behavior by causing the linker to	perform
	       intervariable padding of	some large variables.  This is in
	       effect by default.  (C, C++, F77, F90)

     ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT::::[_c_o_m_m_a_n_d====_a_r_g][::::_c_o_m_m_a_n_d====_a_r_g]...
	       The ----LLLLDDDD____LLLLAAAAYYYYOOOOUUUUTTTT option group accepts arguments that control
	       the layout of the object	file.  These arguments are as
	       follows:

	       sssseeeegggglllliiiiggggnnnn====_a_l_i_g_n_v_a_l
		    Defines the	minimum	segment	alignment.  _a_l_i_g_n_v_a_l must
		    be both PPPPAAAAGGGGEEEESSSSIIIIZZZZEEEE or	greater	and a power of 2.

	       llllggggooootttt____bbbbuuuuffffffffeeeerrrr====_v_a_l
		    Used by lllldddd after it	exhausts local Global Offset Table
		    (GOT) page slots.  The _v_a_l argument	is the number of
		    extra slots	per local GOT area to use.

	       mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd====_s_e_t_t_i_n_g
		    This is for	internal use.  When used in conjunction
		    with ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt, forces	different levels of
		    multigot during regression testing.	 When disabled,
		    every input	section	to has its own GOT.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  Usually,	the linker attempts
		    to link everything,	generating a single GOT.  If this
		    fails, it reruns the layout	phase and possibly creates
		    multiple GOT regions.  This	option causes the first
		    layout pass	to fail.  This is used in conjunction with
		    the	mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd option described	previously.

	       ffffoooorrrrcccceeee____mmmmuuuullllttttiiiiggggooootttt
		    This is for	internal use.  When used in conjunction
		    with the mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd (described previously), it
		    forces multiple levels of multigot during regression
		    testing.

	       sssseeeeggggaaaalllliiiiggggnnnn====_v_a_l
		    Defines the	minimum	segment	alignment.  _v_a_l	must be
		    both 0x1000	or greater and a power of 2.

	       oooonnnneeee____ggggooootttt====_s_e_t_t_i_n_g
		    Prevents the linker	from producing multiple	GP regions.
		    For	more information, see mmmmggggooootttt____tttthhhhrrrreeeesssshhhhoooolllldddd, which is
		    described previously in this list.

		    _s_e_t_t_i_n_g indicates a	Boolean	option that can	be enabled
		    or disabled.  To enable, specify OOOONNNN, 1111, or TTTTRRRRUUUUEEEE.  To
		    disable, specify OOOOFFFFFFFF, 0000, or	FFFFAAAALLLLSSSSEEEE.

	       rrrreeeeoooorrrrddddeeeerrrr____ffffiiiilllleeee====_f_e_e_d_b_a_c_k__f_i_l_e
		    Names a feedback file.  When specified, function layout
		    in the text	section	is optimized to	minimize page
		    faults and I-cache misses based upon the frequency
		    information	in _f_e_e_d_b_a_c_k__f_i_l_e.  This	file is	usually
		    produced by	pppprrrrooooffff(1)/ccccvvvvppppeeeerrrrffff(1) or ssssssssccccoooorrrrdddd(1)/ssssssssoooorrrrddddeeeerrrr(1),
		    but	a user can also	construct or modify this ASCII
		    file.

		    Note that object files must	have been compiled with	the
		    ----OOOOPPPPTTTT::::pppprrrroooocccceeeedddduuuurrrreeee____rrrreeeeoooorrrrddddeeeerrrr====OOOONNNN option specified.	 For more
		    information	on this	option,	see the	oooopppptttt(5) man page.

		    For	information on messages	related	to this	option,	see
		    the	MESSAGES section of this man page.  For	an example
		    that shows reordering code regions,	see the	_M_I_P_S_p_r_o
		    _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e.

	       (C, C++,	F77, F90)

     ----nnnn	  Preloads the entire text and data portions of	the executable(s)
	  when the output file is executed.  This involves moving the data
	  areas	up to the first	possible _p_a_g_e_s_i_z_e byte boundary	following
	  the end of the text.	You must specify the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option	in
	  conjunction with the ----nnnn option.  (C, C++, F77, F90)

     ----NNNN	  Places the data segment immediately after the	text and does not
	  make the text	portion	read only or sharable.	You must specify
	  the ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd option in conjunction	with the ----NNNN option.

     ----nnnnooooiiiivvvvppppaaaadddd
	  Disables the behavior	of the ----iiiivvvvppppaaaadddd option.  (C, C++,	F77, F90)

     ----rrrrddddaaaattttaaaa____wwwwrrrriiiittttaaaabbbblllleeee
	  Puts ....rrrrooooddddaaaattttaaaa into the	data segment, which has	write permission.
	  This is in effect by default.	 (C, C++, F77, F90)

     ----rrrrddddaaaattttaaaa____sssshhhhaaaarrrreeeedddd
	  Puts ....rrrrooooddddaaaattttaaaa into the	text segment, where it is shared across
	  processes and	is read-only.  (C, C++,	F77, F90)

     ----TTTT	_n_u_m
	  Sets the text	segment	origin.	 (C, C++, F77, F90)

     ----XXXXllllooooccccaaaallll _n_a_m_e_s
	  Assigns the named global BSS (uninitialized data) symbols to a
	  special local	data section in	the aaaa....oooouuuutttt file.	 This is useful	for
	  hand-parallelized Fortran programs that require this symbol to be
	  private for each thread.

	  A symbol assigned to the small BSS or	small data section of an
	  object file cannot be	moved to the special section.  If the
	  symbol is assigned to	either the small BSS or	small data section,
	  either recompile with	a smaller ----GGGG number or use the following
	  directive in your source code:  ####pppprrrraaaaggggmmmmaaaa sssseeeeccccttttiiiioooonnnn____nnnnoooonnnn____ggggpppp((((_n_a_m_e) (in
	  C) or	CCCC****$$$$****SSSSEEEECCCCTTTTIIIIOOOONNNN____NNNNOOOONNNN____GGGGPPPP((((_n_a_m_e)))) (in Fortran).

     ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy _l_o_c_a_t_i_o_n__f_i_l_e
	  Registers the	location of this shared	object's segments and makes
	  sure they stay out of	the way	of others in the _l_o_c_a_t_i_o_n__f_i_l_e.	The
	  _l_o_c_a_t_i_o_n__f_i_l_e	is updated if it is writable.  A single	registry
	  file,	either with ----cccchhhheeeecccckkkk____rrrreeeeggggiiiissssttttrrrryyyy or ----uuuuppppddddaaaatttteeee____rrrreeeeggggiiiissssttttrrrryyyy, is
	  allowed.  This option	is must	be specified in	conjunction with
	  used with the	----sssshhhhaaaarrrreeeedddd	option.	 The default registry file is
	  either ////uuuussssrrrr////lllliiiibbbb,,,,33332222////_s_o__l_o_c_a_t_i_o_n_s or ////uuuussssrrrr////lllliiiibbbb,,,,66664444////_s_o__l_o_c_a_t_i_o_n_s,
	  depending on your compilation.  For more information on
	  _s_o__l_o_c_a_t_i_o_n_s,	see the	ddddssssoooo(5) man page.  (C, C++, F77,	F90)

     ----zzzz	  Arranges that	the process pages are loaded on	demand from the
	  resulting executable file rather than	preloaded, and that the
	  text pages are shared	among all users.  This is in effect by
	  default.

   DDDDyyyynnnnaaaammmmiiiicccc LLLLiiiinnnnkkkkiiiinnnngggg OOOOppppttttiiiioooonnnnssss
     The following options affect dynamic linking:

     ----BBBB	_s_y_m_b_o_l_i_c
	       Inserts the element DDDDTTTT____SSSSYYYYMMMMBBBBOOOOLLLLIIIICCCC into the	....ddddyyyynnnnaaaammmmiiiicccc section of
	       a shared	object library.	 This alters the dynamic linker's
	       symbol resolution algorithm for references within the
	       library.	 Instead of starting a symbol search with the
	       executable file,	the dynamic linker starts from the shared
	       object itself.  If the shared object fails to supply the
	       referenced symbol, the dynamic linker then searches the
	       executable file and other shared	objects	as usual.

     ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       When creating a dynamic shared object using the ----sssshhhhaaaarrrreeeedddd
	       option, this option marks that shared object as default
	       delay load.  (C,	C++, F77, F90)

     ----ddddeeeellllaaaayyyy____llllooooaaaadddd
	       Indicates that the next specified DSO should be delay
	       loaded.	Typically, linking against a DSO causes	that DSO to
	       be loaded at runtime whenever the DSO being created is
	       loaded.	This resolves the symbols supplied by that object.
	       You can use the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option to delay the loading of a
	       DSO. When ----ddddeeeellllaaaayyyy____llllooooaaaadddd is	specified, the DSO is not loaded
	       until a symbol supplied by the DSO is actually referenced.
	       Be careful when using the ----ddddeeeellllaaaayyyy____llllooooaaaadddd option or when linking
	       against a DSO that was built using the ----ddddeeeeffffaaaauuuulllltttt____ddddeeeellllaaaayyyy____llllooooaaaadddd
	       option.	Symbols	from a delay-loaded DSO	do not preempt
	       symbols from other libraries; they are resolved as if the
	       DSO was last on the link	line.  (C, C++,	F77, F90)

     ----eeee	_s_y_m_b_o_l Sets the	default	entry point address for	the output file	to
	       be that of the symbol _s_y_m_b_o_l.  (C, C++, F77, F90)

     ----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____EEEEXXXXAAAACCCCTTTT____MMMMAAAATTTTCCCCHHHH flag in the ....lllliiiibbbblllliiiisssstttt flags field.
	       This indicates to rrrrlllldddd(5)	that this shared object	must match
	       the timestamp and checksum from the ....lllliiiibbbblllliiiisssstttt section in
	       addition	to the interface version.  This	means that all DSOs
	       run against must	match exactly the version, timestamp, and
	       checksum	against	which the application was linked (or
	       processed by rrrrqqqqssss).  Moreover, if	the object is copied to
	       another machine,	it will	not run	unless the object is first
	       processed by rrrrqqqqssss(1) because the other machine is	likely to
	       have a different	checksum and timestamp for things on the
	       liblist of this object, such as lllliiiibbbbcccc....ssssoooo....1111.  On a	MIPS4
	       machine (such as	R10000), the following would not execute:

		    cccccccc tttt....cccc ----nnnn33332222	----mmmmiiiippppssss3333 ----WWWWllll,,,,----eeeexxxxaaaacccctttt____vvvveeeerrrrssssiiiioooonnnn ;;;; ....////aaaa....oooouuuutttt

	       rrrrlllldddd(5) would generate a fatal error for the previous command
	       because the MIPS3 lllliiiibbbbcccc....ssssoooo....1111 linked against is not the same
	       as the MIPS4 lllliiiibbbbcccc....ssssoooo....1111 against which the	executable will	run
	       on that machine.	 (C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss  Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be exported by the object being created.
	       This is the default behavior for	linking	in an object, but
	       it is not for archives or DSOs.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The specified _f_i_l_e must contain a list	of symbols
	       that should be exported.	 The list is comprised of symbol
	       names separated by spaces or new-line characters.  Any
	       symbols not specifically	exported will be automatically
	       hidden.	(C, C++, F77, F90)

     ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	exported.  Use a
	       comma to	separate the symbols.  If you specify any exported
	       symbols,	all unspecified	symbols	are automatically hidden.
	       (C, C++,	F77, F90)

     ----ffffiiiinnnniiii _f_f_u_n_c_s_y_m_b_o_l
	       Puts calls to one or more _f_f_u_n_c_s_y_m_b_o_l into the code that
	       rrrrlllldddd(5) exercises	after the main program exits.  The
	       _f_f_u_n_c_s_y_m_b_o_l contains the	termination code to be called after
	       the main	program	exits.	In the case of a DSO that is no
	       longer referenced and is	closed using ddddllllcccclllloooosssseeee(3C), this
	       function	is called before the DSO is unmapped.

	       A single	----ffffiiiinnnniiii option is	effective in a given DSO or
	       executable.  To specify more than one _f_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----ffffiiiinnnniiii options on the command line.  If multiple
	       ----ffffiiiinnnniiii options are provided, they	are executed at	runtime	in
	       the reverse order listed	on the command line.  The ordering
	       facilitates pairing ----iiiinnnniiiitttt and ----ffffiiiinnnniiii entries in makefiles.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For information on
	       how to specify your own ----ffffiiiinnnniiii functions,	see the	EXAMPLES
	       section.	 (C)

     ----ffffoooorrrrcccceeee____llllooooaaaadddd
	       Forces the normal loading of the	next specified DSO,
	       overriding any default delay load attribute associated with
	       that DSO.  (C, C++, F77,	F90)

     ----ffffuuuullllllll____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Specifies that the linker perform the work described for	the
	       ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk option and, in addition, add	each
	       library encountered to the list of objects needed by the
	       current object, beyond what is specified	on the link line.
	       (C, C++,	F77, F90)

     ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee _f_i_l_e
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 The file specified by _f_i_l_e must contain a list	of
	       symbols to be hidden.  The list is comprised of symbols
	       separated by spaces or new-lines	characters.  This option is
	       ignored if any symbols in the list are specifically marked
	       as exported using the ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee
	       option.	(C, C++, F77, F90)

     ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll _s_y_m_b_o_l__l_i_s_t
	       Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Marks the specified symbols as	hidden.	 Use a
	       comma to	separate the symbols.  This option is ignored if
	       any symbols are specifically marked as exported using the
	       ----eeeexxxxppppoooorrrrtttteeeedddd____ssssyyyymmmmbbbboooollll	or ----eeeexxxxppppoooorrrrttttssss____ffffiiiilllleeee options.  If you specify
	       ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll, all unspecified symbols are automatically
	       exported, including those that were implicitly hidden when
	       loading archive libraries.  (C, C++, F77, F90)

     ----hhhhiiiiddddeeeessss    Used in conjunction with	the ----sssshhhhaaaarrrreeeedddd or ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd
	       options.	 Specifies that	symbols	from the next object,
	       archive,	or DSO be hidden by the	object being created.  This
	       is the default behavior for linking in archives or DSOs,	but
	       it is not for relocatable objects.  (C, C++, F77, F90)

     ----IIII	_p_a_t_h_n_a_m_e
	       Writes the path name into the ....iiiinnnntttteeeerrrrpppp section.  The _p_a_t_h_n_a_m_e
	       is a path name for the system to	invoke as a program
	       interpreter.

     ----iiiiggggnnnnoooorrrreeee____mmmmiiiinnnnoooorrrr
	       Clears the LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag	in the ....lllliiiibbbblllliiiisssstttt	flags field
	       for shared objects listed subsequently on the lllldddd	command
	       line.  This allows rrrrlllldddd(5) to use	a shared object	at runtime
	       that has	a different minor version number.  This	option is
	       enabled by default.  For	more information on major and minor
	       version numbers,	see the	ddddssssoooo(5) man page.  (C, C++, F77,
	       F90)

     ----iiiiggggnnnnoooorrrreeee____vvvveeeerrrrssssiiiioooonnnn
	       Sets the	LLLLLLLL____IIIIGGGGNNNNOOOORRRREEEE____VVVVEEEERRRRSSSSIIIIOOOONNNN flag in the liblist flags field.
	       For subsequent shared objects in	the liblist, rrrrlllldddd(5) does
	       not try to match	the interface version as specified at link
	       time.  (C, C++, F77, F90)

     ----iiiinnnniiiitttt _i_f_u_n_c_s_y_m_b_o_l
	       Puts a call to _i_f_u_n_c_s_y_m_b_o_l into the code	that rrrrlllldddd(5)
	       exercises before	the main program begins.  The _i_f_u_n_c_s_y_m_b_o_l
	       contains	initialization code to be called before	control	is
	       passed to mmmmaaaaiiiinnnn.	In the case of a DSO opened with ddddllllooooppppeeeennnn(3C)
	       or ssssggggiiiiddddllllaaaadddddddd(3C) an initialization function is called after
	       the DSO is loaded but before it is referenced.

	       A single	----iiiinnnniiiitttt option is	effective in a given DSO or
	       executable.  To specify more than one _i_f_u_n_c_s_y_m_b_o_l, specify
	       multiple	----iiiinnnniiiitttt options on the command line.  If multiple
	       ----iiiinnnniiiitttt options are specified, they are executed at runtime in
	       the order listed	on the command line.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 Any user ....iiiinnnniiiitttt
	       sections	are concatenated to the	ones generated by the
	       linker.	For information	on how to specify your own ----iiiinnnniiiitttt
	       functions, see the EXAMPLES section.  (C)

     ----nnnnoooo____lllliiiibbbbrrrraaaarrrryyyy____rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt
	       Turns on	a flag in the dynamic section so that rrrrlllldddd(5) does
	       not allow execution time	or runtime changes to the path
	       (except by a superuser) to find the shared objects.
	       Typically, this option is used for security purposes on
	       system utilities.  (C, C++, F77,	F90)

     ----nnnnoooo____ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Some applications may find it desirable to hide some of
	       their dependent libraries.  This	option cancels the upward
	       propagation of libraries	to facilitate such hiding.
	       Executables and shared objects built in this way	can
	       experience slightly slower startup.  (C,	C++, F77, F90)

     ----rrrreeeeqqqquuuuiiiirrrreeee____mmmmiiiinnnnoooorrrr
	       Sets the	LLLLLLLL____RRRREEEEQQQQUUUUIIIIRRRREEEE____MMMMIIIINNNNOOOORRRR flag in the ....lllliiiibbbblllliiiisssstttt flags field
	       for DSOs	listed subsequently on the lllldddd command line.  This
	       indicates to rrrrlllldddd(5) that	the shared object used at runtime
	       must have the exact same	minor (and major) version number as
	       that at static link time.  Otherwise, execution aborts.	For
	       more information	on major and minor version numbers, see	the
	       ddddssssoooo(5) man page.	 (C, C++, F77, F90)

     ----rrrrppppaaaatttthhhh _l_i_b_r_a_r_y__p_a_t_h
	       Adds the	_l_i_b_r_a_r_y__p_a_t_h to	the search path	for DSOs.  Each
	       library path is appended	to the list of directories at the
	       time the	executable or DSO is loaded.  This option directs
	       rrrrlllldddd(5) to look in the named directories,	but to look only
	       for DSOs, and to	stop looking when the correct one is found.

	       This option can be specified only when the ----sssshhhhaaaarrrreeeedddd or
	       ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd options are	also in	effect.	 For more
	       information, see	the rrrrlllldddd(5) man page.  (C, C++, F77, F90)

     ----sssseeeetttt____vvvveeeerrrrssssiiiioooonnnn _v_e_r_s_i_o_n__s_t_r_i_n_g
	       Sets the	value of the DDDDTTTT____MMMMIIIIPPPPSSSS____IIIIVVVVEEEERRRRSSSSIIIIOOOONNNN field in the dynamic
	       section of the shared object to _v_e_r_s_i_o_n__s_t_r_i_n_g.	The
	       _v_e_r_s_i_o_n__s_t_r_i_n_g must consist of a	series of version strings
	       separated by colons (:).	 (C, C++, F77, F90)

     ----ssssoooonnnnaaaammmmeeee _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       Sets DDDDTTTT____SSSSOOOONNNNAAAAMMMMEEEE for a shared object.  Must be specified in
	       conjunction with	the ----sssshhhhaaaarrrreeeedddd option.  The _s_h_a_r_e_d__o_b_j_e_c_t__n_a_m_e
	       can be a	single component name (for example, lllliiiibbbbcccc....aaaa), a full
	       path name (starting with	a slash), or a relative	path name
	       (containing a slash).  Single component names use rrrrppppaaaatttthhhh,
	       LLLLDDDD____LLLLIIIIBBBBRRRRAAAARRRRYYYY____PPPPAAAATTTTHHHH,	and the	default	paths to resolve their
	       locations.  (C, C++, F77, F90)

     ----ttttrrrraaaannnnssssiiiittttiiiivvvveeee____lllliiiinnnnkkkk
	       Typically, every	shared object and every	executable has a
	       dependency list of shared objects that are needed for
	       correct execution.  The runtime linker, rrrrlllldddd(5), loads these
	       objects when any	process	is run.	 If the	depended-upon
	       shared objects have more	objects	that they in turn depend
	       upon, rrrrlllldddd(5) adds them at the end of the	list, and so on,
	       performing a transitive closure.

	       By default, a similar operation is performed at static, lllldddd,
	       link time.  Any shared object that is listed on the command
	       line is put on aaaa....oooouuuutttt's dependency list.	Then any new shared
	       objects from the	dependency lists of the	already-processed
	       shared objects are also processed and checked for
	       conflicting definitions of symbols, but they are	not added
	       to the list of shared objects needed by the object being
	       built.  This is the default behavior.  (C, C++, F77, F90)

   IIII////OOOO OOOOppppttttiiiioooonnnnssss
     The options affect	I/O:

     ----mmmmmmmmaaaapppp     Directs the linker to use mmmmmmmmaaaapppp(2) as its	preferred mode for
	       reading object files.  This usually results in better I/O
	       performances, except when using NFS mounted files with high
	       network latencies.  This	is enabled by default.

     ----rrrreeeeaaaadddd     Directs the linker to use the ooooppppeeeennnn(2), llllsssseeeeeeeekkkk(2),	and rrrreeeeaaaadddd(2)
	       utilities as its	preferred mode for reading object files.
	       Setting this option when	many object files are remotely
	       mounted with high network latency often improves
	       performance.

   HHHHaaaarrrrddddwwwwaaaarrrreeee PPPPaaaattttcccchhhh OOOOppppttttiiiioooonnnnssss
     The following options are patches to the hardware:

     ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Disables	the work-around	for the	R4000 bug.  When this flag
	       is present, no adjustment is attempted.	The work-around	is
	       enabled by default, so the presence of the
	       ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp option before	any object files disables
	       the feature.  Disabling the workaround can result in code
	       that is not compatible across platforms and may also result
	       in a performance	penalty	on some	R4000 systems.

     ----nnnnoooo____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp
	       Works around an R4000 bug present in 2.1	and 2.2	silicon.
	       This option tries to prevent certain classes of branch
	       instructions from being the last	instruction on a page of
	       virtual memory.	This option is enabled by default for links
	       of MIPS3	or lower programs.  You	can use	the hhhhiiiinnnnvvvv(1M)
	       command to determine what revision of R4000 is present in
	       the system.

	       The kernel automatically	works around this problem with
	       early versions of the R4000, but	there is a small
	       performance penalty.  Using this	option helps avoid the
	       situation in which a kernel workaround is needed.

   MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss OOOOppppttttiiiioooonnnnssss
     The following are miscellaneous options:

     ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       Alters the meaning of the ----GGGG option to conform to the UNIX
	       System V	Release	4 usage.  For more information,	see the
	       ----GGGG [_n_u_m]	option.	 When specified	on the compiler	command
	       line, this option is ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.  (C,	C++, F77, F90)

     ----oooo	_o_u_t_f_i_l_e
	       Produces	an output object file by the name _o_u_t_f_i_l_e.  The
	       name of the default output file is aaaa....oooouuuutttt.  For example, in
	       the event that _o_u_t_f_i_l_e has undefined references at the end
	       of the link editor run, and the ----rrrr option was not used, and
	       the ----aaaaoooouuuuttttkkkkeeeeeeeepppp option was	used, _o_u_t_f_i_l_e is renamed aaaa....oooouuuutttt.	 If
	       there are undefined references and the ----aaaaoooouuuuttttkkkkeeeeeeeepppp	option was
	       not used, there is no output from lllldddd.

	       If the specified	output file already exists, the	ownership
	       and mode	from the existing file are retained.  (C, C++, F77,
	       F90)

     ----VVVVSSSS _n_u_m   Uses _n_u_m	as the decimal version stamp to	identify the aaaa....oooouuuutttt
	       file that is produced.  The version stamp is stored in the
	       optional	and symbolic headers.  (C, C++,	F77, F90)

   SSSSyyyynnnnoooonnnnyyyymmmm OOOOppppttttiiiioooonnnnssss
     The following options are synonyms	for other lllldddd options:

     ----aaaa	       This is a synonym of ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.

     ----aaaajjjjeeeeoooopppp    This is a synonym for ----aaaalllllllloooowwww____jjjjuuuummmmpppp____aaaatttt____eeeeoooopppp.

     ----ddddnnnn       This is a synonym for ----nnnnoooonnnn____sssshhhhaaaarrrreeeedddd.  (C)

     ----ddddyyyy       This is a synonym for ----ccccaaaallllllll____sssshhhhaaaarrrreeeedddd.  (C)

     ----GGGG	       If the ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option has	been specified,	this option
	       is a synonym for	----sssshhhhaaaarrrreeeedddd	and takes no numerical argument.
	       (C)

     ----hhhh	       This is a synonym for ----ssssoooonnnnaaaammmmeeee.

     ----hhhhiiiiddddeeeessss____ffffiiiilllleeee _f_i_l_e
	       This is a synonym for the ----hhhhiiiiddddddddeeeennnnssss____ffffiiiilllleeee option.

     ----nnnnoooonnnneeee     Same as ----nnnnoooottttaaaallllllll.	 (C, C++, F77, F90)

     ----oooo33332222      This is a synonym for ----33332222.

     ----OOOOPPPPTTTT::::rrrreeeeoooorrrrgggg____ccccoooommmmmmmmoooonnnn
	       This is a synonym for ----iiiivvvvppppaaaadddd.

     ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444
	       This is a synonym for ----____SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444.

     ----WWWWxxxx,,,,----GGGG _n_u_m
	       This is a synonym for the non-SVR4 meaning of ----GGGG.  The
	       meaning of this option is unaffected by the use of the
	       ----SSSSYYYYSSSSTTTTYYYYPPPPEEEE____SSSSVVVVRRRR4444 option.

RRRREEEESSSSEEEERRRRVVVVEEEEDDDD SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     The following symbols are reserved	for internal use:

     ....bbbbssssssss, ....ccccoooommmmmmmmeeeennnntttt, ....ddddaaaattttaaaa, ....ffffiiiinnnniiii, ....iiiinnnniiiitttt, ....lllliiiitttt4444, ....lllliiiitttt8888,	....rrrrddddaaaattttaaaa,	....ssssbbbbssssssss,
     ....ssssddddaaaattttaaaa, ....tttteeeexxxxtttt, ____BBBBAAAASSSSEEEE____AAAADDDDDDDDRRRREEEESSSSSSSS, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC, ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKK,
     ____DDDDYYYYNNNNAAAAMMMMIIIICCCC____LLLLIIIINNNNKKKKIIIINNNNGGGG, ____GGGGOOOOTTTT____OOOOFFFFFFFFSSSSEEEETTTT, ________ddddssssoooo____ddddiiiissssppppllllaaaacccceeeemmmmeeeennnntttt,	________eeeellllffff____hhhheeeeaaaaddddeeeerrrr,
     ________ffffssssttttaaaarrrrtttt, ________iiiissssttttaaaarrrrtttt, ________llllccccllllddddttttaaaa____aaaaddddddddrrrreeeessssssss, ________llllccccllllddddttttaaaa____ssssiiiizzzzeeee,
     ________pppprrrrooooggggrrrraaaammmm____hhhheeeeaaaaddddeeeerrrr____ttttaaaabbbblllleeee, ________rrrrlllldddd____oooobbbbjjjj____hhhheeeeaaaadddd, ________ssssttttaaaarrrrtttt, ________uuuunnnnwwwwiiiinnnndddd,
     ____ddddaaaattttaaaa____iiiinnnniiiitttt____ttttaaaabbbblllleeee, ____eeeeddddaaaattttaaaa, ____eeeennnndddd, ____eeeetttteeeexxxxtttt, ____ffffbbbbssssssss, ____ffffddddaaaattttaaaa, ____fffftttteeeexxxxtttt, ____ggggpppp,
     ____ggggpppp____ddddiiiisssspppp, ____lllliiiibbbb____vvvveeeerrrrssssiiiioooonnnn, ____pppprrrroooocccceeeedddduuuurrrreeee____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee, ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee,
     ____pppprrrroooocccceeeedddduuuurrrreeee____ttttaaaabbbblllleeee____ssssiiiizzzzeeee, ____rrrrlllldddd____nnnneeeewwww____iiiinnnntttteeeerrrrffffaaaacccceeee,	____rrrrtttt____ssssyyyymmmmbbbboooollll____ssssttttrrrriiiinnnngggg____ttttaaaabbbblllleeee,
     ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee, and ____rrrrtttt____ssssyyyymmmmbbbboooollll____ttttaaaabbbblllleeee____ssssiiiizzzzeeee.

     In	addition, all symbols that begin with the prefixes ________eeeellllffff____vvvvaaaaddddddddrrrr and
     ________eeeellllffff____ssssiiiizzzzeeee	are reserved.  It is erroneous to define these symbols.

     In	ANSI C,	the following symbols can be defined:  eeeennnndddd, eeeeddddaaaattttaaaa, and
     eeeetttteeeexxxxtttt.  If	they are not defined (but only referenced), they are
     assigned the same values as ____eeeennnndddd, ____eeeeddddaaaattttaaaa, and ____eeeetttteeeexxxxtttt respectively.
     For more information on these symbols, see	the eeeennnndddd(3C) man	page.

LLLLIIIIBBBBRRRRAAAARRRRYYYY	SSSSEEEEAAAARRRRCCCCHHHH OOOORRRRDDDDEEEERRRR
     If	an argument specified on the lllldddd	command	line is	a library, it is
     searched exactly once at the point	it is encountered in the argument
     list.  There are two kinds	of libraries:  archives	and DSOs.  When
     linking with archives, only the routines that define an unresolved
     external reference	are loaded.  Shared objects are	used only if the
     output is to be dynamic.  In that case, only the name is used for
     external resolution; no object is included	as part	of the output
     object file.  Note	that unresolved	symbols	are not	considered an error
     when linking with the ----sssshhhhaaaarrrreeeedddd option.  The	library	(archive) symbol
     table (see	aaaarrrr(1)) is a hash table and is searched to resolved external
     references	that can be satisfied by library members.  The ordering	of
     library members is	not important.	By default, internal libraries are
     not searched.

     When searching for	ucode libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb////, ////lllliiiibbbb////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////.	 Note that although
     archives are found	in ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////, shared objects should not be
     installed there because rrrrlllldddd(5) will not find them.

     When searching for	64-bit libraries, the default directories searched
     are ////uuuussssrrrr////lllliiiibbbb66664444////, ////lllliiiibbbb66664444////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////.  When searching for
     new 32-bit	libraries, the default directories searched are
     ////uuuussssrrrr////lllliiiibbbb33332222////, ////lllliiiibbbb33332222////, and ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////.

NNNNOOOOTTTTEEEESSSS
     An	object's segments must not overlap, and	all of the object's
     addresses must be less than 0x80000000 (except when compiling with	the
     old 32-bit	option (----33332222), for which	the size maximum is 0x4000000).
     The stack starts at 0x80000000 and	grows down through lower addresses.
     Space should be left for it.  The default text segment address is
     0x10000000, with the data segment immediately following the text
     segment.  By default, the bss segment follows the data segment.

     While 64-bit programs can use much	more than 2 gigabytes of memory,
     the executable file can be	at most	2 gigabytes in size.

     When creating an executable object	runnable on UNIX, aaaa....oooouuuutttt,
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrtttt1111....oooo, should be	the first object loaded, and
     ////uuuussssrrrr////lllliiiibbbb////ccccrrrrttttnnnn....oooo should be last, following any libraries.  The
     compilers (cccccccc(1), CCCCCCCC(1), ffff99990000(1), and ffff77777777(1)) automatically	load these
     object files in the proper	order. Note that if lllldddd is invoked directly,
     those two objects are not loaded automatically.  It is your
     responsibility to specify them explicitly.

     The linker	no longer recognizes archives built with aaaarrrr ----CCCC (COFF-style)
     archive headers.

     The following group of options have been superseded by the	----eeeellllssssppppeeeecccc
     functionality:  ----XXXXnnnnoooobbbbsssssssscccchhhhaaaannnnggggeeee, ----XXXXnnnnoooossssoooorrrrttttbbbbssssssss, ----XXXXssssoooorrrrttttbbbbssssssss, ----XXXXnnnnddddbbbblllloooocccckkkk,
     ----XXXXbbbblllloooocccckkkk, ----XXXXbbbblllloooocccckkkkrrrraaaannnnggggeeee, ----XXXXnnnnddddllllooooccccaaaallllddddaaaattttaaaa, ----XXXXaaaalllliiiiggggnnnnbbbbssssssss, ----XXXXnnnnooooaaaalllliiiiggggnnnnbbbbssssssss,
     ----XXXXccccaaaacccchhhheeeemmmmiiiissssaaaalllliiiiggggnnnn, ----XXXXccccaaaacccchhhheeeessssiiiizzzzeeee, ----XXXXccccaaaacccchhhheeeelllliiiinnnneeeessssiiiizzzzeeee, ----XXXXddddeeeeffffmmmmoooovvvveeeemmmmaaaaxxxx,
     ----XXXXsssseeeettttaaaalllliiiiggggnnnn, and ----XXXXddddeeeebbbbuuuugggg.  The ----XXXXllllooooccccaaaallllddddaaaattttaaaa option has been replaced	by
     the ----XXXXllllooooccccaaaallll option.

     As	of the 7.3.1.3m	release, the ....ddddyyyynnnnaaaammmmiiiicccc section of the aaaa....oooouuuutttt now has
     entries for the timestamp and checksum.  This allows downstream tools
     such as SpeedShop to determine if data files match	the executable or
     not.  This	information has	always been in DSOs.  NOTE that	a
     recompiled	aaaa....oooouuuutttt now always has different bits.

     As	of the 7.3.1.3m	release, the linker generates some text	on its own
     such as the iiiinnnniiiitttt and ffffiiiinnnniiii function	driver.	 Prior to this,	the linker
     neglected to generate debugging information along with this text,
     making unwinding in the debugger and exception-handling routines
     problematic.  This	has been fixed.

     There are still problems with unwinding through linker-generated code
     that has been instrumented	for performance	evaluation. This will be
     addressed in future releases.

EEEEXXXXPPPPOOOORRRRTTTTIIIINNNNGGGG AAAANNNNDDDD HHHHIIIIDDDDIIIINNNNGGGG SSSSYYYYMMMMBBBBOOOOLLLLSSSS
     By	default, all symbols are exported.  That is, if	they were
     externally	visible	in the incoming	object file, they will be
     externally	visible	in the generated aaaa....oooouuuutttt or DSO.

     The one exception to this rule is when loading an archive library when
     building a	DSO.  In this case, the	default	behavior is to silently
     hide all symbols that come	from the archive library.  The ----aaaallllllll option
     can be used to override that default behavior.

     WARNING:  Be careful when using ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll and	archive	libraries.
     The ----hhhhiiiiddddddddeeeennnn____ssssyyyymmmmbbbboooollll	option silently	exports	the other symbols from the
     archive library when you might have expected them to remain hidden.

     When building a DSO it is a good idea to control its interface by
     exporting only those symbols that users are allowed to reference.
     This is best done by listing exported symbols in a	file and using the
     ----eeeexxxxppppoooorrrrtttt____ffffiiiilllleeee option.   This option	exports	the listed symbols and
     hides all others.

EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS
     The following sample lllldddd command line illustrates how to specify ----iiiinnnniiiitttt
     and ----ffffiiiinnnniiii functions:

ld ... -init mystartup1	-fini myshutdown1 -init	mystartup2 -fini myshutdown2

     The ----ffffiiiinnnniiii routines	execute	in the reverse order from how they are
     specified on the command line, mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222	first and mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111
     second.  You cannot run mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn2222 after mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111 because all
     local objects will	already	have been destroyed by mmmmyyyysssshhhhuuuuttttddddoooowwwwnnnn1111.

FFFFIIIILLLLEEEESSSS
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb33332222////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb33332222////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb33332222////lllliiiibbbb****....aaaa libraries

     ////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....ssssoooo
     ////uuuussssrrrr////lllliiiibbbb66664444////lllliiiibbbb****....aaaa
     ////uuuussssrrrr////lllliiiibbbb66664444////_s_o__l_o_c_a_t_i_o_n_s
     ////uuuussssrrrr////llllooooccccaaaallll////lllliiiibbbb66664444////lllliiiibbbb****....aaaa libraries

     aaaa....oooouuuutttt

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     aaaarrrr(1), aaaassss(1), cccccccc(1), ccccoooolllllllliiiiddddeeee(1), ffff77777777(1), ffff99990000(1), hhhhiiiinnnnvvvv(1M),	mmmmaaaakkkkeeee(1),
     pppprrrrooooffff(1), rrrrqqqqssss(1)

     llllsssseeeeeeeekkkk(2), mmmmmmmmaaaapppp(2),	ooooppppeeeennnn(2), rrrreeeeaaaadddd(2)

     eeeennnndddd(3C)

     eeeellllffff(4)

     ddddssssoooo(5), ggggpppp____oooovvvveeeerrrrfffflllloooowwww(5), oooopppptttt(5), rrrrlllldddd(5)

     _M_I_P_S_p_r_o _N_3_2/_6_4 _C_o_m_p_i_l_i_n_g _a_n_d _P_e_r_f_o_r_m_a_n_c_e _T_u_n_i_n_g _G_u_i_d_e
